{"id":"01d5e4a446b0f83b389687d96d1512c9","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual override returns (uint256[] memory) {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    mapping(uint256 => uint256) private _totalSupply;\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return ERC1155Supply.totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        if (from == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                _totalSupply[ids[i]] += amounts[i];\n            }\n        }\n\n        if (to == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 id = ids[i];\n                uint256 amount = amounts[i];\n                uint256 supply = _totalSupply[id];\n                require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\");\n                unchecked {\n                    _totalSupply[id] = supply - amount;\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/Items.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\n\n\n\ncontract Items is ERC1155, Ownable, ERC1155Burnable, ERC1155Supply {\n\n    uint256 public constant EMAIL = 0;\n    uint256 public constant MEMO = 1;\n    string baseURI;\n\n\n\n    function setBaseURI(string memory newuri) public onlyOwner {\n        _setURI(newuri);\n    }\n\n    constructor() ERC1155(\"https://ipfs.io/ipfs/QmUhWYBz7ifYXdKMwfd7Fzr5bUeLrjGjMEKinzVbSfm1hG/{id}.json\"\n    ) {\n        _mint(msg.sender, EMAIL, 100, \"\");\n        _mint(msg.sender, MEMO, 100, \"\");\n        baseURI = \"https://ipfs.io/ipfs/QmUhWYBz7ifYXdKMwfd7Fzr5bUeLrjGjMEKinzVbSfm1hG\";\n\n    }\n\n\n    function transferTo(\n        uint256 tokenId,\n        address recipient\n    ) external onlyOwner {\n            _safeTransferFrom(msg.sender, recipient, tokenId, 1, \"\");\n    }\n\n    function mintTo(address _to, uint256 _count, uint256 _tokenId) \n        public \n    {\n        _mint(_to,  _count, _tokenId, \"\");\n    }\n\n      // Turns uint256 into string\n  function uintToStr(uint256 _i) internal pure returns (string memory _uintAsString) {\n    if (_i == 0) {\n      return '0';\n    }\n    uint256 j = _i;\n    uint256 len;\n    while (j != 0) {\n      len++;\n      j /= 10;\n    }\n    bytes memory bstr = new bytes(len);\n    uint256 k = len;\n    while (_i != 0) {\n      k = k - 1;\n      uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\n      bytes1 b1 = bytes1(temp);\n      bstr[k] = b1;\n      _i /= 10;\n    }\n    return string(bstr);\n  }\n\n  // Token URI getter function\n  function tokenURI(uint256 tokenId) public view returns (string memory) {\n    return string(abi.encodePacked(baseURI, '/', uintToStr(tokenId), '.json'));\n  }\n\n    \n// The following functions are overrides required by Solidity.\n  function _beforeTokenTransfer(\n    address operator,\n    address from,\n    address to,\n    uint256[] memory ids,\n    uint256[] memory amounts,\n    bytes memory data\n  ) internal override(ERC1155, ERC1155Supply) {\n    super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n  }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2091],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":2092,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2091,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,2091],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Address":[2069],"Context":[2091],"ERC1155":[1335],"ERC165":[2115],"IERC1155":[1457],"IERC1155MetadataURI":[1739],"IERC1155Receiver":[1498],"IERC165":[2127]},"id":1336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1458,"src":"134:24:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1499,"src":"159:32:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1740,"src":"192:46:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":2070,"src":"239:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":2092,"src":"273:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":2116,"src":"307:46:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":122,"name":"Context","nameLocations":["590:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2091,"src":"590:7:1"},"id":123,"nodeType":"InheritanceSpecifier","src":"590:7:1"},{"baseName":{"id":124,"name":"ERC165","nameLocations":["599:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":2115,"src":"599:6:1"},"id":125,"nodeType":"InheritanceSpecifier","src":"599:6:1"},{"baseName":{"id":126,"name":"IERC1155","nameLocations":["607:8:1"],"nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"607:8:1"},"id":127,"nodeType":"InheritanceSpecifier","src":"607:8:1"},{"baseName":{"id":128,"name":"IERC1155MetadataURI","nameLocations":["617:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"617:19:1"},"id":129,"nodeType":"InheritanceSpecifier","src":"617:19:1"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"355:214:1","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"},"fullyImplemented":true,"id":1335,"linearizedBaseContracts":[1335,1739,1457,2115,2127,2091],"name":"ERC1155","nameLocation":"579:7:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":132,"libraryName":{"id":130,"name":"Address","nameLocations":["649:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2069,"src":"649:7:1"},"nodeType":"UsingForDirective","src":"643:26:1","typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":138,"mutability":"mutable","name":"_balances","nameLocation":"780:9:1","nodeType":"VariableDeclaration","scope":1335,"src":"724:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":137,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"724:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":136,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"743:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":144,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"899:18:1","nodeType":"VariableDeclaration","scope":1335,"src":"846:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":143,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"846:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":142,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"865:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":141,"name":"bool","nodeType":"ElementaryTypeName","src":"884:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":146,"mutability":"mutable","name":"_uri","nameLocation":"1053:4:1","nodeType":"VariableDeclaration","scope":1335,"src":"1038:19:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":145,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":156,"nodeType":"Block","src":"1139:30:1","statements":[{"expression":{"arguments":[{"id":153,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"1157:4:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":152,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1149:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"ExpressionStatement","src":"1149:13:1"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"1064:38:1","text":" @dev See {_setURI}."},"id":157,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"uri_","nameLocation":"1133:4:1","nodeType":"VariableDeclaration","scope":157,"src":"1119:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":148,"name":"string","nodeType":"ElementaryTypeName","src":"1119:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1118:20:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"1139:0:1"},"scope":1335,"src":"1107:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2114,2126],"body":{"id":187,"nodeType":"Block","src":"1344:197:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1373:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":170,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"1393:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1457_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1457_$","typeString":"type(contract IERC1155)"}],"id":169,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1388:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1388:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1457","typeString":"type(contract IERC1155)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1403:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1388:26:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1373:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1430:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":176,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"1450:19:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1739_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1739_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":175,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1445:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1739","typeString":"type(contract IERC1155MetadataURI)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1471:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1445:37:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1430:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:109:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":183,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1522:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":181,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1498:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1335_$","typeString":"type(contract super ERC1155)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1504:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2114,"src":"1498:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1373:161:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":167,"id":186,"nodeType":"Return","src":"1354:180:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1175:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":188,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1245:17:1","nodeType":"FunctionDefinition","overrides":{"id":164,"nodeType":"OverrideSpecifier","overrides":[{"id":162,"name":"ERC165","nameLocations":["1312:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":2115,"src":"1312:6:1"},{"id":163,"name":"IERC165","nameLocations":["1320:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"1320:7:1"}],"src":"1303:25:1"},"parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"interfaceId","nameLocation":"1270:11:1","nodeType":"VariableDeclaration","scope":188,"src":"1263:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":159,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1263:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1262:20:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":188,"src":"1338:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1338:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1337:6:1"},"scope":1335,"src":"1236:305:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1738],"body":{"id":199,"nodeType":"Block","src":"2015:28:1","statements":[{"expression":{"id":197,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2032:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":196,"id":198,"nodeType":"Return","src":"2025:11:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1547:388:1","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":200,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1949:3:1","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"1982:8:1"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"1953:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1952:9:1"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"2000:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":194,"name":"string","nodeType":"ElementaryTypeName","src":"2000:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1999:15:1"},"scope":1335,"src":"1940:103:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1395],"body":{"id":227,"nodeType":"Block","src":"2280:132:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":212,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2298:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2309:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"2309:7:1","typeDescriptions":{}}},"id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2298:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2321:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""},"value":"ERC1155: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad","typeString":"literal_string \"ERC1155: address zero is not a valid owner\""}],"id":211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2290:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":220,"nodeType":"ExpressionStatement","src":"2290:76:1"},{"expression":{"baseExpression":{"baseExpression":{"id":221,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2383:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":223,"indexExpression":{"id":222,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"2393:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":225,"indexExpression":{"id":224,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2397:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2383:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":210,"id":226,"nodeType":"Return","src":"2376:29:1"}]},"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2049:131:1","text":" @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2194:9:1","nodeType":"FunctionDefinition","overrides":{"id":207,"nodeType":"OverrideSpecifier","overrides":[],"src":"2253:8:1"},"parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"account","nameLocation":"2212:7:1","nodeType":"VariableDeclaration","scope":228,"src":"2204:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2204:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"id","nameLocation":"2229:2:1","nodeType":"VariableDeclaration","scope":228,"src":"2221:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2203:29:1"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"2271:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2271:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2270:9:1"},"scope":1335,"src":"2185:227:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1408],"body":{"id":291,"nodeType":"Block","src":"2720:335:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":243,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2738:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2747:6:1","memberName":"length","nodeType":"MemberAccess","src":"2738:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":245,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"2757:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:6:1","memberName":"length","nodeType":"MemberAccess","src":"2757:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""},"value":"ERC1155: accounts and ids length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""}],"id":242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2730:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"2730:83:1"},{"assignments":[255],"declarations":[{"constant":false,"id":255,"mutability":"mutable","name":"batchBalances","nameLocation":"2841:13:1","nodeType":"VariableDeclaration","scope":291,"src":"2824:30:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":254,"nodeType":"ArrayTypeName","src":"2824:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":262,"initialValue":{"arguments":[{"expression":{"id":259,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2871:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2880:6:1","memberName":"length","nodeType":"MemberAccess","src":"2871:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2857:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":257,"nodeType":"ArrayTypeName","src":"2861:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2857:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2824:63:1"},{"body":{"id":287,"nodeType":"Block","src":"2944:74:1","statements":[{"expression":{"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":274,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2958:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":276,"indexExpression":{"id":275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2972:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2958:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":278,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2987:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":280,"indexExpression":{"id":279,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2996:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2987:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":281,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3000:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":283,"indexExpression":{"id":282,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3004:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":277,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"2977:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2977:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:49:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":286,"nodeType":"ExpressionStatement","src":"2958:49:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2918:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":268,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2922:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:6:1","memberName":"length","nodeType":"MemberAccess","src":"2922:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2918:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":288,"initializationExpression":{"assignments":[264],"declarations":[{"constant":false,"id":264,"mutability":"mutable","name":"i","nameLocation":"2911:1:1","nodeType":"VariableDeclaration","scope":288,"src":"2903:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":266,"initialValue":{"hexValue":"30","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2915:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2903:13:1"},"loopExpression":{"expression":{"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2939:3:1","subExpression":{"id":271,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2941:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":273,"nodeType":"ExpressionStatement","src":"2939:3:1"},"nodeType":"ForStatement","src":"2898:120:1"},{"expression":{"id":289,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3035:13:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":241,"id":290,"nodeType":"Return","src":"3028:20:1"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"2418:146:1","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":292,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2578:14:1","nodeType":"FunctionDefinition","overrides":{"id":237,"nodeType":"OverrideSpecifier","overrides":[],"src":"2684:8:1"},"parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"accounts","nameLocation":"2619:8:1","nodeType":"VariableDeclaration","scope":292,"src":"2602:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":231,"nodeType":"ArrayTypeName","src":"2602:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"ids","nameLocation":"2654:3:1","nodeType":"VariableDeclaration","scope":292,"src":"2637:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":234,"nodeType":"ArrayTypeName","src":"2637:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2592:71:1"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"2702:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2702:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":239,"nodeType":"ArrayTypeName","src":"2702:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2701:18:1"},"scope":1335,"src":"2569:486:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1416],"body":{"id":308,"nodeType":"Block","src":"3207:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":302,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"3236:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":304,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"3250:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"3260:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":301,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3217:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3217:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":307,"nodeType":"ExpressionStatement","src":"3217:52:1"}]},"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"3061:57:1","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":309,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3132:17:1","nodeType":"FunctionDefinition","overrides":{"id":299,"nodeType":"OverrideSpecifier","overrides":[],"src":"3198:8:1"},"parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"operator","nameLocation":"3158:8:1","nodeType":"VariableDeclaration","scope":309,"src":"3150:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"3150:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"approved","nameLocation":"3173:8:1","nodeType":"VariableDeclaration","scope":309,"src":"3168:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":296,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3149:33:1"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"3207:0:1"},"scope":1335,"src":"3123:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1426],"body":{"id":326,"nodeType":"Block","src":"3448:61:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":320,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3465:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":322,"indexExpression":{"id":321,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"3484:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3465:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":324,"indexExpression":{"id":323,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"3493:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3465:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":319,"id":325,"nodeType":"Return","src":"3458:44:1"}]},"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"3282:56:1","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":327,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3352:16:1","nodeType":"FunctionDefinition","overrides":{"id":316,"nodeType":"OverrideSpecifier","overrides":[],"src":"3424:8:1"},"parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"account","nameLocation":"3377:7:1","nodeType":"VariableDeclaration","scope":327,"src":"3369:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"operator","nameLocation":"3394:8:1","nodeType":"VariableDeclaration","scope":327,"src":"3386:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3368:35:1"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":327,"src":"3442:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":317,"name":"bool","nodeType":"ElementaryTypeName","src":"3442:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3441:6:1"},"scope":1335,"src":"3343:166:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1440],"body":{"id":364,"nodeType":"Block","src":"3745:225:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3776:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":344,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"3784:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3784:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3776:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":348,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3817:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"3823:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":347,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3800:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3776:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3850:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3755:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3755:153:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"ExpressionStatement","src":"3755:153:1"},{"expression":{"arguments":[{"id":357,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3936:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3942:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":359,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"3946:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":360,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3950:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":361,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3958:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":356,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3918:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3918:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"3918:45:1"}]},"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"3515:56:1","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":365,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3585:16:1","nodeType":"FunctionDefinition","overrides":{"id":340,"nodeType":"OverrideSpecifier","overrides":[],"src":"3736:8:1"},"parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"from","nameLocation":"3619:4:1","nodeType":"VariableDeclaration","scope":365,"src":"3611:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"3611:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"to","nameLocation":"3641:2:1","nodeType":"VariableDeclaration","scope":365,"src":"3633:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"3633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"id","nameLocation":"3661:2:1","nodeType":"VariableDeclaration","scope":365,"src":"3653:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"amount","nameLocation":"3681:6:1","nodeType":"VariableDeclaration","scope":365,"src":"3673:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3673:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"data","nameLocation":"3710:4:1","nodeType":"VariableDeclaration","scope":365,"src":"3697:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":337,"name":"bytes","nodeType":"ElementaryTypeName","src":"3697:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3601:119:1"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"3745:0:1"},"scope":1335,"src":"3576:394:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1456],"body":{"id":404,"nodeType":"Block","src":"4236:232:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":383,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4267:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":384,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"4275:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4267:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":388,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4308:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":389,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"4314:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4314:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":387,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"4291:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4291:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4267:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4341:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4246:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4246:153:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"ExpressionStatement","src":"4246:153:1"},{"expression":{"arguments":[{"id":397,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4432:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":398,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4438:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":399,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4442:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":400,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4447:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":401,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4456:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":396,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"4409:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"ExpressionStatement","src":"4409:52:1"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"3976:61:1","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":405,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4051:21:1","nodeType":"FunctionDefinition","overrides":{"id":380,"nodeType":"OverrideSpecifier","overrides":[],"src":"4227:8:1"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"from","nameLocation":"4090:4:1","nodeType":"VariableDeclaration","scope":405,"src":"4082:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"4082:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"to","nameLocation":"4112:2:1","nodeType":"VariableDeclaration","scope":405,"src":"4104:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"4104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"ids","nameLocation":"4141:3:1","nodeType":"VariableDeclaration","scope":405,"src":"4124:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":372,"nodeType":"ArrayTypeName","src":"4124:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"amounts","nameLocation":"4171:7:1","nodeType":"VariableDeclaration","scope":405,"src":"4154:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"4154:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":375,"nodeType":"ArrayTypeName","src":"4154:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"data","nameLocation":"4201:4:1","nodeType":"VariableDeclaration","scope":405,"src":"4188:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":377,"name":"bytes","nodeType":"ElementaryTypeName","src":"4188:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4072:139:1"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"4236:0:1"},"scope":1335,"src":"4042:426:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":521,"nodeType":"Block","src":"5081:784:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":420,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5099:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5113:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5105:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"5105:7:1","typeDescriptions":{}}},"id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5105:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5099:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5117:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5091:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"5091:66:1"},{"assignments":[430],"declarations":[{"constant":false,"id":430,"mutability":"mutable","name":"operator","nameLocation":"5176:8:1","nodeType":"VariableDeclaration","scope":521,"src":"5168:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":433,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":431,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"5187:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5168:31:1"},{"assignments":[438],"declarations":[{"constant":false,"id":438,"mutability":"mutable","name":"ids","nameLocation":"5226:3:1","nodeType":"VariableDeclaration","scope":521,"src":"5209:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"5209:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"5209:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"id":440,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5250:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":439,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"5232:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5232:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5209:44:1"},{"assignments":[447],"declarations":[{"constant":false,"id":447,"mutability":"mutable","name":"amounts","nameLocation":"5280:7:1","nodeType":"VariableDeclaration","scope":521,"src":"5263:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":446,"nodeType":"ArrayTypeName","src":"5263:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":451,"initialValue":{"arguments":[{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5308:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":448,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"5290:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5263:52:1"},{"expression":{"arguments":[{"id":453,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5347:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5357:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":455,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5363:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":456,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5367:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":457,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"5372:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":458,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5381:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":452,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"5326:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"ExpressionStatement","src":"5326:60:1"},{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"fromBalance","nameLocation":"5405:11:1","nodeType":"VariableDeclaration","scope":521,"src":"5397:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"5397:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":468,"initialValue":{"baseExpression":{"baseExpression":{"id":463,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5419:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":465,"indexExpression":{"id":464,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5429:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5419:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":467,"indexExpression":{"id":466,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5433:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5419:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5397:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5456:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":471,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5471:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5456:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5479:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5448:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5448:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"5448:76:1"},{"id":486,"nodeType":"UncheckedBlock","src":"5534:77:1","statements":[{"expression":{"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":476,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5558:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":479,"indexExpression":{"id":477,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5568:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5558:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":480,"indexExpression":{"id":478,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5572:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5558:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":481,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5580:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":482,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5594:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5580:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5558:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":485,"nodeType":"ExpressionStatement","src":"5558:42:1"}]},{"expression":{"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":487,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"5620:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":490,"indexExpression":{"id":488,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5630:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5620:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":491,"indexExpression":{"id":489,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5634:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5620:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":492,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5641:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5620:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":494,"nodeType":"ExpressionStatement","src":"5620:27:1"},{"eventCall":{"arguments":[{"id":496,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5678:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5688:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5694:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5698:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":500,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5702:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":495,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"5663:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5663:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"EmitStatement","src":"5658:51:1"},{"expression":{"arguments":[{"id":504,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5740:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5750:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5756:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":507,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5760:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":508,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"5765:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":509,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5774:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":503,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"5720:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"5720:59:1"},{"expression":{"arguments":[{"id":513,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5821:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":514,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5831:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5837:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":516,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5841:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":517,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5845:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":518,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5853:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":512,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5790:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5790:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"5790:68:1"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"4474:439:1","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":522,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"4927:17:1","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"from","nameLocation":"4962:4:1","nodeType":"VariableDeclaration","scope":522,"src":"4954:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"to","nameLocation":"4984:2:1","nodeType":"VariableDeclaration","scope":522,"src":"4976:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"4976:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"id","nameLocation":"5004:2:1","nodeType":"VariableDeclaration","scope":522,"src":"4996:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"amount","nameLocation":"5024:6:1","nodeType":"VariableDeclaration","scope":522,"src":"5016:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"5016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"data","nameLocation":"5053:4:1","nodeType":"VariableDeclaration","scope":522,"src":"5040:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":415,"name":"bytes","nodeType":"ElementaryTypeName","src":"5040:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4944:119:1"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"5081:0:1"},"scope":1335,"src":"4918:947:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":656,"nodeType":"Block","src":"6399:927:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":539,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6417:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6421:6:1","memberName":"length","nodeType":"MemberAccess","src":"6417:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":541,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6431:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6439:6:1","memberName":"length","nodeType":"MemberAccess","src":"6431:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6417:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6447:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6409:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6409:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"ExpressionStatement","src":"6409:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"6508:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6522:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6514:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"6514:7:1","typeDescriptions":{}}},"id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6514:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6508:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6526:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6500:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6500:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"6500:66:1"},{"assignments":[558],"declarations":[{"constant":false,"id":558,"mutability":"mutable","name":"operator","nameLocation":"6585:8:1","nodeType":"VariableDeclaration","scope":656,"src":"6577:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"6577:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":561,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":559,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"6596:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6596:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6577:31:1"},{"expression":{"arguments":[{"id":563,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6640:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"6650:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"6656:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6660:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":567,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6665:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":568,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6674:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":562,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6619:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":570,"nodeType":"ExpressionStatement","src":"6619:60:1"},{"body":{"id":628,"nodeType":"Block","src":"6731:370:1","statements":[{"assignments":[583],"declarations":[{"constant":false,"id":583,"mutability":"mutable","name":"id","nameLocation":"6753:2:1","nodeType":"VariableDeclaration","scope":628,"src":"6745:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"6745:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":587,"initialValue":{"baseExpression":{"id":584,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6758:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":586,"indexExpression":{"id":585,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6762:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6758:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6745:19:1"},{"assignments":[589],"declarations":[{"constant":false,"id":589,"mutability":"mutable","name":"amount","nameLocation":"6786:6:1","nodeType":"VariableDeclaration","scope":628,"src":"6778:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"6778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":593,"initialValue":{"baseExpression":{"id":590,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6795:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":592,"indexExpression":{"id":591,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6803:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6795:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6778:27:1"},{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"fromBalance","nameLocation":"6828:11:1","nodeType":"VariableDeclaration","scope":628,"src":"6820:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"6820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":601,"initialValue":{"baseExpression":{"baseExpression":{"id":596,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6842:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":598,"indexExpression":{"id":597,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"6852:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6842:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":600,"indexExpression":{"id":599,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"6856:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6842:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6820:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"6883:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":604,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6898:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6906:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6875:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6875:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"ExpressionStatement","src":"6875:76:1"},{"id":619,"nodeType":"UncheckedBlock","src":"6965:85:1","statements":[{"expression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":609,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"6993:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":612,"indexExpression":{"id":610,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7003:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6993:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":613,"indexExpression":{"id":611,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7007:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6993:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"7015:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":615,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7029:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7015:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6993:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":618,"nodeType":"ExpressionStatement","src":"6993:42:1"}]},{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":620,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"7063:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":623,"indexExpression":{"id":621,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7073:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7063:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":624,"indexExpression":{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7077:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7063:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":625,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7084:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7063:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":627,"nodeType":"ExpressionStatement","src":"7063:27:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6710:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":576,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6714:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6718:6:1","memberName":"length","nodeType":"MemberAccess","src":"6714:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6710:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":629,"initializationExpression":{"assignments":[572],"declarations":[{"constant":false,"id":572,"mutability":"mutable","name":"i","nameLocation":"6703:1:1","nodeType":"VariableDeclaration","scope":629,"src":"6695:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"6695:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":574,"initialValue":{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6707:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6695:13:1"},"loopExpression":{"expression":{"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6726:3:1","subExpression":{"id":579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6728:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":581,"nodeType":"ExpressionStatement","src":"6726:3:1"},"nodeType":"ForStatement","src":"6690:411:1"},{"eventCall":{"arguments":[{"id":631,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7130:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7140:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7146:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7150:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":635,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7155:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":630,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7116:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7116:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"EmitStatement","src":"7111:52:1"},{"expression":{"arguments":[{"id":639,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7194:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7204:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":641,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7210:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7214:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":643,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7219:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":644,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"7228:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":638,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"7174:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7174:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"7174:59:1"},{"expression":{"arguments":[{"id":648,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7280:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7290:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7296:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7300:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":652,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"7305:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":653,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"7314:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":647,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"7244:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7244:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"ExpressionStatement","src":"7244:75:1"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"5871:335:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":657,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"6220:22:1","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"from","nameLocation":"6260:4:1","nodeType":"VariableDeclaration","scope":657,"src":"6252:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"6252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"to","nameLocation":"6282:2:1","nodeType":"VariableDeclaration","scope":657,"src":"6274:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"6274:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"ids","nameLocation":"6311:3:1","nodeType":"VariableDeclaration","scope":657,"src":"6294:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":529,"nodeType":"ArrayTypeName","src":"6294:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"amounts","nameLocation":"6341:7:1","nodeType":"VariableDeclaration","scope":657,"src":"6324:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"6324:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":532,"nodeType":"ArrayTypeName","src":"6324:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"data","nameLocation":"6371:4:1","nodeType":"VariableDeclaration","scope":657,"src":"6358:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":534,"name":"bytes","nodeType":"ElementaryTypeName","src":"6358:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6242:139:1"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"6399:0:1"},"scope":1335,"src":"6211:1115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":667,"nodeType":"Block","src":"8205:30:1","statements":[{"expression":{"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":663,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"8215:4:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":664,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"8222:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8215:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":666,"nodeType":"ExpressionStatement","src":"8215:13:1"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"7332:812:1","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":668,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"8158:7:1","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"newuri","nameLocation":"8180:6:1","nodeType":"VariableDeclaration","scope":668,"src":"8166:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":659,"name":"string","nodeType":"ElementaryTypeName","src":"8166:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8165:22:1"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"8205:0:1"},"scope":1335,"src":"8149:86:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":768,"nodeType":"Block","src":"8699:580:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":681,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8717:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8731:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8723:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"8723:7:1","typeDescriptions":{}}},"id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8717:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8735:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8709:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8709:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"ExpressionStatement","src":"8709:62:1"},{"assignments":[691],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"operator","nameLocation":"8790:8:1","nodeType":"VariableDeclaration","scope":768,"src":"8782:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"8782:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":694,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":692,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"8801:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8801:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8782:31:1"},{"assignments":[699],"declarations":[{"constant":false,"id":699,"mutability":"mutable","name":"ids","nameLocation":"8840:3:1","nodeType":"VariableDeclaration","scope":768,"src":"8823:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"8823:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":698,"nodeType":"ArrayTypeName","src":"8823:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":703,"initialValue":{"arguments":[{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"8864:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":700,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8846:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8846:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8823:44:1"},{"assignments":[708],"declarations":[{"constant":false,"id":708,"mutability":"mutable","name":"amounts","nameLocation":"8894:7:1","nodeType":"VariableDeclaration","scope":768,"src":"8877:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"8877:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ArrayTypeName","src":"8877:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[{"id":710,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"8922:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":709,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8904:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8904:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8877:52:1"},{"expression":{"arguments":[{"id":714,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"8961:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8979:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8971:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"8971:7:1","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8971:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8983:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"8987:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":721,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"8992:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":722,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9001:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":713,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"8940:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8940:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"8940:66:1"},{"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":725,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"9017:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":728,"indexExpression":{"id":726,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9027:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9017:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":729,"indexExpression":{"id":727,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9031:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9017:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":730,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9038:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9017:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":732,"nodeType":"ExpressionStatement","src":"9017:27:1"},{"eventCall":{"arguments":[{"id":734,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9074:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9092:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9084:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"9084:7:1","typeDescriptions":{}}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9084:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":739,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9096:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9100:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":741,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9104:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"9059:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9059:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"EmitStatement","src":"9054:57:1"},{"expression":{"arguments":[{"id":745,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9142:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9160:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"9152:7:1","typeDescriptions":{}}},"id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9164:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":751,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"9168:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":752,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"9173:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":753,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9182:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":744,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"9122:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9122:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"9122:65:1"},{"expression":{"arguments":[{"id":757,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9229:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9247:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9239:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"9239:7:1","typeDescriptions":{}}},"id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9239:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":762,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9251:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":763,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9255:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":764,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9259:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":765,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9267:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":756,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"9198:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9198:74:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":767,"nodeType":"ExpressionStatement","src":"9198:74:1"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"8241:362:1","text":" @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":769,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8617:5:1","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"to","nameLocation":"8631:2:1","nodeType":"VariableDeclaration","scope":769,"src":"8623:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"8623:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"id","nameLocation":"8643:2:1","nodeType":"VariableDeclaration","scope":769,"src":"8635:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"amount","nameLocation":"8655:6:1","nodeType":"VariableDeclaration","scope":769,"src":"8647:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"data","nameLocation":"8676:4:1","nodeType":"VariableDeclaration","scope":769,"src":"8663:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":676,"name":"bytes","nodeType":"ElementaryTypeName","src":"8663:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8622:59:1"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[],"src":"8699:0:1"},"scope":1335,"src":"8608:671:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":879,"nodeType":"Block","src":"9823:637:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9841:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9855:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9847:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"9847:7:1","typeDescriptions":{}}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9847:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9841:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9859:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":783,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9833:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9833:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"9833:62:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":794,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9913:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9917:6:1","memberName":"length","nodeType":"MemberAccess","src":"9913:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":796,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"9927:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9935:6:1","memberName":"length","nodeType":"MemberAccess","src":"9927:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9913:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9943:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9905:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9905:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"ExpressionStatement","src":"9905:81:1"},{"assignments":[803],"declarations":[{"constant":false,"id":803,"mutability":"mutable","name":"operator","nameLocation":"10005:8:1","nodeType":"VariableDeclaration","scope":879,"src":"9997:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"9997:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":806,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":804,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"10016:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10016:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9997:31:1"},{"expression":{"arguments":[{"id":808,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10060:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:1","typeDescriptions":{}}},"id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10082:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10086:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":815,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10091:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":816,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10100:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":807,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"10039:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10039:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"10039:66:1"},{"body":{"id":842,"nodeType":"Block","src":"10157:60:1","statements":[{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":830,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"10171:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":835,"indexExpression":{"baseExpression":{"id":831,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10181:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":833,"indexExpression":{"id":832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10185:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10181:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10171:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":836,"indexExpression":{"id":834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10189:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10171:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":837,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10196:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":839,"indexExpression":{"id":838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10204:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10196:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ExpressionStatement","src":"10171:35:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10136:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":824,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10140:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10144:6:1","memberName":"length","nodeType":"MemberAccess","src":"10140:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10136:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"initializationExpression":{"assignments":[820],"declarations":[{"constant":false,"id":820,"mutability":"mutable","name":"i","nameLocation":"10129:1:1","nodeType":"VariableDeclaration","scope":843,"src":"10121:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":822,"initialValue":{"hexValue":"30","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10133:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:13:1"},"loopExpression":{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10152:3:1","subExpression":{"id":827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10152:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"10152:3:1"},"nodeType":"ForStatement","src":"10116:101:1"},{"eventCall":{"arguments":[{"id":845,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10246:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10264:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10256:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"10256:7:1","typeDescriptions":{}}},"id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10256:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":850,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10268:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":851,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10272:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":852,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10277:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":844,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10232:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10232:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"EmitStatement","src":"10227:58:1"},{"expression":{"arguments":[{"id":856,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10316:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10334:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10326:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"10326:7:1","typeDescriptions":{}}},"id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10326:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10338:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":862,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10342:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":863,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10347:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":864,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10356:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":855,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"10296:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10296:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":866,"nodeType":"ExpressionStatement","src":"10296:65:1"},{"expression":{"arguments":[{"id":868,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10408:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10426:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10418:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10418:7:1","typeDescriptions":{}}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10418:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":873,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10430:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"10434:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":875,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10439:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":876,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10448:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":867,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"10372:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10372:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"10372:81:1"}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"9285:379:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":880,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"9678:10:1","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"to","nameLocation":"9706:2:1","nodeType":"VariableDeclaration","scope":880,"src":"9698:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"9698:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"ids","nameLocation":"9735:3:1","nodeType":"VariableDeclaration","scope":880,"src":"9718:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"9718:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":774,"nodeType":"ArrayTypeName","src":"9718:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"amounts","nameLocation":"9765:7:1","nodeType":"VariableDeclaration","scope":880,"src":"9748:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"9748:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":777,"nodeType":"ArrayTypeName","src":"9748:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"data","nameLocation":"9795:4:1","nodeType":"VariableDeclaration","scope":880,"src":"9782:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":779,"name":"bytes","nodeType":"ElementaryTypeName","src":"9782:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9688:117:1"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"9823:0:1"},"scope":1335,"src":"9669:791:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":984,"nodeType":"Block","src":"10820:682:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":891,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"10838:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10854:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10846:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"10846:7:1","typeDescriptions":{}}},"id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10846:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10838:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10858:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10830:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10830:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":899,"nodeType":"ExpressionStatement","src":"10830:66:1"},{"assignments":[901],"declarations":[{"constant":false,"id":901,"mutability":"mutable","name":"operator","nameLocation":"10915:8:1","nodeType":"VariableDeclaration","scope":984,"src":"10907:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"10907:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":904,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":902,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"10926:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10926:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10907:31:1"},{"assignments":[909],"declarations":[{"constant":false,"id":909,"mutability":"mutable","name":"ids","nameLocation":"10965:3:1","nodeType":"VariableDeclaration","scope":984,"src":"10948:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":908,"nodeType":"ArrayTypeName","src":"10948:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":913,"initialValue":{"arguments":[{"id":911,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"10989:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":910,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10971:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10971:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10948:44:1"},{"assignments":[918],"declarations":[{"constant":false,"id":918,"mutability":"mutable","name":"amounts","nameLocation":"11019:7:1","nodeType":"VariableDeclaration","scope":984,"src":"11002:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"11002:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":917,"nodeType":"ArrayTypeName","src":"11002:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":922,"initialValue":{"arguments":[{"id":920,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11047:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":919,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"11029:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11029:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11002:52:1"},{"expression":{"arguments":[{"id":924,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11086:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11096:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11110:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11102:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"11102:7:1","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11102:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":930,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"11114:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":931,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"11119:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11128:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":923,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"11065:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"ExpressionStatement","src":"11065:66:1"},{"assignments":[936],"declarations":[{"constant":false,"id":936,"mutability":"mutable","name":"fromBalance","nameLocation":"11150:11:1","nodeType":"VariableDeclaration","scope":984,"src":"11142:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"11142:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":942,"initialValue":{"baseExpression":{"baseExpression":{"id":937,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"11164:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":939,"indexExpression":{"id":938,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"11174:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":941,"indexExpression":{"id":940,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11178:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11142:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"11201:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":945,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11216:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11201:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11224:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11193:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11193:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"11193:70:1"},{"id":960,"nodeType":"UncheckedBlock","src":"11273:77:1","statements":[{"expression":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":950,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"11297:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":953,"indexExpression":{"id":951,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"11307:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11297:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":954,"indexExpression":{"id":952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11311:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11297:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":955,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"11319:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":956,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11333:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11319:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11297:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":959,"nodeType":"ExpressionStatement","src":"11297:42:1"}]},{"eventCall":{"arguments":[{"id":962,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11380:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11390:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11404:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11396:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"11396:7:1","typeDescriptions":{}}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11396:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"11408:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"11412:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":961,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"11365:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11365:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"EmitStatement","src":"11360:59:1"},{"expression":{"arguments":[{"id":973,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"11450:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"11460:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:1","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":979,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"11478:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":980,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"11483:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11492:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":972,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"11430:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11430:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":983,"nodeType":"ExpressionStatement","src":"11430:65:1"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"10466:275:1","text":" @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."},"id":985,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10755:5:1","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"from","nameLocation":"10769:4:1","nodeType":"VariableDeclaration","scope":985,"src":"10761:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"10761:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"id","nameLocation":"10783:2:1","nodeType":"VariableDeclaration","scope":985,"src":"10775:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"10775:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"amount","nameLocation":"10795:6:1","nodeType":"VariableDeclaration","scope":985,"src":"10787:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10760:42:1"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"10820:0:1"},"scope":1335,"src":"10746:756:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"11840:814:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"11858:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11874:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11866:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"11866:7:1","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11866:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11858:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11878:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11850:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11850:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"ExpressionStatement","src":"11850:66:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1008,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11934:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11938:6:1","memberName":"length","nodeType":"MemberAccess","src":"11934:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1010,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"11948:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11956:6:1","memberName":"length","nodeType":"MemberAccess","src":"11948:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11934:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11964:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":1007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11926:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11926:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"ExpressionStatement","src":"11926:81:1"},{"assignments":[1017],"declarations":[{"constant":false,"id":1017,"mutability":"mutable","name":"operator","nameLocation":"12026:8:1","nodeType":"VariableDeclaration","scope":1107,"src":"12018:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1020,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1018,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"12037:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12037:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12018:31:1"},{"expression":{"arguments":[{"id":1022,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12081:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12091:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12105:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12097:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"12097:7:1","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12097:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1028,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12109:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1029,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12114:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12123:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1021,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"12060:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12060:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"ExpressionStatement","src":"12060:66:1"},{"body":{"id":1082,"nodeType":"Block","src":"12178:323:1","statements":[{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"id","nameLocation":"12200:2:1","nodeType":"VariableDeclaration","scope":1082,"src":"12192:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"12192:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1049,"initialValue":{"baseExpression":{"id":1046,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12205:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1048,"indexExpression":{"id":1047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12209:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12205:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12192:19:1"},{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"amount","nameLocation":"12233:6:1","nodeType":"VariableDeclaration","scope":1082,"src":"12225:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1055,"initialValue":{"baseExpression":{"id":1052,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12242:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1054,"indexExpression":{"id":1053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12250:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12242:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12225:27:1"},{"assignments":[1057],"declarations":[{"constant":false,"id":1057,"mutability":"mutable","name":"fromBalance","nameLocation":"12275:11:1","nodeType":"VariableDeclaration","scope":1082,"src":"12267:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1063,"initialValue":{"baseExpression":{"baseExpression":{"id":1058,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"12289:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1060,"indexExpression":{"id":1059,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"12299:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1062,"indexExpression":{"id":1061,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12303:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12289:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12267:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12330:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1066,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"12345:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12330:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12353:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":1064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12322:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12322:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"ExpressionStatement","src":"12322:70:1"},{"id":1081,"nodeType":"UncheckedBlock","src":"12406:85:1","statements":[{"expression":{"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1071,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"12434:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1074,"indexExpression":{"id":1072,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"12444:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12434:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1075,"indexExpression":{"id":1073,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12448:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12434:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1076,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12456:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1077,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"12470:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12456:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12434:42:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1080,"nodeType":"ExpressionStatement","src":"12434:42:1"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12157:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1038,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12161:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:6:1","memberName":"length","nodeType":"MemberAccess","src":"12161:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12157:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1083,"initializationExpression":{"assignments":[1034],"declarations":[{"constant":false,"id":1034,"mutability":"mutable","name":"i","nameLocation":"12150:1:1","nodeType":"VariableDeclaration","scope":1083,"src":"12142:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"12142:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1036,"initialValue":{"hexValue":"30","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12142:13:1"},"loopExpression":{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12173:3:1","subExpression":{"id":1041,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12173:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1043,"nodeType":"ExpressionStatement","src":"12173:3:1"},"nodeType":"ForStatement","src":"12137:364:1"},{"eventCall":{"arguments":[{"id":1085,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12530:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12540:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12554:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12546:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"12546:7:1","typeDescriptions":{}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12546:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1091,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12558:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1092,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12563:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1084,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"12516:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12516:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"EmitStatement","src":"12511:60:1"},{"expression":{"arguments":[{"id":1096,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12602:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1097,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"12612:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12618:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"12618:7:1","typeDescriptions":{}}},"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12618:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1102,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12630:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1103,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"12635:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12644:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1095,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"12582:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12582:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"12582:65:1"}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"11508:228:1","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"11750:10:1","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"from","nameLocation":"11769:4:1","nodeType":"VariableDeclaration","scope":1108,"src":"11761:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"11761:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"ids","nameLocation":"11792:3:1","nodeType":"VariableDeclaration","scope":1108,"src":"11775:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"11775:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":990,"nodeType":"ArrayTypeName","src":"11775:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"amounts","nameLocation":"11814:7:1","nodeType":"VariableDeclaration","scope":1108,"src":"11797:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"11797:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":993,"nodeType":"ArrayTypeName","src":"11797:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11760:62:1"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"11840:0:1"},"scope":1335,"src":"11741:913:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"12883:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"12901:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1120,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"12910:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12901:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12920:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""},"value":"ERC1155: setting approval status for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""}],"id":1118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12893:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12893:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1124,"nodeType":"ExpressionStatement","src":"12893:71:1"},{"expression":{"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1125,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"12974:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1128,"indexExpression":{"id":1126,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"12993:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12974:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1129,"indexExpression":{"id":1127,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"13000:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12974:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1130,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"13012:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12974:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1132,"nodeType":"ExpressionStatement","src":"12974:46:1"},{"eventCall":{"arguments":[{"id":1134,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"13050:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1135,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"13057:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"13067:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1133,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"13035:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13035:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"EmitStatement","src":"13030:46:1"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"12660:125:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12799:18:1","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"owner","nameLocation":"12826:5:1","nodeType":"VariableDeclaration","scope":1140,"src":"12818:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"12818:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"operator","nameLocation":"12841:8:1","nodeType":"VariableDeclaration","scope":1140,"src":"12833:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"12833:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"approved","nameLocation":"12856:8:1","nodeType":"VariableDeclaration","scope":1140,"src":"12851:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1114,"name":"bool","nodeType":"ElementaryTypeName","src":"12851:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12817:48:1"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"12883:0:1"},"scope":1335,"src":"12790:293:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"14231:2:1","statements":[]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"13089:925:1","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14028:20:1","nodeType":"FunctionDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"operator","nameLocation":"14066:8:1","nodeType":"VariableDeclaration","scope":1159,"src":"14058:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"14058:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"from","nameLocation":"14092:4:1","nodeType":"VariableDeclaration","scope":1159,"src":"14084:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"14084:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"to","nameLocation":"14114:2:1","nodeType":"VariableDeclaration","scope":1159,"src":"14106:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"14106:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"ids","nameLocation":"14143:3:1","nodeType":"VariableDeclaration","scope":1159,"src":"14126:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"14126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"nodeType":"ArrayTypeName","src":"14126:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"amounts","nameLocation":"14173:7:1","nodeType":"VariableDeclaration","scope":1159,"src":"14156:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"14156:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1152,"nodeType":"ArrayTypeName","src":"14156:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"data","nameLocation":"14203:4:1","nodeType":"VariableDeclaration","scope":1159,"src":"14190:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1154,"name":"bytes","nodeType":"ElementaryTypeName","src":"14190:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14048:165:1"},"returnParameters":{"id":1157,"nodeType":"ParameterList","parameters":[],"src":"14231:0:1"},"scope":1335,"src":"14019:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1177,"nodeType":"Block","src":"15377:2:1","statements":[]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"14239:922:1","text":" @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15175:19:1","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"operator","nameLocation":"15212:8:1","nodeType":"VariableDeclaration","scope":1178,"src":"15204:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"15204:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"from","nameLocation":"15238:4:1","nodeType":"VariableDeclaration","scope":1178,"src":"15230:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"15230:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"to","nameLocation":"15260:2:1","nodeType":"VariableDeclaration","scope":1178,"src":"15252:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"15252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"ids","nameLocation":"15289:3:1","nodeType":"VariableDeclaration","scope":1178,"src":"15272:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"15272:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1168,"nodeType":"ArrayTypeName","src":"15272:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"amounts","nameLocation":"15319:7:1","nodeType":"VariableDeclaration","scope":1178,"src":"15302:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"15302:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1171,"nodeType":"ArrayTypeName","src":"15302:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"data","nameLocation":"15349:4:1","nodeType":"VariableDeclaration","scope":1178,"src":"15336:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1173,"name":"bytes","nodeType":"ElementaryTypeName","src":"15336:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15194:165:1"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"15377:0:1"},"scope":1335,"src":"15166:213:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"15578:532:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1193,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"15592:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15595:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"15592:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15592:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"nodeType":"IfStatement","src":"15588:516:1","trueBody":{"id":1238,"nodeType":"Block","src":"15609:495:1","statements":[{"clauses":[{"block":{"id":1220,"nodeType":"Block","src":"15726:184:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1209,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"15748:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1210,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"15760:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15777:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1479,"src":"15760:34:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15795:8:1","memberName":"selector","nodeType":"MemberAccess","src":"15760:43:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15748:55:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"IfStatement","src":"15744:152:1","trueBody":{"id":1218,"nodeType":"Block","src":"15805:91:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15834:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1214,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15827:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15827:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"ExpressionStatement","src":"15827:50:1"}]}}]},"errorName":"","id":1221,"nodeType":"TryCatchClause","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"response","nameLocation":"15716:8:1","nodeType":"VariableDeclaration","scope":1221,"src":"15709:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1206,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15709:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15708:17:1"},"src":"15700:210:1"},{"block":{"id":1229,"nodeType":"Block","src":"15945:47:1","statements":[{"expression":{"arguments":[{"id":1226,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"15970:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1225,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"15963:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15963:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"15963:14:1"}]},"errorName":"Error","id":1230,"nodeType":"TryCatchClause","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"reason","nameLocation":"15937:6:1","nodeType":"VariableDeclaration","scope":1230,"src":"15923:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1222,"name":"string","nodeType":"ElementaryTypeName","src":"15923:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15922:22:1"},"src":"15911:81:1"},{"block":{"id":1235,"nodeType":"Block","src":"15999:95:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16024:54:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1231,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16017:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16017:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"ExpressionStatement","src":"16017:62:1"}]},"errorName":"","id":1236,"nodeType":"TryCatchClause","src":"15993:101:1"}],"externalCall":{"arguments":[{"id":1200,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"15666:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1201,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"15676:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1202,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"15682:2:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1203,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"15686:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1204,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"15694:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1197,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"15644:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1196,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"15627:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15627:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15648:17:1","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1479,"src":"15627:38:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15627:72:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1237,"nodeType":"TryStatement","src":"15623:471:1"}]}}]},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"15394:30:1","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"operator","nameLocation":"15442:8:1","nodeType":"VariableDeclaration","scope":1241,"src":"15434:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"15434:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"from","nameLocation":"15468:4:1","nodeType":"VariableDeclaration","scope":1241,"src":"15460:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"15460:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"to","nameLocation":"15490:2:1","nodeType":"VariableDeclaration","scope":1241,"src":"15482:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"15482:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"id","nameLocation":"15510:2:1","nodeType":"VariableDeclaration","scope":1241,"src":"15502:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"15502:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"amount","nameLocation":"15530:6:1","nodeType":"VariableDeclaration","scope":1241,"src":"15522:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"15522:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"data","nameLocation":"15559:4:1","nodeType":"VariableDeclaration","scope":1241,"src":"15546:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1189,"name":"bytes","nodeType":"ElementaryTypeName","src":"15546:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15424:145:1"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"15578:0:1"},"scope":1335,"src":"15385:725:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1305,"nodeType":"Block","src":"16334:574:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1258,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"16348:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16351:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1757,"src":"16348:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16348:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1304,"nodeType":"IfStatement","src":"16344:558:1","trueBody":{"id":1303,"nodeType":"Block","src":"16365:537:1","statements":[{"clauses":[{"block":{"id":1285,"nodeType":"Block","src":"16519:189:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1274,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"16541:8:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1275,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"16553:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16570:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"16553:39:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16593:8:1","memberName":"selector","nodeType":"MemberAccess","src":"16553:48:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"16541:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1284,"nodeType":"IfStatement","src":"16537:157:1","trueBody":{"id":1283,"nodeType":"Block","src":"16603:91:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16632:42:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1279,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16625:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16625:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"ExpressionStatement","src":"16625:50:1"}]}}]},"errorName":"","id":1286,"nodeType":"TryCatchClause","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"response","nameLocation":"16496:8:1","nodeType":"VariableDeclaration","scope":1286,"src":"16489:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1271,"name":"bytes4","nodeType":"ElementaryTypeName","src":"16489:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"16471:47:1"},"src":"16463:245:1"},{"block":{"id":1294,"nodeType":"Block","src":"16743:47:1","statements":[{"expression":{"arguments":[{"id":1291,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"16768:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1290,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16761:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16761:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1293,"nodeType":"ExpressionStatement","src":"16761:14:1"}]},"errorName":"Error","id":1295,"nodeType":"TryCatchClause","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"reason","nameLocation":"16735:6:1","nodeType":"VariableDeclaration","scope":1295,"src":"16721:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1287,"name":"string","nodeType":"ElementaryTypeName","src":"16721:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16720:22:1"},"src":"16709:81:1"},{"block":{"id":1300,"nodeType":"Block","src":"16797:95:1","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16822:54:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non-ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d","typeString":"literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""}],"id":1296,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16815:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16815:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1299,"nodeType":"ExpressionStatement","src":"16815:62:1"}]},"errorName":"","id":1301,"nodeType":"TryCatchClause","src":"16791:101:1"}],"externalCall":{"arguments":[{"id":1265,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"16427:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1266,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"16437:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1267,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"16443:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1268,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"16448:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1269,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"16457:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1262,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"16400:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1261,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"16383:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1498_$","typeString":"type(contract IERC1155Receiver)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1498","typeString":"contract IERC1155Receiver"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16404:22:1","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"16383:43:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:79:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1302,"nodeType":"TryStatement","src":"16379:513:1"}]}}]},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"16125:35:1","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"operator","nameLocation":"16178:8:1","nodeType":"VariableDeclaration","scope":1306,"src":"16170:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"16170:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"from","nameLocation":"16204:4:1","nodeType":"VariableDeclaration","scope":1306,"src":"16196:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"16196:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"to","nameLocation":"16226:2:1","nodeType":"VariableDeclaration","scope":1306,"src":"16218:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"16218:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"ids","nameLocation":"16255:3:1","nodeType":"VariableDeclaration","scope":1306,"src":"16238:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"16238:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ArrayTypeName","src":"16238:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"amounts","nameLocation":"16285:7:1","nodeType":"VariableDeclaration","scope":1306,"src":"16268:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"16268:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1252,"nodeType":"ArrayTypeName","src":"16268:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"data","nameLocation":"16315:4:1","nodeType":"VariableDeclaration","scope":1306,"src":"16302:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1254,"name":"bytes","nodeType":"ElementaryTypeName","src":"16302:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16160:165:1"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[],"src":"16334:0:1"},"scope":1335,"src":"16116:792:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1333,"nodeType":"Block","src":"16998:109:1","statements":[{"assignments":[1318],"declarations":[{"constant":false,"id":1318,"mutability":"mutable","name":"array","nameLocation":"17025:5:1","nodeType":"VariableDeclaration","scope":1333,"src":"17008:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"17008:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"17008:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1324,"initialValue":{"arguments":[{"hexValue":"31","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17047:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17033:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"17037:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1320,"nodeType":"ArrayTypeName","src":"17037:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17033:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17008:41:1"},{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1325,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"17059:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1327,"indexExpression":{"hexValue":"30","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17065:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17059:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1328,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"17070:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17059:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1330,"nodeType":"ExpressionStatement","src":"17059:18:1"},{"expression":{"id":1331,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"17095:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"17088:12:1"}]},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArray","nameLocation":"16923:17:1","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"element","nameLocation":"16949:7:1","nodeType":"VariableDeclaration","scope":1334,"src":"16941:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"16941:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16940:17:1"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"16980:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"16980:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ArrayTypeName","src":"16980:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16979:18:1"},"scope":1335,"src":"16914:193:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1336,"src":"570:16539:1","usedErrors":[]}],"src":"109:17001:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1457],"IERC165":[2127]},"id":1458,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1337,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":2128,"src":"135:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1340,"name":"IERC165","nameLocations":["372:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"372:7:2"},"id":1341,"nodeType":"InheritanceSpecifier","src":"372:7:2"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"184:165:2","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1457,"linearizedBaseContracts":[1457,2127],"name":"IERC1155","nameLocation":"360:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1342,"nodeType":"StructuredDocumentation","src":"386:121:2","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1354,"name":"TransferSingle","nameLocation":"518:14:2","nodeType":"EventDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"549:8:2","nodeType":"VariableDeclaration","scope":1354,"src":"533:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1346,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"575:4:2","nodeType":"VariableDeclaration","scope":1354,"src":"559:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"597:2:2","nodeType":"VariableDeclaration","scope":1354,"src":"581:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"609:2:2","nodeType":"VariableDeclaration","scope":1354,"src":"601:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1352,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"621:5:2","nodeType":"VariableDeclaration","scope":1354,"src":"613:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:95:2"},"src":"512:116:2"},{"anonymous":false,"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"634:144:2","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1369,"name":"TransferBatch","nameLocation":"789:13:2","nodeType":"EventDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"828:8:2","nodeType":"VariableDeclaration","scope":1369,"src":"812:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1359,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"862:4:2","nodeType":"VariableDeclaration","scope":1369,"src":"846:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"892:2:2","nodeType":"VariableDeclaration","scope":1369,"src":"876:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1364,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"914:3:2","nodeType":"VariableDeclaration","scope":1369,"src":"904:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1363,"nodeType":"ArrayTypeName","src":"904:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1367,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"937:6:2","nodeType":"VariableDeclaration","scope":1369,"src":"927:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1366,"nodeType":"ArrayTypeName","src":"927:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"802:147:2"},"src":"783:167:2"},{"anonymous":false,"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"956:147:2","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1378,"name":"ApprovalForAll","nameLocation":"1114:14:2","nodeType":"EventDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1145:7:2","nodeType":"VariableDeclaration","scope":1378,"src":"1129:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1170:8:2","nodeType":"VariableDeclaration","scope":1378,"src":"1154:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1376,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1185:8:2","nodeType":"VariableDeclaration","scope":1378,"src":"1180:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1375,"name":"bool","nodeType":"ElementaryTypeName","src":"1180:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1128:66:2"},"src":"1108:87:2"},{"anonymous":false,"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"1201:343:2","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1385,"name":"URI","nameLocation":"1555:3:2","nodeType":"EventDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1566:5:2","nodeType":"VariableDeclaration","scope":1385,"src":"1559:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"1559:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1383,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1589:2:2","nodeType":"VariableDeclaration","scope":1385,"src":"1573:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1558:34:2"},"src":"1549:44:2"},{"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"1599:173:2","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1395,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1786:9:2","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"account","nameLocation":"1804:7:2","nodeType":"VariableDeclaration","scope":1395,"src":"1796:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"id","nameLocation":"1821:2:2","nodeType":"VariableDeclaration","scope":1395,"src":"1813:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1795:29:2"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"1848:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1847:9:2"},"scope":1457,"src":"1777:80:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"1863:188:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1408,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2065:14:2","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"accounts","nameLocation":"2108:8:2","nodeType":"VariableDeclaration","scope":1408,"src":"2089:27:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1398,"nodeType":"ArrayTypeName","src":"2089:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"ids","nameLocation":"2145:3:2","nodeType":"VariableDeclaration","scope":1408,"src":"2126:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ArrayTypeName","src":"2126:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2079:75:2"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1408,"src":"2178:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1405,"nodeType":"ArrayTypeName","src":"2178:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2177:18:2"},"scope":1457,"src":"2056:140:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"2202:248:2","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1416,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2464:17:2","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"operator","nameLocation":"2490:8:2","nodeType":"VariableDeclaration","scope":1416,"src":"2482:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"approved","nameLocation":"2505:8:2","nodeType":"VariableDeclaration","scope":1416,"src":"2500:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"2500:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2481:33:2"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"2523:0:2"},"scope":1457,"src":"2455:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"2530:135:2","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1426,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2679:16:2","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"account","nameLocation":"2704:7:2","nodeType":"VariableDeclaration","scope":1426,"src":"2696:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"operator","nameLocation":"2721:8:2","nodeType":"VariableDeclaration","scope":1426,"src":"2713:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2695:35:2"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"2754:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1423,"name":"bool","nodeType":"ElementaryTypeName","src":"2754:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2753:6:2"},"scope":1457,"src":"2670:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"2766:556:2","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1440,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3336:16:2","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"from","nameLocation":"3361:4:2","nodeType":"VariableDeclaration","scope":1440,"src":"3353:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"3353:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"to","nameLocation":"3375:2:2","nodeType":"VariableDeclaration","scope":1440,"src":"3367:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1430,"name":"address","nodeType":"ElementaryTypeName","src":"3367:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"id","nameLocation":"3387:2:2","nodeType":"VariableDeclaration","scope":1440,"src":"3379:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3379:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"amount","nameLocation":"3399:6:2","nodeType":"VariableDeclaration","scope":1440,"src":"3391:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3391:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"data","nameLocation":"3422:4:2","nodeType":"VariableDeclaration","scope":1440,"src":"3407:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1436,"name":"bytes","nodeType":"ElementaryTypeName","src":"3407:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3352:75:2"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"3436:0:2"},"scope":1457,"src":"3327:110:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"3443:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1456,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3847:21:2","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"from","nameLocation":"3886:4:2","nodeType":"VariableDeclaration","scope":1456,"src":"3878:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"to","nameLocation":"3908:2:2","nodeType":"VariableDeclaration","scope":1456,"src":"3900:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"3900:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"ids","nameLocation":"3939:3:2","nodeType":"VariableDeclaration","scope":1456,"src":"3920:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3920:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ArrayTypeName","src":"3920:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"amounts","nameLocation":"3971:7:2","nodeType":"VariableDeclaration","scope":1456,"src":"3952:26:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1450,"nodeType":"ArrayTypeName","src":"3952:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"data","nameLocation":"4003:4:2","nodeType":"VariableDeclaration","scope":1456,"src":"3988:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1452,"name":"bytes","nodeType":"ElementaryTypeName","src":"3988:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3868:145:2"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[],"src":"4022:0:2"},"scope":1457,"src":"3838:185:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1458,"src":"350:3675:2","usedErrors":[]}],"src":"110:3916:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1498],"IERC165":[2127]},"id":1499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1459,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1499,"sourceUnit":2128,"src":"143:47:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1462,"name":"IERC165","nameLocations":["262:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"262:7:3"},"id":1463,"nodeType":"InheritanceSpecifier","src":"262:7:3"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"192:39:3","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":1498,"linearizedBaseContracts":[1498,2127],"name":"IERC1155Receiver","nameLocation":"242:16:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"276:826:3","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1479,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:3","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"operator","nameLocation":"1151:8:3","nodeType":"VariableDeclaration","scope":1479,"src":"1143:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"from","nameLocation":"1177:4:3","nodeType":"VariableDeclaration","scope":1479,"src":"1169:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"id","nameLocation":"1199:2:3","nodeType":"VariableDeclaration","scope":1479,"src":"1191:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"value","nameLocation":"1219:5:3","nodeType":"VariableDeclaration","scope":1479,"src":"1211:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"data","nameLocation":"1249:4:3","nodeType":"VariableDeclaration","scope":1479,"src":"1234:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1473,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:3"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1479,"src":"1278:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1476,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:3"},"scope":1498,"src":"1107:179:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"1292:994:3","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1497,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:3","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"operator","nameLocation":"2340:8:3","nodeType":"VariableDeclaration","scope":1497,"src":"2332:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"from","nameLocation":"2366:4:3","nodeType":"VariableDeclaration","scope":1497,"src":"2358:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1487,"mutability":"mutable","name":"ids","nameLocation":"2399:3:3","nodeType":"VariableDeclaration","scope":1497,"src":"2380:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ArrayTypeName","src":"2380:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"values","nameLocation":"2431:6:3","nodeType":"VariableDeclaration","scope":1497,"src":"2412:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ArrayTypeName","src":"2412:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"data","nameLocation":"2462:4:3","nodeType":"VariableDeclaration","scope":1497,"src":"2447:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1491,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:3"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1497,"src":"2491:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1494,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:3"},"scope":1498,"src":"2291:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1499,"src":"232:2269:3","usedErrors":[]}],"src":"118:2384:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","exportedSymbols":{"Address":[2069],"Context":[2091],"ERC1155":[1335],"ERC1155Burnable":[1567],"ERC165":[2115],"IERC1155":[1457],"IERC1155MetadataURI":[1739],"IERC1155Receiver":[1498],"IERC165":[2127]},"id":1568,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1500,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1568,"sourceUnit":1336,"src":"153:24:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1503,"name":"ERC1155","nameLocations":["394:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"394:7:4"},"id":1504,"nodeType":"InheritanceSpecifier","src":"394:7:4"}],"canonicalName":"ERC1155Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"179:177:4","text":" @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"},"fullyImplemented":false,"id":1567,"linearizedBaseContracts":[1567,1335,1739,1457,2115,2127,2091],"name":"ERC1155Burnable","nameLocation":"375:15:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1533,"nodeType":"Block","src":"481:212:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1514,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"512:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1515,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"523:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"523:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"512:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1519,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"556:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1520,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"565:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"565:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1518,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"539:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"539:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"512:66:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"592:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":1513,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"491:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"491:159:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1526,"nodeType":"ExpressionStatement","src":"491:159:4"},{"expression":{"arguments":[{"id":1528,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"667:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1529,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"676:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"680:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1527,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"661:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"661:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1532,"nodeType":"ExpressionStatement","src":"661:25:4"}]},"functionSelector":"f5298aca","id":1534,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"417:4:4","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"account","nameLocation":"430:7:4","nodeType":"VariableDeclaration","scope":1534,"src":"422:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"422:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"id","nameLocation":"447:2:4","nodeType":"VariableDeclaration","scope":1534,"src":"439:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"value","nameLocation":"459:5:4","nodeType":"VariableDeclaration","scope":1534,"src":"451:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"421:44:4"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"481:0:4"},"scope":1567,"src":"408:285:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1565,"nodeType":"Block","src":"797:219:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"828:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1547,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"839:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"839:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"828:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1551,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"872:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1552,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"881:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"881:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1550,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"855:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"855:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"828:66:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"908:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""},"value":"ERC1155: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156","typeString":"literal_string \"ERC1155: caller is not token owner or approved\""}],"id":1545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"807:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"807:159:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1558,"nodeType":"ExpressionStatement","src":"807:159:4"},{"expression":{"arguments":[{"id":1560,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"988:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1561,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"997:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1562,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"1002:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1559,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"977:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"977:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1564,"nodeType":"ExpressionStatement","src":"977:32:4"}]},"functionSelector":"6b20c454","id":1566,"implemented":true,"kind":"function","modifiers":[],"name":"burnBatch","nameLocation":"708:9:4","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"account","nameLocation":"726:7:4","nodeType":"VariableDeclaration","scope":1566,"src":"718:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"ids","nameLocation":"752:3:4","nodeType":"VariableDeclaration","scope":1566,"src":"735:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1538,"nodeType":"ArrayTypeName","src":"735:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"values","nameLocation":"774:6:4","nodeType":"VariableDeclaration","scope":1566,"src":"757:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1541,"nodeType":"ArrayTypeName","src":"757:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"717:64:4"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[],"src":"797:0:4"},"scope":1567,"src":"699:317:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1568,"src":"357:661:4","usedErrors":[]}],"src":"128:891:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","exportedSymbols":{"Address":[2069],"Context":[2091],"ERC1155":[1335],"ERC1155Supply":[1724],"ERC165":[2115],"IERC1155":[1457],"IERC1155MetadataURI":[1739],"IERC1155Receiver":[1498],"IERC165":[2127]},"id":1725,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1569,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"126:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1570,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1725,"sourceUnit":1336,"src":"151:24:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1572,"name":"ERC1155","nameLocations":["557:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"557:7:5"},"id":1573,"nodeType":"InheritanceSpecifier","src":"557:7:5"}],"canonicalName":"ERC1155Supply","contractDependencies":[],"contractKind":"contract","documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"177:344:5","text":" @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted."},"fullyImplemented":false,"id":1724,"linearizedBaseContracts":[1724,1335,1739,1457,2115,2127,2091],"name":"ERC1155Supply","nameLocation":"540:13:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1577,"mutability":"mutable","name":"_totalSupply","nameLocation":"607:12:5","nodeType":"VariableDeclaration","scope":1724,"src":"571:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1576,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"579:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"571:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"590:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1589,"nodeType":"Block","src":"768:40:5","statements":[{"expression":{"baseExpression":{"id":1585,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"785:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1587,"indexExpression":{"id":1586,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"798:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"785:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1584,"id":1588,"nodeType":"Return","src":"778:23:5"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"626:66:5","text":" @dev Total amount of tokens in with a given id."},"functionSelector":"bd85b039","id":1590,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"706:11:5","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"id","nameLocation":"726:2:5","nodeType":"VariableDeclaration","scope":1590,"src":"718:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"717:12:5"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1590,"src":"759:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"759:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"758:9:5"},"scope":1724,"src":"697:111:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1605,"nodeType":"Block","src":"964:57:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1600,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"1007:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1598,"name":"ERC1155Supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"981:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Supply_$1724_$","typeString":"type(contract ERC1155Supply)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"995:11:5","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1590,"src":"981:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"981:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1013:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"981:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1597,"id":1604,"nodeType":"Return","src":"974:40:5"}]},"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"814:82:5","text":" @dev Indicates whether any token exist with a given id, or not."},"functionSelector":"4f558e79","id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"910:6:5","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"id","nameLocation":"925:2:5","nodeType":"VariableDeclaration","scope":1606,"src":"917:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"916:12:5"},"returnParameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"958:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1595,"name":"bool","nodeType":"ElementaryTypeName","src":"958:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"957:6:5"},"scope":1724,"src":"901:120:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1159],"body":{"id":1722,"nodeType":"Block","src":"1312:683:5","statements":[{"expression":{"arguments":[{"id":1628,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1349:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"1359:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1630,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"1365:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1369:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1632,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"1374:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1633,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"1383:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1625,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1322:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Supply_$1724_$","typeString":"type(contract super ERC1155Supply)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1328:20:5","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"1322:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1635,"nodeType":"ExpressionStatement","src":"1322:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"1403:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1419:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1411:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"1411:7:5","typeDescriptions":{}}},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1411:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1403:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1666,"nodeType":"IfStatement","src":"1399:156:5","trueBody":{"id":1665,"nodeType":"Block","src":"1423:132:5","statements":[{"body":{"id":1663,"nodeType":"Block","src":"1478:67:5","statements":[{"expression":{"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1653,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"1496:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1657,"indexExpression":{"baseExpression":{"id":1654,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1509:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1656,"indexExpression":{"id":1655,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1513:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1509:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1496:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":1658,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"1520:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1660,"indexExpression":{"id":1659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1528:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1520:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1496:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1662,"nodeType":"ExpressionStatement","src":"1496:34:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1457:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1647,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1461:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1465:6:5","memberName":"length","nodeType":"MemberAccess","src":"1461:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1457:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1664,"initializationExpression":{"assignments":[1643],"declarations":[{"constant":false,"id":1643,"mutability":"mutable","name":"i","nameLocation":"1450:1:5","nodeType":"VariableDeclaration","scope":1664,"src":"1442:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1442:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1645,"initialValue":{"hexValue":"30","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1454:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1442:13:5"},"loopExpression":{"expression":{"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1473:3:5","subExpression":{"id":1650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1475:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1652,"nodeType":"ExpressionStatement","src":"1473:3:5"},"nodeType":"ForStatement","src":"1437:108:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"1569:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1583:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1575:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:5","typeDescriptions":{}}},"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1575:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1569:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1721,"nodeType":"IfStatement","src":"1565:424:5","trueBody":{"id":1720,"nodeType":"Block","src":"1587:402:5","statements":[{"body":{"id":1718,"nodeType":"Block","src":"1642:337:5","statements":[{"assignments":[1685],"declarations":[{"constant":false,"id":1685,"mutability":"mutable","name":"id","nameLocation":"1668:2:5","nodeType":"VariableDeclaration","scope":1718,"src":"1660:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1689,"initialValue":{"baseExpression":{"id":1686,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1673:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1688,"indexExpression":{"id":1687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1677:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1673:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1660:19:5"},{"assignments":[1691],"declarations":[{"constant":false,"id":1691,"mutability":"mutable","name":"amount","nameLocation":"1705:6:5","nodeType":"VariableDeclaration","scope":1718,"src":"1697:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1697:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1695,"initialValue":{"baseExpression":{"id":1692,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"1714:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1694,"indexExpression":{"id":1693,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1722:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1714:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1697:27:5"},{"assignments":[1697],"declarations":[{"constant":false,"id":1697,"mutability":"mutable","name":"supply","nameLocation":"1750:6:5","nodeType":"VariableDeclaration","scope":1718,"src":"1742:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1742:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1701,"initialValue":{"baseExpression":{"id":1698,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"1759:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1700,"indexExpression":{"id":1699,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"1772:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1759:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1742:33:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1801:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1704,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"1811:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1801:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e74206578636565647320746f74616c537570706c79","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1819:42:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4","typeString":"literal_string \"ERC1155: burn amount exceeds totalSupply\""},"value":"ERC1155: burn amount exceeds totalSupply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4","typeString":"literal_string \"ERC1155: burn amount exceeds totalSupply\""}],"id":1702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1793:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1793:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"ExpressionStatement","src":"1793:69:5"},{"id":1717,"nodeType":"UncheckedBlock","src":"1880:85:5","statements":[{"expression":{"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1709,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"1912:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1711,"indexExpression":{"id":1710,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"1925:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1912:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"1931:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"1940:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1931:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1912:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1716,"nodeType":"ExpressionStatement","src":"1912:34:5"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1621:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1678,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1625:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1629:6:5","memberName":"length","nodeType":"MemberAccess","src":"1625:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1621:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1719,"initializationExpression":{"assignments":[1674],"declarations":[{"constant":false,"id":1674,"mutability":"mutable","name":"i","nameLocation":"1614:1:5","nodeType":"VariableDeclaration","scope":1719,"src":"1606:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1606:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1676,"initialValue":{"hexValue":"30","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1618:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1606:13:5"},"loopExpression":{"expression":{"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1637:3:5","subExpression":{"id":1681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1639:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1683,"nodeType":"ExpressionStatement","src":"1637:3:5"},"nodeType":"ForStatement","src":"1601:378:5"}]}}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"1027:59:5","text":" @dev See {ERC1155-_beforeTokenTransfer}."},"id":1723,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1100:20:5","nodeType":"FunctionDefinition","overrides":{"id":1623,"nodeType":"OverrideSpecifier","overrides":[],"src":"1303:8:5"},"parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"operator","nameLocation":"1138:8:5","nodeType":"VariableDeclaration","scope":1723,"src":"1130:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"from","nameLocation":"1164:4:5","nodeType":"VariableDeclaration","scope":1723,"src":"1156:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"to","nameLocation":"1186:2:5","nodeType":"VariableDeclaration","scope":1723,"src":"1178:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"ids","nameLocation":"1215:3:5","nodeType":"VariableDeclaration","scope":1723,"src":"1198:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1198:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1615,"nodeType":"ArrayTypeName","src":"1198:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"amounts","nameLocation":"1245:7:5","nodeType":"VariableDeclaration","scope":1723,"src":"1228:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"nodeType":"ArrayTypeName","src":"1228:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"data","nameLocation":"1275:4:5","nodeType":"VariableDeclaration","scope":1723,"src":"1262:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1620,"name":"bytes","nodeType":"ElementaryTypeName","src":"1262:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1120:165:5"},"returnParameters":{"id":1624,"nodeType":"ParameterList","parameters":[],"src":"1312:0:5"},"scope":1724,"src":"1091:904:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1725,"src":"522:1475:5","usedErrors":[]}],"src":"126:1872:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1457],"IERC1155MetadataURI":[1739],"IERC165":[2127]},"id":1740,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1726,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"117:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1727,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":1458,"src":"142:25:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1729,"name":"IERC1155","nameLocations":["397:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"397:8:6"},"id":1730,"nodeType":"InheritanceSpecifier","src":"397:8:6"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"169:194:6","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1739,"linearizedBaseContracts":[1739,1457,2127],"name":"IERC1155MetadataURI","nameLocation":"374:19:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"412:192:6","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1738,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"618:3:6","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"id","nameLocation":"630:2:6","nodeType":"VariableDeclaration","scope":1738,"src":"622:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"621:12:6"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1738,"src":"657:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1735,"name":"string","nodeType":"ElementaryTypeName","src":"657:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"656:15:6"},"scope":1739,"src":"609:63:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1740,"src":"364:310:6","usedErrors":[]}],"src":"117:558:6"},"id":6},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2069]},"id":2070,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1741,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"126:67:7","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2069,"linearizedBaseContracts":[2069],"name":"Address","nameLocation":"202:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1756,"nodeType":"Block","src":"1478:254:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1750,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"1702:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:7","memberName":"code","nodeType":"MemberAccess","src":"1702:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:7","memberName":"length","nodeType":"MemberAccess","src":"1702:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1749,"id":1755,"nodeType":"Return","src":"1695:30:7"}]},"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"216:1191:7","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1757,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:7","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"account","nameLocation":"1440:7:7","nodeType":"VariableDeclaration","scope":1757,"src":"1432:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:7"},"returnParameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1757,"src":"1472:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1747,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:7"},"scope":2069,"src":"1412:320:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1790,"nodeType":"Block","src":"2718:241:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1768,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2069","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2069","typeString":"library Address"}],"id":1767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1766,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:7","typeDescriptions":{}}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:7","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1771,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"2761:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1775,"nodeType":"ExpressionStatement","src":"2728:73:7"},{"assignments":[1777,null],"declarations":[{"constant":false,"id":1777,"mutability":"mutable","name":"success","nameLocation":"2818:7:7","nodeType":"VariableDeclaration","scope":1790,"src":"2813:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1776,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1784,"initialValue":{"arguments":[{"hexValue":"","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1778,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"2831:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:7","memberName":"call","nodeType":"MemberAccess","src":"2831:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1780,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"2853:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:7"},{"expression":{"arguments":[{"id":1786,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"2882:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1789,"nodeType":"ExpressionStatement","src":"2874:78:7"}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"1738:904:7","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1791,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:7","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:7","nodeType":"VariableDeclaration","scope":1791,"src":"2666:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"amount","nameLocation":"2701:6:7","nodeType":"VariableDeclaration","scope":1791,"src":"2693:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:7"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[],"src":"2718:0:7"},"scope":2069,"src":"2647:312:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1808,"nodeType":"Block","src":"3790:96:7","statements":[{"expression":{"arguments":[{"id":1802,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"3829:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1803,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"3837:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1801,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1849,1893],"referencedDeclaration":1893,"src":"3807:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1800,"id":1807,"nodeType":"Return","src":"3800:79:7"}]},"documentation":{"id":1792,"nodeType":"StructuredDocumentation","src":"2965:731:7","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1809,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:7","nodeType":"FunctionDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"target","nameLocation":"3731:6:7","nodeType":"VariableDeclaration","scope":1809,"src":"3723:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"data","nameLocation":"3752:4:7","nodeType":"VariableDeclaration","scope":1809,"src":"3739:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1795,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:7"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1809,"src":"3776:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1798,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:7"},"scope":2069,"src":"3701:185:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"4255:76:7","statements":[{"expression":{"arguments":[{"id":1822,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"4294:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1823,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"4302:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1825,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"4311:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1821,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1849,1893],"referencedDeclaration":1893,"src":"4272:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1820,"id":1827,"nodeType":"Return","src":"4265:59:7"}]},"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"3892:211:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:7","nodeType":"FunctionDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"target","nameLocation":"4147:6:7","nodeType":"VariableDeclaration","scope":1829,"src":"4139:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"data","nameLocation":"4176:4:7","nodeType":"VariableDeclaration","scope":1829,"src":"4163:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1813,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:7","nodeType":"VariableDeclaration","scope":1829,"src":"4190:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1815,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:7"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"4241:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1818,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:7"},"scope":2069,"src":"4108:223:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1848,"nodeType":"Block","src":"4806:111:7","statements":[{"expression":{"arguments":[{"id":1842,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"4845:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1843,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"4853:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"4859:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1841,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1849,1893],"referencedDeclaration":1893,"src":"4823:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1840,"id":1847,"nodeType":"Return","src":"4816:94:7"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"4337:351:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:7","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"target","nameLocation":"4732:6:7","nodeType":"VariableDeclaration","scope":1849,"src":"4724:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"4753:4:7","nodeType":"VariableDeclaration","scope":1849,"src":"4740:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"4767:5:7","nodeType":"VariableDeclaration","scope":1849,"src":"4759:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:7"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1849,"src":"4792:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:7"},"scope":2069,"src":"4693:224:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1892,"nodeType":"Block","src":"5344:267:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1866,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2069","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2069","typeString":"library Address"}],"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:7","typeDescriptions":{}}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:7","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"5387:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1873,"nodeType":"ExpressionStatement","src":"5354:81:7"},{"assignments":[1875,1877],"declarations":[{"constant":false,"id":1875,"mutability":"mutable","name":"success","nameLocation":"5451:7:7","nodeType":"VariableDeclaration","scope":1892,"src":"5446:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1874,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:7","nodeType":"VariableDeclaration","scope":1892,"src":"5460:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1876,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1884,"initialValue":{"arguments":[{"id":1882,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"5513:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1878,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"5487:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:7","memberName":"call","nodeType":"MemberAccess","src":"5487:11:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"5506:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:7"},{"expression":{"arguments":[{"id":1886,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"5562:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1887,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5570:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1888,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"5579:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1889,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"5591:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1885,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"5535:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1862,"id":1891,"nodeType":"Return","src":"5528:76:7"}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"4923:237:7","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:7","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"target","nameLocation":"5213:6:7","nodeType":"VariableDeclaration","scope":1893,"src":"5205:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"data","nameLocation":"5242:4:7","nodeType":"VariableDeclaration","scope":1893,"src":"5229:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1853,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"value","nameLocation":"5264:5:7","nodeType":"VariableDeclaration","scope":1893,"src":"5256:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:7","nodeType":"VariableDeclaration","scope":1893,"src":"5279:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1857,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:7"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1893,"src":"5330:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1860,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:7"},"scope":2069,"src":"5165:446:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1909,"nodeType":"Block","src":"5888:97:7","statements":[{"expression":{"arguments":[{"id":1904,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"5924:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1905,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"5932:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1903,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1910,1939],"referencedDeclaration":1939,"src":"5905:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1902,"id":1908,"nodeType":"Return","src":"5898:80:7"}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"5617:166:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:7","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"target","nameLocation":"5824:6:7","nodeType":"VariableDeclaration","scope":1910,"src":"5816:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"data","nameLocation":"5845:4:7","nodeType":"VariableDeclaration","scope":1910,"src":"5832:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1897,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:7"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"5874:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1900,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:7"},"scope":2069,"src":"5788:197:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1938,"nodeType":"Block","src":"6327:168:7","statements":[{"assignments":[1923,1925],"declarations":[{"constant":false,"id":1923,"mutability":"mutable","name":"success","nameLocation":"6343:7:7","nodeType":"VariableDeclaration","scope":1938,"src":"6338:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1922,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:7","nodeType":"VariableDeclaration","scope":1938,"src":"6352:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1924,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1930,"initialValue":{"arguments":[{"id":1928,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"6397:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1926,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"6379:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:7","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:7"},{"expression":{"arguments":[{"id":1932,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"6446:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1933,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"6454:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1934,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"6463:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1935,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6475:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1931,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"6419:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1921,"id":1937,"nodeType":"Return","src":"6412:76:7"}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"5991:173:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:7","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"target","nameLocation":"6214:6:7","nodeType":"VariableDeclaration","scope":1939,"src":"6206:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"data","nameLocation":"6243:4:7","nodeType":"VariableDeclaration","scope":1939,"src":"6230:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1914,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:7","nodeType":"VariableDeclaration","scope":1939,"src":"6257:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1916,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:7"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"6313:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1919,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:7"},"scope":2069,"src":"6169:326:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1955,"nodeType":"Block","src":"6771:101:7","statements":[{"expression":{"arguments":[{"id":1950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"6809:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1951,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"6817:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1949,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1956,1985],"referencedDeclaration":1985,"src":"6788:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1948,"id":1954,"nodeType":"Return","src":"6781:84:7"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"6501:168:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1956,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:7","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"target","nameLocation":"6712:6:7","nodeType":"VariableDeclaration","scope":1956,"src":"6704:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"data","nameLocation":"6733:4:7","nodeType":"VariableDeclaration","scope":1956,"src":"6720:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1943,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:7"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1956,"src":"6757:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1946,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:7"},"scope":2069,"src":"6674:198:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"7213:170:7","statements":[{"assignments":[1969,1971],"declarations":[{"constant":false,"id":1969,"mutability":"mutable","name":"success","nameLocation":"7229:7:7","nodeType":"VariableDeclaration","scope":1984,"src":"7224:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1968,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:7","nodeType":"VariableDeclaration","scope":1984,"src":"7238:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1970,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1976,"initialValue":{"arguments":[{"id":1974,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"7285:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1972,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"7265:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:7","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:7","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:7"},{"expression":{"arguments":[{"id":1978,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"7334:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1979,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"7342:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"7351:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1981,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"7363:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1977,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"7307:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1967,"id":1983,"nodeType":"Return","src":"7300:76:7"}]},"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"6878:175:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:7","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"target","nameLocation":"7105:6:7","nodeType":"VariableDeclaration","scope":1985,"src":"7097:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"data","nameLocation":"7134:4:7","nodeType":"VariableDeclaration","scope":1985,"src":"7121:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1960,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:7","nodeType":"VariableDeclaration","scope":1985,"src":"7148:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1962,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:7"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"7199:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1965,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:7"},"scope":2069,"src":"7058:325:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2023,"nodeType":"Block","src":"7865:434:7","statements":[{"condition":{"id":1999,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"7879:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2021,"nodeType":"Block","src":"8235:58:7","statements":[{"expression":{"arguments":[{"id":2017,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8257:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2018,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"8269:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2016,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"8249:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2020,"nodeType":"ExpressionStatement","src":"8249:33:7"}]},"id":2022,"nodeType":"IfStatement","src":"7875:418:7","trueBody":{"id":2015,"nodeType":"Block","src":"7888:341:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2000,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"7906:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:7","memberName":"length","nodeType":"MemberAccess","src":"7906:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2012,"nodeType":"IfStatement","src":"7902:286:7","trueBody":{"id":2011,"nodeType":"Block","src":"7930:258:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":2006,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"8132:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2005,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"8121:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2004,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2010,"nodeType":"ExpressionStatement","src":"8113:60:7"}]}},{"expression":{"id":2013,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8208:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1998,"id":2014,"nodeType":"Return","src":"8201:17:7"}]}}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"7389:277:7","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:7","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"target","nameLocation":"7724:6:7","nodeType":"VariableDeclaration","scope":2024,"src":"7716:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"success","nameLocation":"7745:7:7","nodeType":"VariableDeclaration","scope":2024,"src":"7740:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1989,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1992,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:7","nodeType":"VariableDeclaration","scope":2024,"src":"7762:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:7","nodeType":"VariableDeclaration","scope":2024,"src":"7795:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1993,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:7"},"returnParameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"7851:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1996,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:7"},"scope":2069,"src":"7671:628:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2047,"nodeType":"Block","src":"8680:135:7","statements":[{"condition":{"id":2036,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"8694:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2045,"nodeType":"Block","src":"8751:58:7","statements":[{"expression":{"arguments":[{"id":2041,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8773:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2042,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"8785:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2040,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"8765:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"ExpressionStatement","src":"8765:33:7"}]},"id":2046,"nodeType":"IfStatement","src":"8690:119:7","trueBody":{"id":2039,"nodeType":"Block","src":"8703:42:7","statements":[{"expression":{"id":2037,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8724:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2035,"id":2038,"nodeType":"Return","src":"8717:17:7"}]}}]},"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"8305:210:7","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:7","nodeType":"FunctionDefinition","parameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"success","nameLocation":"8560:7:7","nodeType":"VariableDeclaration","scope":2048,"src":"8555:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2026,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:7","nodeType":"VariableDeclaration","scope":2048,"src":"8577:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2028,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:7","nodeType":"VariableDeclaration","scope":2048,"src":"8610:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2030,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:7"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2048,"src":"8666:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2033,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:7"},"scope":2069,"src":"8520:295:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2067,"nodeType":"Block","src":"8904:457:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2055,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"8980:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:7","memberName":"length","nodeType":"MemberAccess","src":"8980:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2065,"nodeType":"Block","src":"9310:45:7","statements":[{"expression":{"arguments":[{"id":2062,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"9331:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2061,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2064,"nodeType":"ExpressionStatement","src":"9324:20:7"}]},"id":2066,"nodeType":"IfStatement","src":"8976:379:7","trueBody":{"id":2060,"nodeType":"Block","src":"9003:301:7","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:7","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:7","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:7"},"nodeType":"YulFunctionCall","src":"9202:17:7"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:7","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:7"},"nodeType":"YulFunctionCall","src":"9243:19:7"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:7"},"nodeType":"YulFunctionCall","src":"9236:44:7"},"nodeType":"YulExpressionStatement","src":"9236:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2050,"isOffset":false,"isSlot":false,"src":"9208:10:7","valueSize":1},{"declaration":2050,"isOffset":false,"isSlot":false,"src":"9251:10:7","valueSize":1}],"id":2059,"nodeType":"InlineAssembly","src":"9152:142:7"}]}}]},"id":2068,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:7","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:7","nodeType":"VariableDeclaration","scope":2068,"src":"8838:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2049,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:7","nodeType":"VariableDeclaration","scope":2068,"src":"8863:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2051,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:7"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"8904:0:7"},"scope":2069,"src":"8821:540:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2070,"src":"194:9169:7","usedErrors":[]}],"src":"101:9263:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2091]},"id":2092,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2071,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"111:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2091,"linearizedBaseContracts":[2091],"name":"Context","nameLocation":"626:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":2080,"nodeType":"Block","src":"702:34:8","statements":[{"expression":{"expression":{"id":2077,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:8","memberName":"sender","nodeType":"MemberAccess","src":"719:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2076,"id":2079,"nodeType":"Return","src":"712:17:8"}]},"id":2081,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:8","nodeType":"FunctionDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"659:2:8"},"returnParameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2081,"src":"693:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:8"},"scope":2091,"src":"640:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2089,"nodeType":"Block","src":"809:32:8","statements":[{"expression":{"expression":{"id":2086,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:8","memberName":"data","nodeType":"MemberAccess","src":"826:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2085,"id":2088,"nodeType":"Return","src":"819:15:8"}]},"id":2090,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:8","nodeType":"FunctionDefinition","parameters":{"id":2082,"nodeType":"ParameterList","parameters":[],"src":"759:2:8"},"returnParameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"793:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2083,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:8"},"scope":2091,"src":"742:99:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2092,"src":"608:235:8","usedErrors":[]}],"src":"86:758:8"},"id":8},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2115],"IERC165":[2127]},"id":2116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2093,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2116,"sourceUnit":2128,"src":"124:23:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2096,"name":"IERC165","nameLocations":["754:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2127,"src":"754:7:9"},"id":2097,"nodeType":"InheritanceSpecifier","src":"754:7:9"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2095,"nodeType":"StructuredDocumentation","src":"149:576:9","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2115,"linearizedBaseContracts":[2115,2127],"name":"ERC165","nameLocation":"744:6:9","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2126],"body":{"id":2113,"nodeType":"Block","src":"920:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2106,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"937:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2108,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"957:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2127_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2127_$","typeString":"type(contract IERC165)"}],"id":2107,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2127","typeString":"type(contract IERC165)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2105,"id":2112,"nodeType":"Return","src":"930:47:9"}]},"documentation":{"id":2098,"nodeType":"StructuredDocumentation","src":"768:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2114,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:9","nodeType":"FunctionDefinition","overrides":{"id":2102,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:9"},"parameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:9","nodeType":"VariableDeclaration","scope":2114,"src":"856:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2099,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:9"},"returnParameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2114,"src":"914:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2103,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:9"},"scope":2115,"src":"829:155:9","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2116,"src":"726:260:9","usedErrors":[]}],"src":"99:888:9"},"id":9},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2127]},"id":2128,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"125:279:10","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2127,"linearizedBaseContracts":[2127],"name":"IERC165","nameLocation":"415:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"429:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2126,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:10","nodeType":"FunctionDefinition","parameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:10","nodeType":"VariableDeclaration","scope":2126,"src":"801:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2120,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:10"},"returnParameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2126,"src":"844:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2123,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:10"},"scope":2127,"src":"774:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2128,"src":"405:447:10","usedErrors":[]}],"src":"100:753:10"},"id":10},"contracts/Items.sol":{"ast":{"absolutePath":"contracts/Items.sol","exportedSymbols":{"Address":[2069],"Context":[2091],"ERC1155":[1335],"ERC1155Burnable":[1567],"ERC1155Supply":[1724],"ERC165":[2115],"IERC1155":[1457],"IERC1155MetadataURI":[1739],"IERC1155Receiver":[1498],"IERC165":[2127],"Items":[2373],"Ownable":[112]},"id":2374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2129,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":2130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2374,"sourceUnit":1336,"src":"57:59:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2374,"sourceUnit":113,"src":"117:52:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","id":2132,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2374,"sourceUnit":1568,"src":"170:78:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","id":2133,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2374,"sourceUnit":1725,"src":"249:76:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2134,"name":"ERC1155","nameLocations":["347:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"347:7:11"},"id":2135,"nodeType":"InheritanceSpecifier","src":"347:7:11"},{"baseName":{"id":2136,"name":"Ownable","nameLocations":["356:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"356:7:11"},"id":2137,"nodeType":"InheritanceSpecifier","src":"356:7:11"},{"baseName":{"id":2138,"name":"ERC1155Burnable","nameLocations":["365:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":1567,"src":"365:15:11"},"id":2139,"nodeType":"InheritanceSpecifier","src":"365:15:11"},{"baseName":{"id":2140,"name":"ERC1155Supply","nameLocations":["382:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"382:13:11"},"id":2141,"nodeType":"InheritanceSpecifier","src":"382:13:11"}],"canonicalName":"Items","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2373,"linearizedBaseContracts":[2373,1724,1567,112,1335,1739,1457,2115,2127,2091],"name":"Items","nameLocation":"338:5:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"a3cd71f6","id":2144,"mutability":"constant","name":"EMAIL","nameLocation":"427:5:11","nodeType":"VariableDeclaration","scope":2373,"src":"403:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"403:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"435:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":true,"functionSelector":"c7eaef1e","id":2147,"mutability":"constant","name":"MEMO","nameLocation":"466:4:11","nodeType":"VariableDeclaration","scope":2373,"src":"442:32:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"473:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"id":2149,"mutability":"mutable","name":"baseURI","nameLocation":"487:7:11","nodeType":"VariableDeclaration","scope":2373,"src":"480:14:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2148,"name":"string","nodeType":"ElementaryTypeName","src":"480:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"body":{"id":2160,"nodeType":"Block","src":"562:32:11","statements":[{"expression":{"arguments":[{"id":2157,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"580:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2156,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"572:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"572:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2159,"nodeType":"ExpressionStatement","src":"572:15:11"}]},"functionSelector":"55f804b3","id":2161,"implemented":true,"kind":"function","modifiers":[{"id":2154,"kind":"modifierInvocation","modifierName":{"id":2153,"name":"onlyOwner","nameLocations":["552:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"552:9:11"},"nodeType":"ModifierInvocation","src":"552:9:11"}],"name":"setBaseURI","nameLocation":"512:10:11","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"newuri","nameLocation":"537:6:11","nodeType":"VariableDeclaration","scope":2161,"src":"523:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2150,"name":"string","nodeType":"ElementaryTypeName","src":"523:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"522:22:11"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[],"src":"562:0:11"},"scope":2373,"src":"503:91:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2187,"nodeType":"Block","src":"708:182:11","statements":[{"expression":{"arguments":[{"expression":{"id":2168,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"724:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"728:6:11","memberName":"sender","nodeType":"MemberAccess","src":"724:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2170,"name":"EMAIL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"736:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313030","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"743:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"748:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2167,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"718:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"718:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2174,"nodeType":"ExpressionStatement","src":"718:33:11"},{"expression":{"arguments":[{"expression":{"id":2176,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"767:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"771:6:11","memberName":"sender","nodeType":"MemberAccess","src":"767:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2178,"name":"MEMO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"779:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313030","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"785:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"790:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2175,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"761:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"761:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2182,"nodeType":"ExpressionStatement","src":"761:32:11"},{"expression":{"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2183,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"803:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"68747470733a2f2f697066732e696f2f697066732f516d55685759427a3769665958644b4d77666437467a72356255654c726a476a4d454b696e7a566253666d316847","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"813:69:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7736268fcd5c9b6ef49ec7d4402da48afc1d595569413dfd7a8c9f79e242135f","typeString":"literal_string \"https://ipfs.io/ipfs/QmUhWYBz7ifYXdKMwfd7Fzr5bUeLrjGjMEKinzVbSfm1hG\""},"value":"https://ipfs.io/ipfs/QmUhWYBz7ifYXdKMwfd7Fzr5bUeLrjGjMEKinzVbSfm1hG"},"src":"803:79:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2186,"nodeType":"ExpressionStatement","src":"803:79:11"}]},"id":2188,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"68747470733a2f2f697066732e696f2f697066732f516d55685759427a3769665958644b4d77666437467a72356255654c726a476a4d454b696e7a566253666d3168472f7b69647d2e6a736f6e","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"622:79:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_99a05552689760a40632ca2993943db60e22394d4ce16d76aa2524a8e60fee09","typeString":"literal_string \"https://ipfs.io/ipfs/QmUhWYBz7ifYXdKMwfd7Fzr5bUeLrjGjMEKinzVbSfm1hG/{id}.json\""},"value":"https://ipfs.io/ipfs/QmUhWYBz7ifYXdKMwfd7Fzr5bUeLrjGjMEKinzVbSfm1hG/{id}.json"}],"id":2165,"kind":"baseConstructorSpecifier","modifierName":{"id":2163,"name":"ERC1155","nameLocations":["614:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"614:7:11"},"nodeType":"ModifierInvocation","src":"614:93:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"611:2:11"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[],"src":"708:0:11"},"scope":2373,"src":"600:290:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2206,"nodeType":"Block","src":"994:77:11","statements":[{"expression":{"arguments":[{"expression":{"id":2198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1026:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1030:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1026:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2200,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"1038:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2201,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"1049:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1058:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1061:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2197,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1008:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1008:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2205,"nodeType":"ExpressionStatement","src":"1008:56:11"}]},"functionSelector":"d4822fbf","id":2207,"implemented":true,"kind":"function","modifiers":[{"id":2195,"kind":"modifierInvocation","modifierName":{"id":2194,"name":"onlyOwner","nameLocations":["984:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"984:9:11"},"nodeType":"ModifierInvocation","src":"984:9:11"}],"name":"transferTo","nameLocation":"906:10:11","nodeType":"FunctionDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"tokenId","nameLocation":"934:7:11","nodeType":"VariableDeclaration","scope":2207,"src":"926:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2192,"mutability":"mutable","name":"recipient","nameLocation":"959:9:11","nodeType":"VariableDeclaration","scope":2207,"src":"951:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"951:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:58:11"},"returnParameters":{"id":2196,"nodeType":"ParameterList","parameters":[],"src":"994:0:11"},"scope":2373,"src":"897:174:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2223,"nodeType":"Block","src":"1161:50:11","statements":[{"expression":{"arguments":[{"id":2217,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"1177:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2218,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"1183:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2219,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"1191:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1201:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2216,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1171:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1171:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"ExpressionStatement","src":"1171:33:11"}]},"functionSelector":"2baf2acb","id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"mintTo","nameLocation":"1086:6:11","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"_to","nameLocation":"1101:3:11","nodeType":"VariableDeclaration","scope":2224,"src":"1093:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"_count","nameLocation":"1114:6:11","nodeType":"VariableDeclaration","scope":2224,"src":"1106:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1106:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"_tokenId","nameLocation":"1130:8:11","nodeType":"VariableDeclaration","scope":2224,"src":"1122:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:47:11"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[],"src":"1161:0:11"},"scope":2373,"src":"1077:134:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2318,"nodeType":"Block","src":"1333:393:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"1343:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1349:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1343:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2237,"nodeType":"IfStatement","src":"1339:38:11","trueBody":{"id":2236,"nodeType":"Block","src":"1352:25:11","statements":[{"expression":{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1367:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2230,"id":2235,"nodeType":"Return","src":"1360:10:11"}]}},{"assignments":[2239],"declarations":[{"constant":false,"id":2239,"mutability":"mutable","name":"j","nameLocation":"1390:1:11","nodeType":"VariableDeclaration","scope":2318,"src":"1382:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1382:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2241,"initialValue":{"id":2240,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"1394:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1382:14:11"},{"assignments":[2243],"declarations":[{"constant":false,"id":2243,"mutability":"mutable","name":"len","nameLocation":"1410:3:11","nodeType":"VariableDeclaration","scope":2318,"src":"1402:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2244,"nodeType":"VariableDeclarationStatement","src":"1402:11:11"},{"body":{"id":2255,"nodeType":"Block","src":"1434:35:11","statements":[{"expression":{"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1442:5:11","subExpression":{"id":2248,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1442:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2250,"nodeType":"ExpressionStatement","src":"1442:5:11"},{"expression":{"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2251,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"1455:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1460:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1455:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2254,"nodeType":"ExpressionStatement","src":"1455:7:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"1426:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1431:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1426:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2256,"nodeType":"WhileStatement","src":"1419:50:11"},{"assignments":[2258],"declarations":[{"constant":false,"id":2258,"mutability":"mutable","name":"bstr","nameLocation":"1487:4:11","nodeType":"VariableDeclaration","scope":2318,"src":"1474:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2257,"name":"bytes","nodeType":"ElementaryTypeName","src":"1474:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2263,"initialValue":{"arguments":[{"id":2261,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1504:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1494:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2259,"name":"bytes","nodeType":"ElementaryTypeName","src":"1498:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1494:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1474:34:11"},{"assignments":[2265],"declarations":[{"constant":false,"id":2265,"mutability":"mutable","name":"k","nameLocation":"1522:1:11","nodeType":"VariableDeclaration","scope":2318,"src":"1514:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1514:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2267,"initialValue":{"id":2266,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1526:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1514:15:11"},{"body":{"id":2311,"nodeType":"Block","src":"1551:146:11","statements":[{"expression":{"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2271,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"1559:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2272,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"1563:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1567:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1563:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1559:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2276,"nodeType":"ExpressionStatement","src":"1559:9:11"},{"assignments":[2278],"declarations":[{"constant":false,"id":2278,"mutability":"mutable","name":"temp","nameLocation":"1582:4:11","nodeType":"VariableDeclaration","scope":2311,"src":"1576:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2277,"name":"uint8","nodeType":"ElementaryTypeName","src":"1576:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2293,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1590:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2282,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"1601:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2283,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"1607:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1612:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1607:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1606:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1618:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1606:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1595:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2280,"name":"uint8","nodeType":"ElementaryTypeName","src":"1595:5:11","typeDescriptions":{}}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1595:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1590:31:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1589:33:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"1576:46:11"},{"assignments":[2295],"declarations":[{"constant":false,"id":2295,"mutability":"mutable","name":"b1","nameLocation":"1637:2:11","nodeType":"VariableDeclaration","scope":2311,"src":"1630:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2294,"name":"bytes1","nodeType":"ElementaryTypeName","src":"1630:6:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2300,"initialValue":{"arguments":[{"id":2298,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"1649:4:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1642:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2296,"name":"bytes1","nodeType":"ElementaryTypeName","src":"1642:6:11","typeDescriptions":{}}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"1630:24:11"},{"expression":{"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2301,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"1662:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2303,"indexExpression":{"id":2302,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"1667:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1662:7:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2304,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"1672:2:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1662:12:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2306,"nodeType":"ExpressionStatement","src":"1662:12:11"},{"expression":{"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2307,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"1682:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1682:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2310,"nodeType":"ExpressionStatement","src":"1682:8:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2268,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"1542:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1548:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2312,"nodeType":"WhileStatement","src":"1535:162:11"},{"expression":{"arguments":[{"id":2315,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"1716:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1709:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2313,"name":"string","nodeType":"ElementaryTypeName","src":"1709:6:11","typeDescriptions":{}}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1709:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2230,"id":2317,"nodeType":"Return","src":"1702:19:11"}]},"id":2319,"implemented":true,"kind":"function","modifiers":[],"name":"uintToStr","nameLocation":"1259:9:11","nodeType":"FunctionDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"_i","nameLocation":"1277:2:11","nodeType":"VariableDeclaration","scope":2319,"src":"1269:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1269:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1268:12:11"},"returnParameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"_uintAsString","nameLocation":"1318:13:11","nodeType":"VariableDeclaration","scope":2319,"src":"1304:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2228,"name":"string","nodeType":"ElementaryTypeName","src":"1304:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1303:29:11"},"scope":2373,"src":"1250:476:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2339,"nodeType":"Block","src":"1832:85:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2330,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"1869:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"2f","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1878:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},"value":"/"},{"arguments":[{"id":2333,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"1893:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2332,"name":"uintToStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"1883:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1883:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e6a736f6e","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1903:7:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""},"value":".json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""}],"expression":{"id":2328,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1852:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1856:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"1852:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1852:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1845:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2326,"name":"string","nodeType":"ElementaryTypeName","src":"1845:6:11","typeDescriptions":{}}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1845:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2325,"id":2338,"nodeType":"Return","src":"1838:74:11"}]},"functionSelector":"c87b56dd","id":2340,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1770:8:11","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"tokenId","nameLocation":"1787:7:11","nodeType":"VariableDeclaration","scope":2340,"src":"1779:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:17:11"},"returnParameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2340,"src":"1817:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2323,"name":"string","nodeType":"ElementaryTypeName","src":"1817:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1816:15:11"},"scope":2373,"src":"1761:156:11","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1159,1723],"body":{"id":2371,"nodeType":"Block","src":"2200:77:11","statements":[{"expression":{"arguments":[{"id":2363,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"2233:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2364,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"2243:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2365,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"2249:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2366,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2253:3:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2367,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"2258:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2368,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"2267:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2360,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2206:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Items_$2373_$","typeString":"type(contract super Items)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2212:20:11","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1723,"src":"2206:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2206:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2370,"nodeType":"ExpressionStatement","src":"2206:66:11"}]},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1998:20:11","nodeType":"FunctionDefinition","overrides":{"id":2358,"nodeType":"OverrideSpecifier","overrides":[{"id":2356,"name":"ERC1155","nameLocations":["2176:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"2176:7:11"},{"id":2357,"name":"ERC1155Supply","nameLocations":["2185:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"2185:13:11"}],"src":"2167:32:11"},"parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"operator","nameLocation":"2032:8:11","nodeType":"VariableDeclaration","scope":2372,"src":"2024:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2341,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"from","nameLocation":"2054:4:11","nodeType":"VariableDeclaration","scope":2372,"src":"2046:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2343,"name":"address","nodeType":"ElementaryTypeName","src":"2046:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"to","nameLocation":"2072:2:11","nodeType":"VariableDeclaration","scope":2372,"src":"2064:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2345,"name":"address","nodeType":"ElementaryTypeName","src":"2064:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"ids","nameLocation":"2097:3:11","nodeType":"VariableDeclaration","scope":2372,"src":"2080:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2348,"nodeType":"ArrayTypeName","src":"2080:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"amounts","nameLocation":"2123:7:11","nodeType":"VariableDeclaration","scope":2372,"src":"2106:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2106:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2351,"nodeType":"ArrayTypeName","src":"2106:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"data","nameLocation":"2149:4:11","nodeType":"VariableDeclaration","scope":2372,"src":"2136:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2353,"name":"bytes","nodeType":"ElementaryTypeName","src":"2136:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2018:139:11"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[],"src":"2200:0:11"},"scope":2373,"src":"1989:288:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2374,"src":"329:1950:11","usedErrors":[]}],"src":"32:2247:11"},"id":11}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"string","name":"uri_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"constructor":{"details":"See {_setURI}."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_157":{"entryPoint":null,"id":157,"parameterSlots":1,"returnSlots":0},"@_setURI_668":{"entryPoint":70,"id":668,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":110,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":383,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":466,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":323,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":88,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3779:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:12"},"nodeType":"YulFunctionCall","src":"66:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:12"},"nodeType":"YulFunctionCall","src":"56:31:12"},"nodeType":"YulExpressionStatement","src":"56:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:12"},"nodeType":"YulFunctionCall","src":"96:15:12"},"nodeType":"YulExpressionStatement","src":"96:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:12"},"nodeType":"YulFunctionCall","src":"120:15:12"},"nodeType":"YulExpressionStatement","src":"120:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:12"},{"body":{"nodeType":"YulBlock","src":"237:951:12","statements":[{"nodeType":"YulVariableDeclaration","src":"247:12:12","value":{"kind":"number","nodeType":"YulLiteral","src":"257:2:12","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"251:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"304:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"313:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"316:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"306:6:12"},"nodeType":"YulFunctionCall","src":"306:12:12"},"nodeType":"YulExpressionStatement","src":"306:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"279:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"288:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"275:3:12"},"nodeType":"YulFunctionCall","src":"275:23:12"},{"name":"_1","nodeType":"YulIdentifier","src":"300:2:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"271:3:12"},"nodeType":"YulFunctionCall","src":"271:32:12"},"nodeType":"YulIf","src":"268:52:12"},{"nodeType":"YulVariableDeclaration","src":"329:30:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"343:5:12"},"nodeType":"YulFunctionCall","src":"343:16:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"333:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"368:28:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"386:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"390:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"382:3:12"},"nodeType":"YulFunctionCall","src":"382:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"394:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"378:3:12"},"nodeType":"YulFunctionCall","src":"378:18:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"372:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"423:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"432:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"435:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"425:6:12"},"nodeType":"YulFunctionCall","src":"425:12:12"},"nodeType":"YulExpressionStatement","src":"425:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"411:6:12"},{"name":"_2","nodeType":"YulIdentifier","src":"419:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"408:2:12"},"nodeType":"YulFunctionCall","src":"408:14:12"},"nodeType":"YulIf","src":"405:34:12"},{"nodeType":"YulVariableDeclaration","src":"448:32:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:12"},"nodeType":"YulFunctionCall","src":"458:22:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"452:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"528:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"537:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"540:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"530:6:12"},"nodeType":"YulFunctionCall","src":"530:12:12"},"nodeType":"YulExpressionStatement","src":"530:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"507:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"511:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"503:3:12"},"nodeType":"YulFunctionCall","src":"503:13:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"518:7:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"499:3:12"},"nodeType":"YulFunctionCall","src":"499:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"492:6:12"},"nodeType":"YulFunctionCall","src":"492:35:12"},"nodeType":"YulIf","src":"489:55:12"},{"nodeType":"YulVariableDeclaration","src":"553:19:12","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"569:2:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"563:5:12"},"nodeType":"YulFunctionCall","src":"563:9:12"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"557:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"595:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"597:16:12"},"nodeType":"YulFunctionCall","src":"597:18:12"},"nodeType":"YulExpressionStatement","src":"597:18:12"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"587:2:12"},{"name":"_2","nodeType":"YulIdentifier","src":"591:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"584:2:12"},"nodeType":"YulFunctionCall","src":"584:10:12"},"nodeType":"YulIf","src":"581:36:12"},{"nodeType":"YulVariableDeclaration","src":"626:17:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"640:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"636:3:12"},"nodeType":"YulFunctionCall","src":"636:7:12"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"630:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"652:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"666:5:12"},"nodeType":"YulFunctionCall","src":"666:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"656:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"684:71:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"706:6:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"730:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"734:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:12"},"nodeType":"YulFunctionCall","src":"726:13:12"},{"name":"_5","nodeType":"YulIdentifier","src":"741:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"722:3:12"},"nodeType":"YulFunctionCall","src":"722:22:12"},{"kind":"number","nodeType":"YulLiteral","src":"746:2:12","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"718:3:12"},"nodeType":"YulFunctionCall","src":"718:31:12"},{"name":"_5","nodeType":"YulIdentifier","src":"751:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"714:3:12"},"nodeType":"YulFunctionCall","src":"714:40:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"702:3:12"},"nodeType":"YulFunctionCall","src":"702:53:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"688:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"814:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"816:16:12"},"nodeType":"YulFunctionCall","src":"816:18:12"},"nodeType":"YulExpressionStatement","src":"816:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"773:10:12"},{"name":"_2","nodeType":"YulIdentifier","src":"785:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"770:2:12"},"nodeType":"YulFunctionCall","src":"770:18:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"793:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"805:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"790:2:12"},"nodeType":"YulFunctionCall","src":"790:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"767:2:12"},"nodeType":"YulFunctionCall","src":"767:46:12"},"nodeType":"YulIf","src":"764:72:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"852:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"856:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"845:6:12"},"nodeType":"YulFunctionCall","src":"845:22:12"},"nodeType":"YulExpressionStatement","src":"845:22:12"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"883:6:12"},{"name":"_4","nodeType":"YulIdentifier","src":"891:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"876:6:12"},"nodeType":"YulFunctionCall","src":"876:18:12"},"nodeType":"YulExpressionStatement","src":"876:18:12"},{"body":{"nodeType":"YulBlock","src":"940:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"949:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"952:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"942:6:12"},"nodeType":"YulFunctionCall","src":"942:12:12"},"nodeType":"YulExpressionStatement","src":"942:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"917:2:12"},{"name":"_4","nodeType":"YulIdentifier","src":"921:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"913:3:12"},"nodeType":"YulFunctionCall","src":"913:11:12"},{"name":"_1","nodeType":"YulIdentifier","src":"926:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"909:3:12"},"nodeType":"YulFunctionCall","src":"909:20:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"931:7:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"906:2:12"},"nodeType":"YulFunctionCall","src":"906:33:12"},"nodeType":"YulIf","src":"903:53:12"},{"nodeType":"YulVariableDeclaration","src":"965:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"974:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"969:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1030:83:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1059:6:12"},{"name":"i","nodeType":"YulIdentifier","src":"1067:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1055:3:12"},"nodeType":"YulFunctionCall","src":"1055:14:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1071:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1051:3:12"},"nodeType":"YulFunctionCall","src":"1051:23:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1090:2:12"},{"name":"i","nodeType":"YulIdentifier","src":"1094:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1086:3:12"},"nodeType":"YulFunctionCall","src":"1086:10:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1098:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1082:3:12"},"nodeType":"YulFunctionCall","src":"1082:19:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1076:5:12"},"nodeType":"YulFunctionCall","src":"1076:26:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1044:6:12"},"nodeType":"YulFunctionCall","src":"1044:59:12"},"nodeType":"YulExpressionStatement","src":"1044:59:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"995:1:12"},{"name":"_4","nodeType":"YulIdentifier","src":"998:2:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"992:2:12"},"nodeType":"YulFunctionCall","src":"992:9:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1002:19:12","statements":[{"nodeType":"YulAssignment","src":"1004:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1013:1:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1016:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1009:3:12"},"nodeType":"YulFunctionCall","src":"1009:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1004:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"988:3:12","statements":[]},"src":"984:129:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1137:6:12"},{"name":"_4","nodeType":"YulIdentifier","src":"1145:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1133:3:12"},"nodeType":"YulFunctionCall","src":"1133:15:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1150:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1129:3:12"},"nodeType":"YulFunctionCall","src":"1129:24:12"},{"kind":"number","nodeType":"YulLiteral","src":"1155:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1122:6:12"},"nodeType":"YulFunctionCall","src":"1122:35:12"},"nodeType":"YulExpressionStatement","src":"1122:35:12"},{"nodeType":"YulAssignment","src":"1166:16:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1176:6:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1166:6:12"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:12","type":""}],"src":"146:1042:12"},{"body":{"nodeType":"YulBlock","src":"1248:325:12","statements":[{"nodeType":"YulAssignment","src":"1258:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1272:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1275:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1268:3:12"},"nodeType":"YulFunctionCall","src":"1268:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1258:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"1289:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1319:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"1325:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1315:3:12"},"nodeType":"YulFunctionCall","src":"1315:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1293:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1366:31:12","statements":[{"nodeType":"YulAssignment","src":"1368:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1382:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1390:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1378:3:12"},"nodeType":"YulFunctionCall","src":"1378:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1368:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1346:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1339:6:12"},"nodeType":"YulFunctionCall","src":"1339:26:12"},"nodeType":"YulIf","src":"1336:61:12"},{"body":{"nodeType":"YulBlock","src":"1456:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1477:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1484:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1489:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1480:3:12"},"nodeType":"YulFunctionCall","src":"1480:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1470:6:12"},"nodeType":"YulFunctionCall","src":"1470:31:12"},"nodeType":"YulExpressionStatement","src":"1470:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1521:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1524:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1514:6:12"},"nodeType":"YulFunctionCall","src":"1514:15:12"},"nodeType":"YulExpressionStatement","src":"1514:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1549:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1552:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1542:6:12"},"nodeType":"YulFunctionCall","src":"1542:15:12"},"nodeType":"YulExpressionStatement","src":"1542:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1412:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1435:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1443:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1432:2:12"},"nodeType":"YulFunctionCall","src":"1432:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1409:2:12"},"nodeType":"YulFunctionCall","src":"1409:38:12"},"nodeType":"YulIf","src":"1406:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1228:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1237:6:12","type":""}],"src":"1193:380:12"},{"body":{"nodeType":"YulBlock","src":"1634:65:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1651:1:12","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1654:3:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1644:6:12"},"nodeType":"YulFunctionCall","src":"1644:14:12"},"nodeType":"YulExpressionStatement","src":"1644:14:12"},{"nodeType":"YulAssignment","src":"1667:26:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1685:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1688:4:12","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1675:9:12"},"nodeType":"YulFunctionCall","src":"1675:18:12"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1667:4:12"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1617:3:12","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1625:4:12","type":""}],"src":"1578:121:12"},{"body":{"nodeType":"YulBlock","src":"1785:464:12","statements":[{"body":{"nodeType":"YulBlock","src":"1818:425:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1832:11:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1842:1:12","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1836:2:12","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1863:2:12"},{"name":"array","nodeType":"YulIdentifier","src":"1867:5:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1856:6:12"},"nodeType":"YulFunctionCall","src":"1856:17:12"},"nodeType":"YulExpressionStatement","src":"1856:17:12"},{"nodeType":"YulVariableDeclaration","src":"1886:31:12","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1908:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"1912:4:12","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1898:9:12"},"nodeType":"YulFunctionCall","src":"1898:19:12"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1890:4:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1930:57:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1953:4:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1963:1:12","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1970:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:12"},"nodeType":"YulFunctionCall","src":"1966:19:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1959:3:12"},"nodeType":"YulFunctionCall","src":"1959:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1949:3:12"},"nodeType":"YulFunctionCall","src":"1949:38:12"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1934:11:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2024:23:12","statements":[{"nodeType":"YulAssignment","src":"2026:19:12","value":{"name":"data","nodeType":"YulIdentifier","src":"2041:4:12"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2026:11:12"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2006:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"2018:4:12","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2003:2:12"},"nodeType":"YulFunctionCall","src":"2003:20:12"},"nodeType":"YulIf","src":"2000:47:12"},{"nodeType":"YulVariableDeclaration","src":"2060:41:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2074:4:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2084:1:12","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2091:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"2096:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2087:3:12"},"nodeType":"YulFunctionCall","src":"2087:12:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2080:3:12"},"nodeType":"YulFunctionCall","src":"2080:20:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2070:3:12"},"nodeType":"YulFunctionCall","src":"2070:31:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2064:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2114:24:12","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2127:11:12"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2118:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2212:21:12","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2221:5:12"},{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2214:6:12"},"nodeType":"YulFunctionCall","src":"2214:17:12"},"nodeType":"YulExpressionStatement","src":"2214:17:12"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2162:5:12"},{"name":"_2","nodeType":"YulIdentifier","src":"2169:2:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2159:2:12"},"nodeType":"YulFunctionCall","src":"2159:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2173:26:12","statements":[{"nodeType":"YulAssignment","src":"2175:22:12","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2188:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"2195:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:12"},"nodeType":"YulFunctionCall","src":"2184:13:12"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2175:5:12"}]}]},"pre":{"nodeType":"YulBlock","src":"2155:3:12","statements":[]},"src":"2151:82:12"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1801:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"1806:2:12","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1798:2:12"},"nodeType":"YulFunctionCall","src":"1798:11:12"},"nodeType":"YulIf","src":"1795:448:12"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1757:5:12","type":""},{"name":"len","nodeType":"YulTypedName","src":"1764:3:12","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1769:10:12","type":""}],"src":"1704:545:12"},{"body":{"nodeType":"YulBlock","src":"2339:81:12","statements":[{"nodeType":"YulAssignment","src":"2349:65:12","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2364:4:12"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2382:1:12","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2385:3:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2378:3:12"},"nodeType":"YulFunctionCall","src":"2378:11:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2395:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2391:3:12"},"nodeType":"YulFunctionCall","src":"2391:6:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2374:3:12"},"nodeType":"YulFunctionCall","src":"2374:24:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2370:3:12"},"nodeType":"YulFunctionCall","src":"2370:29:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2360:3:12"},"nodeType":"YulFunctionCall","src":"2360:40:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2406:1:12","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2409:3:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2402:3:12"},"nodeType":"YulFunctionCall","src":"2402:11:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2357:2:12"},"nodeType":"YulFunctionCall","src":"2357:57:12"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2349:4:12"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2316:4:12","type":""},{"name":"len","nodeType":"YulTypedName","src":"2322:3:12","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2330:4:12","type":""}],"src":"2254:166:12"},{"body":{"nodeType":"YulBlock","src":"2521:1256:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2531:24:12","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2551:3:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2545:5:12"},"nodeType":"YulFunctionCall","src":"2545:10:12"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2535:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2598:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2600:16:12"},"nodeType":"YulFunctionCall","src":"2600:18:12"},"nodeType":"YulExpressionStatement","src":"2600:18:12"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2570:6:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2586:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2590:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2582:3:12"},"nodeType":"YulFunctionCall","src":"2582:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"2594:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2578:3:12"},"nodeType":"YulFunctionCall","src":"2578:18:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2567:2:12"},"nodeType":"YulFunctionCall","src":"2567:30:12"},"nodeType":"YulIf","src":"2564:56:12"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2673:4:12"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2711:4:12"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2705:5:12"},"nodeType":"YulFunctionCall","src":"2705:11:12"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2679:25:12"},"nodeType":"YulFunctionCall","src":"2679:38:12"},{"name":"newLen","nodeType":"YulIdentifier","src":"2719:6:12"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2629:43:12"},"nodeType":"YulFunctionCall","src":"2629:97:12"},"nodeType":"YulExpressionStatement","src":"2629:97:12"},{"nodeType":"YulVariableDeclaration","src":"2735:18:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2752:1:12","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2739:9:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2762:23:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2781:4:12","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2766:11:12","type":""}]},{"nodeType":"YulAssignment","src":"2794:24:12","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2807:11:12"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2794:9:12"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2864:656:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2878:35:12","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2897:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2909:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2905:3:12"},"nodeType":"YulFunctionCall","src":"2905:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2893:3:12"},"nodeType":"YulFunctionCall","src":"2893:20:12"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2882:7:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2926:49:12","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2970:4:12"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2940:29:12"},"nodeType":"YulFunctionCall","src":"2940:35:12"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2930:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2988:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2997:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2992:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3075:172:12","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3100:6:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3118:3:12"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3123:9:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3114:3:12"},"nodeType":"YulFunctionCall","src":"3114:19:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3108:5:12"},"nodeType":"YulFunctionCall","src":"3108:26:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3093:6:12"},"nodeType":"YulFunctionCall","src":"3093:42:12"},"nodeType":"YulExpressionStatement","src":"3093:42:12"},{"nodeType":"YulAssignment","src":"3152:24:12","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3166:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3174:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3162:3:12"},"nodeType":"YulFunctionCall","src":"3162:14:12"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3152:6:12"}]},{"nodeType":"YulAssignment","src":"3193:40:12","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3210:9:12"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3221:11:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3206:3:12"},"nodeType":"YulFunctionCall","src":"3206:27:12"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3193:9:12"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3022:1:12"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3025:7:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3019:2:12"},"nodeType":"YulFunctionCall","src":"3019:14:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3034:28:12","statements":[{"nodeType":"YulAssignment","src":"3036:24:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3045:1:12"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3048:11:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3041:3:12"},"nodeType":"YulFunctionCall","src":"3041:19:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3036:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"3015:3:12","statements":[]},"src":"3011:236:12"},{"body":{"nodeType":"YulBlock","src":"3295:166:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3313:43:12","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3340:3:12"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3345:9:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3336:3:12"},"nodeType":"YulFunctionCall","src":"3336:19:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3330:5:12"},"nodeType":"YulFunctionCall","src":"3330:26:12"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3317:9:12","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3380:6:12"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3392:9:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3419:1:12","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3422:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3415:3:12"},"nodeType":"YulFunctionCall","src":"3415:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"3431:3:12","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3411:3:12"},"nodeType":"YulFunctionCall","src":"3411:24:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3441:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3437:3:12"},"nodeType":"YulFunctionCall","src":"3437:6:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3407:3:12"},"nodeType":"YulFunctionCall","src":"3407:37:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3403:3:12"},"nodeType":"YulFunctionCall","src":"3403:42:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3388:3:12"},"nodeType":"YulFunctionCall","src":"3388:58:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3373:6:12"},"nodeType":"YulFunctionCall","src":"3373:74:12"},"nodeType":"YulExpressionStatement","src":"3373:74:12"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3266:7:12"},{"name":"newLen","nodeType":"YulIdentifier","src":"3275:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3263:2:12"},"nodeType":"YulFunctionCall","src":"3263:19:12"},"nodeType":"YulIf","src":"3260:201:12"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3481:4:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3495:1:12","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3498:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3491:3:12"},"nodeType":"YulFunctionCall","src":"3491:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"3507:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3487:3:12"},"nodeType":"YulFunctionCall","src":"3487:22:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3474:6:12"},"nodeType":"YulFunctionCall","src":"3474:36:12"},"nodeType":"YulExpressionStatement","src":"3474:36:12"}]},"nodeType":"YulCase","src":"2857:663:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2862:1:12","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3537:234:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3551:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3564:1:12","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3555:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3600:67:12","statements":[{"nodeType":"YulAssignment","src":"3618:35:12","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3637:3:12"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3642:9:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3633:3:12"},"nodeType":"YulFunctionCall","src":"3633:19:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3627:5:12"},"nodeType":"YulFunctionCall","src":"3627:26:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3618:5:12"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3581:6:12"},"nodeType":"YulIf","src":"3578:89:12"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3687:4:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3746:5:12"},{"name":"newLen","nodeType":"YulIdentifier","src":"3753:6:12"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3693:52:12"},"nodeType":"YulFunctionCall","src":"3693:67:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3680:6:12"},"nodeType":"YulFunctionCall","src":"3680:81:12"},"nodeType":"YulExpressionStatement","src":"3680:81:12"}]},"nodeType":"YulCase","src":"3529:242:12","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2837:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2845:2:12","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2834:2:12"},"nodeType":"YulFunctionCall","src":"2834:14:12"},"nodeType":"YulSwitch","src":"2827:944:12"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2506:4:12","type":""},{"name":"src","nodeType":"YulTypedName","src":"2512:3:12","type":""}],"src":"2425:1352:12"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200162b3803806200162b83398101604081905262000034916200006e565b6200003f8162000046565b506200029e565b6002620000548282620001d2565b5050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200008257600080fd5b82516001600160401b03808211156200009a57600080fd5b818501915085601f830112620000af57600080fd5b815181811115620000c457620000c462000058565b604051601f8201601f19908116603f01168101908382118183101715620000ef57620000ef62000058565b8160405282815288868487010111156200010857600080fd5b600093505b828410156200012c57848401860151818501870152928501926200010d565b600086848301015280965050505050505092915050565b600181811c908216806200015857607f821691505b6020821081036200017957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cd57600081815260208120601f850160051c81016020861015620001a85750805b601f850160051c820191505b81811015620001c957828155600101620001b4565b5050505b505050565b81516001600160401b03811115620001ee57620001ee62000058565b6200020681620001ff845462000143565b846200017f565b602080601f8311600181146200023e5760008415620002255750858301515b600019600386901b1c1916600185901b178555620001c9565b600085815260208120601f198616915b828110156200026f578886015182559484019460019091019084016200024e565b50858210156200028e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61137d80620002ae6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610b40565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610b83565b610225565b60405190151581526020016100a9565b6100e86100e3366004610ba7565b610275565b6040516100a99190610c06565b610108610103366004610d65565b610309565b005b61011d610118366004610e0f565b610355565b6040516100a99190610f15565b610108610138366004610f28565b61047f565b6100c561014b366004610f64565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610f97565b61048e565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025657506001600160e01b031982166303a24d0760e21b145b8061021f57506301ffc9a760e01b6001600160e01b031983161461021f565b60606002805461028490610ffc565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090610ffc565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b6103415760405162461bcd60e51b81526004016101f390611036565b61034e85858585856104d3565b5050505050565b606081518351146103ba5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103d6576103d6610c19565b6040519080825280602002602001820160405280156103ff578160200160208202803683370190505b50905060005b84518110156104775761044a85828151811061042357610423611084565b602002602001015185838151811061043d5761043d611084565b602002602001015161018c565b82828151811061045c5761045c611084565b6020908102919091010152610470816110b0565b9050610405565b509392505050565b61048a3383836106b0565b5050565b6001600160a01b0385163314806104aa57506104aa853361014b565b6104c65760405162461bcd60e51b81526004016101f390611036565b61034e8585858585610790565b81518351146105355760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b03841661055b5760405162461bcd60e51b81526004016101f3906110c9565b3360005b845181101561064257600085828151811061057c5761057c611084565b60200260200101519050600085838151811061059a5761059a611084565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105ea5760405162461bcd60e51b81526004016101f39061110e565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610627908490611158565b925050819055505050508061063b906110b0565b905061055f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161069292919061116b565b60405180910390a46106a88187878787876108ba565b505050505050565b816001600160a01b0316836001600160a01b0316036107235760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107b65760405162461bcd60e51b81526004016101f3906110c9565b3360006107c285610a1e565b905060006107cf85610a1e565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156108125760405162461bcd60e51b81526004016101f39061110e565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061084f908490611158565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46108af848a8a8a8a8a610a69565b505050505050505050565b6001600160a01b0384163b156106a85760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108fe9089908990889088908890600401611199565b6020604051808303816000875af1925050508015610939575060408051601f3d908101601f19168201909252610936918101906111f7565b60015b6109e557610945611214565b806308c379a00361097e5750610959611230565b806109645750610980565b8060405162461bcd60e51b81526004016101f39190610c06565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610a155760405162461bcd60e51b81526004016101f3906112ba565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a5857610a58611084565b602090810291909101015292915050565b6001600160a01b0384163b156106a85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610aad9089908990889088908890600401611302565b6020604051808303816000875af1925050508015610ae8575060408051601f3d908101601f19168201909252610ae5918101906111f7565b60015b610af457610945611214565b6001600160e01b0319811663f23a6e6160e01b14610a155760405162461bcd60e51b81526004016101f3906112ba565b80356001600160a01b0381168114610b3b57600080fd5b919050565b60008060408385031215610b5357600080fd5b610b5c83610b24565b946020939093013593505050565b6001600160e01b031981168114610b8057600080fd5b50565b600060208284031215610b9557600080fd5b8135610ba081610b6a565b9392505050565b600060208284031215610bb957600080fd5b5035919050565b6000815180845260005b81811015610be657602081850181015186830182015201610bca565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ba06020830184610bc0565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610c5557610c55610c19565b6040525050565b600067ffffffffffffffff821115610c7657610c76610c19565b5060051b60200190565b600082601f830112610c9157600080fd5b81356020610c9e82610c5c565b604051610cab8282610c2f565b83815260059390931b8501820192828101915086841115610ccb57600080fd5b8286015b84811015610ce65780358352918301918301610ccf565b509695505050505050565b600082601f830112610d0257600080fd5b813567ffffffffffffffff811115610d1c57610d1c610c19565b604051610d33601f8301601f191660200182610c2f565b818152846020838601011115610d4857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d7d57600080fd5b610d8686610b24565b9450610d9460208701610b24565b9350604086013567ffffffffffffffff80821115610db157600080fd5b610dbd89838a01610c80565b94506060880135915080821115610dd357600080fd5b610ddf89838a01610c80565b93506080880135915080821115610df557600080fd5b50610e0288828901610cf1565b9150509295509295909350565b60008060408385031215610e2257600080fd5b823567ffffffffffffffff80821115610e3a57600080fd5b818501915085601f830112610e4e57600080fd5b81356020610e5b82610c5c565b604051610e688282610c2f565b83815260059390931b8501820192828101915089841115610e8857600080fd5b948201945b83861015610ead57610e9e86610b24565b82529482019490820190610e8d565b96505086013592505080821115610ec357600080fd5b50610ed085828601610c80565b9150509250929050565b600081518084526020808501945080840160005b83811015610f0a57815187529582019590820190600101610eee565b509495945050505050565b602081526000610ba06020830184610eda565b60008060408385031215610f3b57600080fd5b610f4483610b24565b915060208301358015158114610f5957600080fd5b809150509250929050565b60008060408385031215610f7757600080fd5b610f8083610b24565b9150610f8e60208401610b24565b90509250929050565b600080600080600060a08688031215610faf57600080fd5b610fb886610b24565b9450610fc660208701610b24565b93506040860135925060608601359150608086013567ffffffffffffffff811115610ff057600080fd5b610e0288828901610cf1565b600181811c9082168061101057607f821691505b60208210810361103057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110c2576110c261109a565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b8082018082111561021f5761021f61109a565b60408152600061117e6040830185610eda565b82810360208401526111908185610eda565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111c590830186610eda565b82810360608401526111d78186610eda565b905082810360808401526111eb8185610bc0565b98975050505050505050565b60006020828403121561120957600080fd5b8151610ba081610b6a565b600060033d111561122d5760046000803e5060005160e01c5b90565b600060443d101561123e5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561126e57505050505090565b82850191508151818111156112865750505050505090565b843d87010160208285010111156112a05750505050505090565b6112af60208286010187610c2f565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061133c90830184610bc0565b97965050505050505056fea26469706673582212203fe510a1ba6d5084418aa198565731043522e665ed50a47cfc6a51930f49f53364736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x162B CODESIZE SUB DUP1 PUSH3 0x162B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x6E JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x29E JUMP JUMPDEST PUSH1 0x2 PUSH3 0x54 DUP3 DUP3 PUSH3 0x1D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0xC4 JUMPI PUSH3 0xC4 PUSH3 0x58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xEF JUMPI PUSH3 0xEF PUSH3 0x58 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x12C JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x10D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x158 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x179 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1CD JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1A8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1C9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1B4 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH3 0x1EE PUSH3 0x58 JUMP JUMPDEST PUSH3 0x206 DUP2 PUSH3 0x1FF DUP5 SLOAD PUSH3 0x143 JUMP JUMPDEST DUP5 PUSH3 0x17F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x23E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x225 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1C9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x26F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x24E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x28E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x137D DUP1 PUSH3 0x2AE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x256 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x21F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x21F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0xFFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0xFFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x34E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4D3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x3D6 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x477 JUMPI PUSH2 0x44A DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x423 JUMPI PUSH2 0x423 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x43D JUMPI PUSH2 0x43D PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45C JUMPI PUSH2 0x45C PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x470 DUP2 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x405 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x48A CALLER DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4AA JUMPI POP PUSH2 0x4AA DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x34E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x790 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57C JUMPI PUSH2 0x57C PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI PUSH2 0x59A PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x627 SWAP1 DUP5 SWAP1 PUSH2 0x1158 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x63B SWAP1 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x55F JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x692 SWAP3 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6A8 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8BA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x7C2 DUP6 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7CF DUP6 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x84F SWAP1 DUP5 SWAP1 PUSH2 0x1158 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8AF DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA69 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x8FE SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x939 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x936 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9E5 JUMPI PUSH2 0x945 PUSH2 0x1214 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x97E JUMPI POP PUSH2 0x959 PUSH2 0x1230 JUMP JUMPDEST DUP1 PUSH2 0x964 JUMPI POP PUSH2 0x980 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12BA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA58 JUMPI PUSH2 0xA58 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAAD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAE8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAE5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAF4 JUMPI PUSH2 0x945 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12BA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5C DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA0 DUP2 PUSH2 0xB6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBCA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBC0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC55 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC76 JUMPI PUSH2 0xC76 PUSH2 0xC19 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC9E DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCAB DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xCCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCE6 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCCF JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1C PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD33 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD86 DUP7 PUSH2 0xB24 JUMP JUMPDEST SWAP5 POP PUSH2 0xD94 PUSH1 0x20 DUP8 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDBD DUP10 DUP4 DUP11 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDF DUP10 DUP4 DUP11 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE02 DUP9 DUP3 DUP10 ADD PUSH2 0xCF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE5B DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE68 DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEAD JUMPI PUSH2 0xE9E DUP7 PUSH2 0xB24 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE8D JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xEC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED0 DUP6 DUP3 DUP7 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0A JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEEE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF44 DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF80 DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8E PUSH1 0x20 DUP5 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB8 DUP7 PUSH2 0xB24 JUMP JUMPDEST SWAP5 POP PUSH2 0xFC6 PUSH1 0x20 DUP8 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE02 DUP9 DUP3 DUP10 ADD PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1010 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1030 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10C2 JUMPI PUSH2 0x10C2 PUSH2 0x109A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x21F JUMPI PUSH2 0x21F PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x117E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEDA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1190 DUP2 DUP6 PUSH2 0xEDA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11C5 SWAP1 DUP4 ADD DUP7 PUSH2 0xEDA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11D7 DUP2 DUP7 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11EB DUP2 DUP6 PUSH2 0xBC0 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBA0 DUP2 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x122D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x123E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x126E JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1286 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12A0 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12AF PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC2F JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x133C SWAP1 DUP4 ADD DUP5 PUSH2 0xBC0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xE5 LT LOG1 0xBA PUSH14 0x5084418AA198565731043522E665 0xED POP LOG4 PUSH29 0xFC6A51930F49F53364736F6C6343000812003300000000000000000000 ","sourceMap":"570:16539:1:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;:13::i;:::-;1107:62;570:16539;;8149:86;8215:4;:13;8222:6;8215:4;:13;:::i;:::-;;8149:86;:::o;14:127:12:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:12;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:12;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1193:380::-;1272:1;1268:12;;;;1315;;;1336:61;;1390:4;1382:6;1378:17;1368:27;;1336:61;1443:2;1435:6;1432:14;1412:18;1409:38;1406:161;;1489:10;1484:3;1480:20;1477:1;1470:31;1524:4;1521:1;1514:15;1552:4;1549:1;1542:15;1406:161;;1193:380;;;:::o;1704:545::-;1806:2;1801:3;1798:11;1795:448;;;1842:1;1867:5;1863:2;1856:17;1912:4;1908:2;1898:19;1982:2;1970:10;1966:19;1963:1;1959:27;1953:4;1949:38;2018:4;2006:10;2003:20;2000:47;;;-1:-1:-1;2041:4:12;2000:47;2096:2;2091:3;2087:12;2084:1;2080:20;2074:4;2070:31;2060:41;;2151:82;2169:2;2162:5;2159:13;2151:82;;;2214:17;;;2195:1;2184:13;2151:82;;;2155:3;;;1795:448;1704:545;;;:::o;2425:1352::-;2545:10;;-1:-1:-1;;;;;2567:30:12;;2564:56;;;2600:18;;:::i;:::-;2629:97;2719:6;2679:38;2711:4;2705:11;2679:38;:::i;:::-;2673:4;2629:97;:::i;:::-;2781:4;;2845:2;2834:14;;2862:1;2857:663;;;;3564:1;3581:6;3578:89;;;-1:-1:-1;3633:19:12;;;3627:26;3578:89;-1:-1:-1;;2382:1:12;2378:11;;;2374:24;2370:29;2360:40;2406:1;2402:11;;;2357:57;3680:81;;2827:944;;2857:663;1651:1;1644:14;;;1688:4;1675:18;;-1:-1:-1;;2893:20:12;;;3011:236;3025:7;3022:1;3019:14;3011:236;;;3114:19;;;3108:26;3093:42;;3206:27;;;;3174:1;3162:14;;;;3041:19;;3011:236;;;3015:3;3275:6;3266:7;3263:19;3260:201;;;3336:19;;;3330:26;-1:-1:-1;;3419:1:12;3415:14;;;3431:3;3411:24;3407:37;3403:42;3388:58;3373:74;;3260:201;-1:-1:-1;;;;;3507:1:12;3491:14;;;3487:22;3474:36;;-1:-1:-1;2425:1352:12:o;:::-;570:16539:1;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1178":{"entryPoint":null,"id":1178,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1334":{"entryPoint":2590,"id":1334,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1159":{"entryPoint":null,"id":1159,"parameterSlots":6,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1306":{"entryPoint":2234,"id":1306,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1241":{"entryPoint":2665,"id":1241,"parameterSlots":6,"returnSlots":0},"@_msgSender_2081":{"entryPoint":null,"id":2081,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_657":{"entryPoint":1235,"id":657,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_522":{"entryPoint":1936,"id":522,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1140":{"entryPoint":1712,"id":1140,"parameterSlots":3,"returnSlots":0},"@balanceOfBatch_292":{"entryPoint":853,"id":292,"parameterSlots":2,"returnSlots":1},"@balanceOf_228":{"entryPoint":396,"id":228,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_327":{"entryPoint":null,"id":327,"parameterSlots":2,"returnSlots":1},"@isContract_1757":{"entryPoint":null,"id":1757,"parameterSlots":1,"returnSlots":1},"@safeBatchTransferFrom_405":{"entryPoint":777,"id":405,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_365":{"entryPoint":1166,"id":365,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_309":{"entryPoint":1151,"id":309,"parameterSlots":2,"returnSlots":0},"@supportsInterface_188":{"entryPoint":549,"id":188,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2114":{"entryPoint":null,"id":2114,"parameterSlots":1,"returnSlots":1},"@uri_200":{"entryPoint":629,"id":200,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":2852,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":3200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3940,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":3429,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":3991,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3880,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2880,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3599,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2983,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":3802,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4505,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4866,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3861,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4459,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4794,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4150,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4297,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4366,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":3164,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4440,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4092,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3119,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":4272,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4250,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4228,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3097,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":4628,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":4656,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_bytes4":{"entryPoint":2922,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15860:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:12","statements":[{"nodeType":"YulAssignment","src":"73:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:12"},"nodeType":"YulFunctionCall","src":"82:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:12"}]},{"body":{"nodeType":"YulBlock","src":"165:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:12"},"nodeType":"YulFunctionCall","src":"167:12:12"},"nodeType":"YulExpressionStatement","src":"167:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:12"},"nodeType":"YulFunctionCall","src":"146:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:12"},"nodeType":"YulFunctionCall","src":"142:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:12"},"nodeType":"YulFunctionCall","src":"131:31:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:12"},"nodeType":"YulFunctionCall","src":"121:42:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:12"},"nodeType":"YulFunctionCall","src":"114:50:12"},"nodeType":"YulIf","src":"111:70:12"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:12","type":""}],"src":"14:173:12"},{"body":{"nodeType":"YulBlock","src":"279:167:12","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:12"},"nodeType":"YulFunctionCall","src":"327:12:12"},"nodeType":"YulExpressionStatement","src":"327:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:12"},"nodeType":"YulFunctionCall","src":"296:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:12"},"nodeType":"YulFunctionCall","src":"292:32:12"},"nodeType":"YulIf","src":"289:52:12"},{"nodeType":"YulAssignment","src":"350:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:12"},"nodeType":"YulFunctionCall","src":"360:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:12"}]},{"nodeType":"YulAssignment","src":"398:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:12"},"nodeType":"YulFunctionCall","src":"421:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:12"},"nodeType":"YulFunctionCall","src":"408:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:12","type":""}],"src":"192:254:12"},{"body":{"nodeType":"YulBlock","src":"552:76:12","statements":[{"nodeType":"YulAssignment","src":"562:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:12"},"nodeType":"YulFunctionCall","src":"570:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"615:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:12"},"nodeType":"YulFunctionCall","src":"597:25:12"},"nodeType":"YulExpressionStatement","src":"597:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:12","type":""}],"src":"451:177:12"},{"body":{"nodeType":"YulBlock","src":"677:87:12","statements":[{"body":{"nodeType":"YulBlock","src":"742:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"751:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"754:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"744:6:12"},"nodeType":"YulFunctionCall","src":"744:12:12"},"nodeType":"YulExpressionStatement","src":"744:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"700:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"711:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"722:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"727:10:12","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"718:3:12"},"nodeType":"YulFunctionCall","src":"718:20:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"707:3:12"},"nodeType":"YulFunctionCall","src":"707:32:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"697:2:12"},"nodeType":"YulFunctionCall","src":"697:43:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"690:6:12"},"nodeType":"YulFunctionCall","src":"690:51:12"},"nodeType":"YulIf","src":"687:71:12"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"666:5:12","type":""}],"src":"633:131:12"},{"body":{"nodeType":"YulBlock","src":"838:176:12","statements":[{"body":{"nodeType":"YulBlock","src":"884:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"893:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"896:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"886:6:12"},"nodeType":"YulFunctionCall","src":"886:12:12"},"nodeType":"YulExpressionStatement","src":"886:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"859:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"855:3:12"},"nodeType":"YulFunctionCall","src":"855:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"880:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"851:3:12"},"nodeType":"YulFunctionCall","src":"851:32:12"},"nodeType":"YulIf","src":"848:52:12"},{"nodeType":"YulVariableDeclaration","src":"909:36:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"935:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"922:12:12"},"nodeType":"YulFunctionCall","src":"922:23:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"913:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:12"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"954:23:12"},"nodeType":"YulFunctionCall","src":"954:30:12"},"nodeType":"YulExpressionStatement","src":"954:30:12"},{"nodeType":"YulAssignment","src":"993:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"1003:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"993:6:12"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"804:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"815:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"827:6:12","type":""}],"src":"769:245:12"},{"body":{"nodeType":"YulBlock","src":"1114:92:12","statements":[{"nodeType":"YulAssignment","src":"1124:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1136:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1147:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1132:3:12"},"nodeType":"YulFunctionCall","src":"1132:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1124:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:12"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1184:6:12"},"nodeType":"YulFunctionCall","src":"1184:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:12"},"nodeType":"YulFunctionCall","src":"1177:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:12"},"nodeType":"YulFunctionCall","src":"1159:41:12"},"nodeType":"YulExpressionStatement","src":"1159:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1083:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1094:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1105:4:12","type":""}],"src":"1019:187:12"},{"body":{"nodeType":"YulBlock","src":"1281:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"1327:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1336:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1339:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1329:6:12"},"nodeType":"YulFunctionCall","src":"1329:12:12"},"nodeType":"YulExpressionStatement","src":"1329:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1311:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1298:3:12"},"nodeType":"YulFunctionCall","src":"1298:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1323:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1294:3:12"},"nodeType":"YulFunctionCall","src":"1294:32:12"},"nodeType":"YulIf","src":"1291:52:12"},{"nodeType":"YulAssignment","src":"1352:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1375:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1362:12:12"},"nodeType":"YulFunctionCall","src":"1362:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1352:6:12"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1247:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1258:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1270:6:12","type":""}],"src":"1211:180:12"},{"body":{"nodeType":"YulBlock","src":"1446:373:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1456:26:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1476:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1470:5:12"},"nodeType":"YulFunctionCall","src":"1470:12:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1460:6:12","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1498:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"1503:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1491:6:12"},"nodeType":"YulFunctionCall","src":"1491:19:12"},"nodeType":"YulExpressionStatement","src":"1491:19:12"},{"nodeType":"YulVariableDeclaration","src":"1519:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1528:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1523:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1590:110:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1604:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1614:4:12","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1608:2:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1646:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"1651:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1642:3:12"},"nodeType":"YulFunctionCall","src":"1642:11:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1655:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1638:3:12"},"nodeType":"YulFunctionCall","src":"1638:20:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1674:5:12"},{"name":"i","nodeType":"YulIdentifier","src":"1681:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1670:3:12"},"nodeType":"YulFunctionCall","src":"1670:13:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1685:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1666:3:12"},"nodeType":"YulFunctionCall","src":"1666:22:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1660:5:12"},"nodeType":"YulFunctionCall","src":"1660:29:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1631:6:12"},"nodeType":"YulFunctionCall","src":"1631:59:12"},"nodeType":"YulExpressionStatement","src":"1631:59:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1549:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"1552:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1546:2:12"},"nodeType":"YulFunctionCall","src":"1546:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1560:21:12","statements":[{"nodeType":"YulAssignment","src":"1562:17:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1571:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"1574:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1567:3:12"},"nodeType":"YulFunctionCall","src":"1567:12:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1562:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"1542:3:12","statements":[]},"src":"1538:162:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1724:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"1729:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1720:3:12"},"nodeType":"YulFunctionCall","src":"1720:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"1738:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1716:3:12"},"nodeType":"YulFunctionCall","src":"1716:27:12"},{"kind":"number","nodeType":"YulLiteral","src":"1745:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1709:6:12"},"nodeType":"YulFunctionCall","src":"1709:38:12"},"nodeType":"YulExpressionStatement","src":"1709:38:12"},{"nodeType":"YulAssignment","src":"1756:57:12","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1771:3:12"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1784:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1792:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1780:3:12"},"nodeType":"YulFunctionCall","src":"1780:15:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1801:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1797:3:12"},"nodeType":"YulFunctionCall","src":"1797:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1776:3:12"},"nodeType":"YulFunctionCall","src":"1776:29:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1767:3:12"},"nodeType":"YulFunctionCall","src":"1767:39:12"},{"kind":"number","nodeType":"YulLiteral","src":"1808:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1763:3:12"},"nodeType":"YulFunctionCall","src":"1763:50:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1756:3:12"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1423:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1430:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1438:3:12","type":""}],"src":"1396:423:12"},{"body":{"nodeType":"YulBlock","src":"1945:99:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1962:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1973:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1955:6:12"},"nodeType":"YulFunctionCall","src":"1955:21:12"},"nodeType":"YulExpressionStatement","src":"1955:21:12"},{"nodeType":"YulAssignment","src":"1985:53:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2011:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2023:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2034:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2019:3:12"},"nodeType":"YulFunctionCall","src":"2019:18:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1993:17:12"},"nodeType":"YulFunctionCall","src":"1993:45:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1985:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1914:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1925:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1936:4:12","type":""}],"src":"1824:220:12"},{"body":{"nodeType":"YulBlock","src":"2081:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2098:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2105:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2110:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2101:3:12"},"nodeType":"YulFunctionCall","src":"2101:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2091:6:12"},"nodeType":"YulFunctionCall","src":"2091:31:12"},"nodeType":"YulExpressionStatement","src":"2091:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2138:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2141:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2131:6:12"},"nodeType":"YulFunctionCall","src":"2131:15:12"},"nodeType":"YulExpressionStatement","src":"2131:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2162:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2165:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2155:6:12"},"nodeType":"YulFunctionCall","src":"2155:15:12"},"nodeType":"YulExpressionStatement","src":"2155:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2049:127:12"},{"body":{"nodeType":"YulBlock","src":"2228:202:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2238:58:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2260:6:12"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2276:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"2282:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2272:3:12"},"nodeType":"YulFunctionCall","src":"2272:13:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2287:3:12"},"nodeType":"YulFunctionCall","src":"2287:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2268:3:12"},"nodeType":"YulFunctionCall","src":"2268:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2256:3:12"},"nodeType":"YulFunctionCall","src":"2256:40:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2242:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2371:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2373:16:12"},"nodeType":"YulFunctionCall","src":"2373:18:12"},"nodeType":"YulExpressionStatement","src":"2373:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2314:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"2326:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2311:2:12"},"nodeType":"YulFunctionCall","src":"2311:34:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2350:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2362:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2347:2:12"},"nodeType":"YulFunctionCall","src":"2347:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2308:2:12"},"nodeType":"YulFunctionCall","src":"2308:62:12"},"nodeType":"YulIf","src":"2305:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2409:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2413:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2402:6:12"},"nodeType":"YulFunctionCall","src":"2402:22:12"},"nodeType":"YulExpressionStatement","src":"2402:22:12"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2210:6:12","type":""},{"name":"size","nodeType":"YulTypedName","src":"2218:4:12","type":""}],"src":"2181:249:12"},{"body":{"nodeType":"YulBlock","src":"2504:114:12","statements":[{"body":{"nodeType":"YulBlock","src":"2548:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2550:16:12"},"nodeType":"YulFunctionCall","src":"2550:18:12"},"nodeType":"YulExpressionStatement","src":"2550:18:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2520:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2528:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2517:2:12"},"nodeType":"YulFunctionCall","src":"2517:30:12"},"nodeType":"YulIf","src":"2514:56:12"},{"nodeType":"YulAssignment","src":"2579:33:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2595:1:12","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2598:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2591:3:12"},"nodeType":"YulFunctionCall","src":"2591:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"2607:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:12"},"nodeType":"YulFunctionCall","src":"2587:25:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2579:4:12"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2484:6:12","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2495:4:12","type":""}],"src":"2435:183:12"},{"body":{"nodeType":"YulBlock","src":"2687:660:12","statements":[{"body":{"nodeType":"YulBlock","src":"2736:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2745:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2748:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2738:6:12"},"nodeType":"YulFunctionCall","src":"2738:12:12"},"nodeType":"YulExpressionStatement","src":"2738:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2715:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2723:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2711:3:12"},"nodeType":"YulFunctionCall","src":"2711:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"2730:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2707:3:12"},"nodeType":"YulFunctionCall","src":"2707:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2700:6:12"},"nodeType":"YulFunctionCall","src":"2700:35:12"},"nodeType":"YulIf","src":"2697:55:12"},{"nodeType":"YulVariableDeclaration","src":"2761:30:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2784:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2771:12:12"},"nodeType":"YulFunctionCall","src":"2771:20:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2765:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2800:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2810:4:12","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2804:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2823:53:12","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2873:2:12"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"2833:39:12"},"nodeType":"YulFunctionCall","src":"2833:43:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2827:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2885:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2905:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2899:5:12"},"nodeType":"YulFunctionCall","src":"2899:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2889:6:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2937:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"2945:2:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2917:19:12"},"nodeType":"YulFunctionCall","src":"2917:31:12"},"nodeType":"YulExpressionStatement","src":"2917:31:12"},{"nodeType":"YulVariableDeclaration","src":"2957:17:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2968:6:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2961:3:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2990:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"2998:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2983:6:12"},"nodeType":"YulFunctionCall","src":"2983:18:12"},"nodeType":"YulExpressionStatement","src":"2983:18:12"},{"nodeType":"YulAssignment","src":"3010:22:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3021:6:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3029:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3017:3:12"},"nodeType":"YulFunctionCall","src":"3017:15:12"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3010:3:12"}]},{"nodeType":"YulVariableDeclaration","src":"3041:46:12","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3063:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3075:1:12","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3078:2:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3071:3:12"},"nodeType":"YulFunctionCall","src":"3071:10:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3059:3:12"},"nodeType":"YulFunctionCall","src":"3059:23:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3084:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3055:3:12"},"nodeType":"YulFunctionCall","src":"3055:32:12"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3045:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3115:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3124:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3127:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3117:6:12"},"nodeType":"YulFunctionCall","src":"3117:12:12"},"nodeType":"YulExpressionStatement","src":"3117:12:12"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3102:6:12"},{"name":"end","nodeType":"YulIdentifier","src":"3110:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3099:2:12"},"nodeType":"YulFunctionCall","src":"3099:15:12"},"nodeType":"YulIf","src":"3096:35:12"},{"nodeType":"YulVariableDeclaration","src":"3140:26:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3163:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3151:3:12"},"nodeType":"YulFunctionCall","src":"3151:15:12"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3144:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3231:86:12","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3252:3:12"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3270:3:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3257:12:12"},"nodeType":"YulFunctionCall","src":"3257:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3245:6:12"},"nodeType":"YulFunctionCall","src":"3245:30:12"},"nodeType":"YulExpressionStatement","src":"3245:30:12"},{"nodeType":"YulAssignment","src":"3288:19:12","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3299:3:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3304:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3295:3:12"},"nodeType":"YulFunctionCall","src":"3295:12:12"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3288:3:12"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3186:3:12"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3191:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3183:2:12"},"nodeType":"YulFunctionCall","src":"3183:15:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3199:23:12","statements":[{"nodeType":"YulAssignment","src":"3201:19:12","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3212:3:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3217:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3208:3:12"},"nodeType":"YulFunctionCall","src":"3208:12:12"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3201:3:12"}]}]},"pre":{"nodeType":"YulBlock","src":"3179:3:12","statements":[]},"src":"3175:142:12"},{"nodeType":"YulAssignment","src":"3326:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3335:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3326:5:12"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2661:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"2669:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2677:5:12","type":""}],"src":"2623:724:12"},{"body":{"nodeType":"YulBlock","src":"3404:503:12","statements":[{"body":{"nodeType":"YulBlock","src":"3453:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3462:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3465:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3455:6:12"},"nodeType":"YulFunctionCall","src":"3455:12:12"},"nodeType":"YulExpressionStatement","src":"3455:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3432:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3440:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3428:3:12"},"nodeType":"YulFunctionCall","src":"3428:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"3447:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3424:3:12"},"nodeType":"YulFunctionCall","src":"3424:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3417:6:12"},"nodeType":"YulFunctionCall","src":"3417:35:12"},"nodeType":"YulIf","src":"3414:55:12"},{"nodeType":"YulVariableDeclaration","src":"3478:30:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3501:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3488:12:12"},"nodeType":"YulFunctionCall","src":"3488:20:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3482:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3547:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3549:16:12"},"nodeType":"YulFunctionCall","src":"3549:18:12"},"nodeType":"YulExpressionStatement","src":"3549:18:12"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3523:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"3527:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3520:2:12"},"nodeType":"YulFunctionCall","src":"3520:26:12"},"nodeType":"YulIf","src":"3517:52:12"},{"nodeType":"YulVariableDeclaration","src":"3578:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3598:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3592:5:12"},"nodeType":"YulFunctionCall","src":"3592:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3582:6:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3630:6:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3650:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"3654:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3646:3:12"},"nodeType":"YulFunctionCall","src":"3646:13:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3665:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3661:3:12"},"nodeType":"YulFunctionCall","src":"3661:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3642:3:12"},"nodeType":"YulFunctionCall","src":"3642:27:12"},{"kind":"number","nodeType":"YulLiteral","src":"3671:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3638:3:12"},"nodeType":"YulFunctionCall","src":"3638:38:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3610:19:12"},"nodeType":"YulFunctionCall","src":"3610:67:12"},"nodeType":"YulExpressionStatement","src":"3610:67:12"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3693:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3701:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3686:6:12"},"nodeType":"YulFunctionCall","src":"3686:18:12"},"nodeType":"YulExpressionStatement","src":"3686:18:12"},{"body":{"nodeType":"YulBlock","src":"3752:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3761:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3764:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3754:6:12"},"nodeType":"YulFunctionCall","src":"3754:12:12"},"nodeType":"YulExpressionStatement","src":"3754:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3727:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3735:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3723:3:12"},"nodeType":"YulFunctionCall","src":"3723:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"3740:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3719:3:12"},"nodeType":"YulFunctionCall","src":"3719:26:12"},{"name":"end","nodeType":"YulIdentifier","src":"3747:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3716:2:12"},"nodeType":"YulFunctionCall","src":"3716:35:12"},"nodeType":"YulIf","src":"3713:55:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3794:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3802:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:12"},"nodeType":"YulFunctionCall","src":"3790:17:12"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3813:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3821:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3809:3:12"},"nodeType":"YulFunctionCall","src":"3809:17:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3828:2:12"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3777:12:12"},"nodeType":"YulFunctionCall","src":"3777:54:12"},"nodeType":"YulExpressionStatement","src":"3777:54:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3855:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3863:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3851:3:12"},"nodeType":"YulFunctionCall","src":"3851:15:12"},{"kind":"number","nodeType":"YulLiteral","src":"3868:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3847:3:12"},"nodeType":"YulFunctionCall","src":"3847:26:12"},{"kind":"number","nodeType":"YulLiteral","src":"3875:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3840:6:12"},"nodeType":"YulFunctionCall","src":"3840:37:12"},"nodeType":"YulExpressionStatement","src":"3840:37:12"},{"nodeType":"YulAssignment","src":"3886:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3895:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3886:5:12"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3378:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"3386:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3394:5:12","type":""}],"src":"3352:555:12"},{"body":{"nodeType":"YulBlock","src":"4109:746:12","statements":[{"body":{"nodeType":"YulBlock","src":"4156:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4165:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4168:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4158:6:12"},"nodeType":"YulFunctionCall","src":"4158:12:12"},"nodeType":"YulExpressionStatement","src":"4158:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4130:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4139:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4126:3:12"},"nodeType":"YulFunctionCall","src":"4126:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4151:3:12","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4122:3:12"},"nodeType":"YulFunctionCall","src":"4122:33:12"},"nodeType":"YulIf","src":"4119:53:12"},{"nodeType":"YulAssignment","src":"4181:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4210:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4191:18:12"},"nodeType":"YulFunctionCall","src":"4191:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4181:6:12"}]},{"nodeType":"YulAssignment","src":"4229:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4262:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4273:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4258:3:12"},"nodeType":"YulFunctionCall","src":"4258:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4239:18:12"},"nodeType":"YulFunctionCall","src":"4239:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4229:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"4286:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4317:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4328:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4313:3:12"},"nodeType":"YulFunctionCall","src":"4313:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4300:12:12"},"nodeType":"YulFunctionCall","src":"4300:32:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4290:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4341:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4351:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4345:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4396:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4405:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4408:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4398:6:12"},"nodeType":"YulFunctionCall","src":"4398:12:12"},"nodeType":"YulExpressionStatement","src":"4398:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4384:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4392:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4381:2:12"},"nodeType":"YulFunctionCall","src":"4381:14:12"},"nodeType":"YulIf","src":"4378:34:12"},{"nodeType":"YulAssignment","src":"4421:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4464:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"4475:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4460:3:12"},"nodeType":"YulFunctionCall","src":"4460:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4484:7:12"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4431:28:12"},"nodeType":"YulFunctionCall","src":"4431:61:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4421:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"4501:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4534:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4545:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4530:3:12"},"nodeType":"YulFunctionCall","src":"4530:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4517:12:12"},"nodeType":"YulFunctionCall","src":"4517:32:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4505:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4578:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4587:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4590:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4580:6:12"},"nodeType":"YulFunctionCall","src":"4580:12:12"},"nodeType":"YulExpressionStatement","src":"4580:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4564:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4574:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4561:2:12"},"nodeType":"YulFunctionCall","src":"4561:16:12"},"nodeType":"YulIf","src":"4558:36:12"},{"nodeType":"YulAssignment","src":"4603:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4646:9:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4657:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:12"},"nodeType":"YulFunctionCall","src":"4642:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4668:7:12"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4613:28:12"},"nodeType":"YulFunctionCall","src":"4613:63:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4603:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"4685:49:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4718:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4729:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4714:3:12"},"nodeType":"YulFunctionCall","src":"4714:19:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4701:12:12"},"nodeType":"YulFunctionCall","src":"4701:33:12"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4689:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4763:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4772:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4775:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4765:6:12"},"nodeType":"YulFunctionCall","src":"4765:12:12"},"nodeType":"YulExpressionStatement","src":"4765:12:12"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4749:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4759:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4746:2:12"},"nodeType":"YulFunctionCall","src":"4746:16:12"},"nodeType":"YulIf","src":"4743:36:12"},{"nodeType":"YulAssignment","src":"4788:61:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4819:9:12"},{"name":"offset_2","nodeType":"YulIdentifier","src":"4830:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:12"},"nodeType":"YulFunctionCall","src":"4815:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4841:7:12"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4798:16:12"},"nodeType":"YulFunctionCall","src":"4798:51:12"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4788:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4043:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4054:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4066:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4074:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4082:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4090:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4098:6:12","type":""}],"src":"3912:943:12"},{"body":{"nodeType":"YulBlock","src":"4997:1071:12","statements":[{"body":{"nodeType":"YulBlock","src":"5043:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5052:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5055:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5045:6:12"},"nodeType":"YulFunctionCall","src":"5045:12:12"},"nodeType":"YulExpressionStatement","src":"5045:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5018:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5027:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5014:3:12"},"nodeType":"YulFunctionCall","src":"5014:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5039:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5010:3:12"},"nodeType":"YulFunctionCall","src":"5010:32:12"},"nodeType":"YulIf","src":"5007:52:12"},{"nodeType":"YulVariableDeclaration","src":"5068:37:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5095:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5082:12:12"},"nodeType":"YulFunctionCall","src":"5082:23:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5072:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5114:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5124:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5118:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5169:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5178:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5181:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5171:6:12"},"nodeType":"YulFunctionCall","src":"5171:12:12"},"nodeType":"YulExpressionStatement","src":"5171:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5157:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"5165:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5154:2:12"},"nodeType":"YulFunctionCall","src":"5154:14:12"},"nodeType":"YulIf","src":"5151:34:12"},{"nodeType":"YulVariableDeclaration","src":"5194:32:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:12"},"nodeType":"YulFunctionCall","src":"5204:22:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5198:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5274:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5283:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5286:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5276:6:12"},"nodeType":"YulFunctionCall","src":"5276:12:12"},"nodeType":"YulExpressionStatement","src":"5276:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5253:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"5257:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5249:3:12"},"nodeType":"YulFunctionCall","src":"5249:13:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5264:7:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5245:3:12"},"nodeType":"YulFunctionCall","src":"5245:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5238:6:12"},"nodeType":"YulFunctionCall","src":"5238:35:12"},"nodeType":"YulIf","src":"5235:55:12"},{"nodeType":"YulVariableDeclaration","src":"5299:26:12","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5322:2:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5309:12:12"},"nodeType":"YulFunctionCall","src":"5309:16:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5303:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5334:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5344:4:12","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5338:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5357:53:12","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5407:2:12"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"5367:39:12"},"nodeType":"YulFunctionCall","src":"5367:43:12"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"5361:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5419:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5439:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5433:5:12"},"nodeType":"YulFunctionCall","src":"5433:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5423:6:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5471:6:12"},{"name":"_5","nodeType":"YulIdentifier","src":"5479:2:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5451:19:12"},"nodeType":"YulFunctionCall","src":"5451:31:12"},"nodeType":"YulExpressionStatement","src":"5451:31:12"},{"nodeType":"YulVariableDeclaration","src":"5491:17:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5502:6:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5495:3:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5524:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"5532:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5517:6:12"},"nodeType":"YulFunctionCall","src":"5517:18:12"},"nodeType":"YulExpressionStatement","src":"5517:18:12"},{"nodeType":"YulAssignment","src":"5544:22:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5555:6:12"},{"name":"_4","nodeType":"YulIdentifier","src":"5563:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5551:3:12"},"nodeType":"YulFunctionCall","src":"5551:15:12"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5544:3:12"}]},{"nodeType":"YulVariableDeclaration","src":"5575:42:12","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5597:2:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5605:1:12","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"5608:2:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5601:3:12"},"nodeType":"YulFunctionCall","src":"5601:10:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5593:3:12"},"nodeType":"YulFunctionCall","src":"5593:19:12"},{"name":"_4","nodeType":"YulIdentifier","src":"5614:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5589:3:12"},"nodeType":"YulFunctionCall","src":"5589:28:12"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5579:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5649:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5658:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5661:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5651:6:12"},"nodeType":"YulFunctionCall","src":"5651:12:12"},"nodeType":"YulExpressionStatement","src":"5651:12:12"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5632:6:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5640:7:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5629:2:12"},"nodeType":"YulFunctionCall","src":"5629:19:12"},"nodeType":"YulIf","src":"5626:39:12"},{"nodeType":"YulVariableDeclaration","src":"5674:22:12","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5689:2:12"},{"name":"_4","nodeType":"YulIdentifier","src":"5693:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5685:3:12"},"nodeType":"YulFunctionCall","src":"5685:11:12"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5678:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5761:92:12","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5782:3:12"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5806:3:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5787:18:12"},"nodeType":"YulFunctionCall","src":"5787:23:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5775:6:12"},"nodeType":"YulFunctionCall","src":"5775:36:12"},"nodeType":"YulExpressionStatement","src":"5775:36:12"},{"nodeType":"YulAssignment","src":"5824:19:12","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5835:3:12"},{"name":"_4","nodeType":"YulIdentifier","src":"5840:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5831:3:12"},"nodeType":"YulFunctionCall","src":"5831:12:12"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5824:3:12"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5716:3:12"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5721:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5713:2:12"},"nodeType":"YulFunctionCall","src":"5713:15:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5729:23:12","statements":[{"nodeType":"YulAssignment","src":"5731:19:12","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5742:3:12"},{"name":"_4","nodeType":"YulIdentifier","src":"5747:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5738:3:12"},"nodeType":"YulFunctionCall","src":"5738:12:12"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5731:3:12"}]}]},"pre":{"nodeType":"YulBlock","src":"5709:3:12","statements":[]},"src":"5705:148:12"},{"nodeType":"YulAssignment","src":"5862:16:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"5872:6:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5862:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"5887:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5920:9:12"},{"name":"_4","nodeType":"YulIdentifier","src":"5931:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5916:3:12"},"nodeType":"YulFunctionCall","src":"5916:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5903:12:12"},"nodeType":"YulFunctionCall","src":"5903:32:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5891:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5964:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5973:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5976:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5966:6:12"},"nodeType":"YulFunctionCall","src":"5966:12:12"},"nodeType":"YulExpressionStatement","src":"5966:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5950:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"5960:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5947:2:12"},"nodeType":"YulFunctionCall","src":"5947:16:12"},"nodeType":"YulIf","src":"5944:36:12"},{"nodeType":"YulAssignment","src":"5989:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6032:9:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6043:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6028:3:12"},"nodeType":"YulFunctionCall","src":"6028:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6054:7:12"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5999:28:12"},"nodeType":"YulFunctionCall","src":"5999:63:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5989:6:12"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4955:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4966:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4978:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4986:6:12","type":""}],"src":"4860:1208:12"},{"body":{"nodeType":"YulBlock","src":"6134:374:12","statements":[{"nodeType":"YulVariableDeclaration","src":"6144:26:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6164:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6158:5:12"},"nodeType":"YulFunctionCall","src":"6158:12:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6148:6:12","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6186:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"6191:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6179:6:12"},"nodeType":"YulFunctionCall","src":"6179:19:12"},"nodeType":"YulExpressionStatement","src":"6179:19:12"},{"nodeType":"YulVariableDeclaration","src":"6207:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6217:4:12","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6211:2:12","type":""}]},{"nodeType":"YulAssignment","src":"6230:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6241:3:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6246:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6237:3:12"},"nodeType":"YulFunctionCall","src":"6237:12:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6230:3:12"}]},{"nodeType":"YulVariableDeclaration","src":"6258:28:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6276:5:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6283:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:12"},"nodeType":"YulFunctionCall","src":"6272:14:12"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6262:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6295:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6304:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6299:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"6363:120:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6384:3:12"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6395:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6389:5:12"},"nodeType":"YulFunctionCall","src":"6389:13:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6377:6:12"},"nodeType":"YulFunctionCall","src":"6377:26:12"},"nodeType":"YulExpressionStatement","src":"6377:26:12"},{"nodeType":"YulAssignment","src":"6416:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6427:3:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6432:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6423:3:12"},"nodeType":"YulFunctionCall","src":"6423:12:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6416:3:12"}]},{"nodeType":"YulAssignment","src":"6448:25:12","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6462:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6470:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6458:3:12"},"nodeType":"YulFunctionCall","src":"6458:15:12"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6448:6:12"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6325:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"6328:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6322:2:12"},"nodeType":"YulFunctionCall","src":"6322:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6336:18:12","statements":[{"nodeType":"YulAssignment","src":"6338:14:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6347:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"6350:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6343:3:12"},"nodeType":"YulFunctionCall","src":"6343:9:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6338:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"6318:3:12","statements":[]},"src":"6314:169:12"},{"nodeType":"YulAssignment","src":"6492:10:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"6499:3:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6492:3:12"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6111:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6118:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6126:3:12","type":""}],"src":"6073:435:12"},{"body":{"nodeType":"YulBlock","src":"6664:110:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6681:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6692:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6674:6:12"},"nodeType":"YulFunctionCall","src":"6674:21:12"},"nodeType":"YulExpressionStatement","src":"6674:21:12"},{"nodeType":"YulAssignment","src":"6704:64:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6741:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6753:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6764:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6749:3:12"},"nodeType":"YulFunctionCall","src":"6749:18:12"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6712:28:12"},"nodeType":"YulFunctionCall","src":"6712:56:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6704:4:12"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6633:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6644:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6655:4:12","type":""}],"src":"6513:261:12"},{"body":{"nodeType":"YulBlock","src":"6863:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"6909:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6918:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6921:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6911:6:12"},"nodeType":"YulFunctionCall","src":"6911:12:12"},"nodeType":"YulExpressionStatement","src":"6911:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6884:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"6893:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6880:3:12"},"nodeType":"YulFunctionCall","src":"6880:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"6905:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6876:3:12"},"nodeType":"YulFunctionCall","src":"6876:32:12"},"nodeType":"YulIf","src":"6873:52:12"},{"nodeType":"YulAssignment","src":"6934:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6963:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6944:18:12"},"nodeType":"YulFunctionCall","src":"6944:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6934:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"6982:45:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7012:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7023:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7008:3:12"},"nodeType":"YulFunctionCall","src":"7008:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6995:12:12"},"nodeType":"YulFunctionCall","src":"6995:32:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6986:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"7080:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7089:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7092:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7082:6:12"},"nodeType":"YulFunctionCall","src":"7082:12:12"},"nodeType":"YulExpressionStatement","src":"7082:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7049:5:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7070:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7063:6:12"},"nodeType":"YulFunctionCall","src":"7063:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7056:6:12"},"nodeType":"YulFunctionCall","src":"7056:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7046:2:12"},"nodeType":"YulFunctionCall","src":"7046:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7039:6:12"},"nodeType":"YulFunctionCall","src":"7039:40:12"},"nodeType":"YulIf","src":"7036:60:12"},{"nodeType":"YulAssignment","src":"7105:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"7115:5:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7105:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6821:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6832:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6844:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6852:6:12","type":""}],"src":"6779:347:12"},{"body":{"nodeType":"YulBlock","src":"7218:173:12","statements":[{"body":{"nodeType":"YulBlock","src":"7264:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7273:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7276:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7266:6:12"},"nodeType":"YulFunctionCall","src":"7266:12:12"},"nodeType":"YulExpressionStatement","src":"7266:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7239:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"7248:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7235:3:12"},"nodeType":"YulFunctionCall","src":"7235:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"7260:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7231:3:12"},"nodeType":"YulFunctionCall","src":"7231:32:12"},"nodeType":"YulIf","src":"7228:52:12"},{"nodeType":"YulAssignment","src":"7289:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7318:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7299:18:12"},"nodeType":"YulFunctionCall","src":"7299:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7289:6:12"}]},{"nodeType":"YulAssignment","src":"7337:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7370:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7381:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7366:3:12"},"nodeType":"YulFunctionCall","src":"7366:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7347:18:12"},"nodeType":"YulFunctionCall","src":"7347:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7337:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7176:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7187:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7199:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7207:6:12","type":""}],"src":"7131:260:12"},{"body":{"nodeType":"YulBlock","src":"7543:459:12","statements":[{"body":{"nodeType":"YulBlock","src":"7590:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7599:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7602:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7592:6:12"},"nodeType":"YulFunctionCall","src":"7592:12:12"},"nodeType":"YulExpressionStatement","src":"7592:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7564:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"7573:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7560:3:12"},"nodeType":"YulFunctionCall","src":"7560:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"7585:3:12","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7556:3:12"},"nodeType":"YulFunctionCall","src":"7556:33:12"},"nodeType":"YulIf","src":"7553:53:12"},{"nodeType":"YulAssignment","src":"7615:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7644:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7625:18:12"},"nodeType":"YulFunctionCall","src":"7625:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7615:6:12"}]},{"nodeType":"YulAssignment","src":"7663:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7696:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7707:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7692:3:12"},"nodeType":"YulFunctionCall","src":"7692:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7673:18:12"},"nodeType":"YulFunctionCall","src":"7673:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7663:6:12"}]},{"nodeType":"YulAssignment","src":"7720:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7747:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7758:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:12"},"nodeType":"YulFunctionCall","src":"7743:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7730:12:12"},"nodeType":"YulFunctionCall","src":"7730:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7720:6:12"}]},{"nodeType":"YulAssignment","src":"7771:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7798:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7809:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7794:3:12"},"nodeType":"YulFunctionCall","src":"7794:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7781:12:12"},"nodeType":"YulFunctionCall","src":"7781:32:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7771:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"7822:47:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7853:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7864:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7849:3:12"},"nodeType":"YulFunctionCall","src":"7849:19:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7836:12:12"},"nodeType":"YulFunctionCall","src":"7836:33:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7826:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7921:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7924:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7914:6:12"},"nodeType":"YulFunctionCall","src":"7914:12:12"},"nodeType":"YulExpressionStatement","src":"7914:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7884:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7892:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7881:2:12"},"nodeType":"YulFunctionCall","src":"7881:30:12"},"nodeType":"YulIf","src":"7878:50:12"},{"nodeType":"YulAssignment","src":"7937:59:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7968:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"7979:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7964:3:12"},"nodeType":"YulFunctionCall","src":"7964:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7988:7:12"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7947:16:12"},"nodeType":"YulFunctionCall","src":"7947:49:12"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7937:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7477:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7488:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7500:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7508:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7516:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7524:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7532:6:12","type":""}],"src":"7396:606:12"},{"body":{"nodeType":"YulBlock","src":"8181:232:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8198:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8209:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8191:6:12"},"nodeType":"YulFunctionCall","src":"8191:21:12"},"nodeType":"YulExpressionStatement","src":"8191:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8232:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8243:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8228:3:12"},"nodeType":"YulFunctionCall","src":"8228:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"8248:2:12","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8221:6:12"},"nodeType":"YulFunctionCall","src":"8221:30:12"},"nodeType":"YulExpressionStatement","src":"8221:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8271:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8282:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8267:3:12"},"nodeType":"YulFunctionCall","src":"8267:18:12"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"8287:34:12","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8260:6:12"},"nodeType":"YulFunctionCall","src":"8260:62:12"},"nodeType":"YulExpressionStatement","src":"8260:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8342:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8353:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8338:3:12"},"nodeType":"YulFunctionCall","src":"8338:18:12"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8358:12:12","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8331:6:12"},"nodeType":"YulFunctionCall","src":"8331:40:12"},"nodeType":"YulExpressionStatement","src":"8331:40:12"},{"nodeType":"YulAssignment","src":"8380:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8392:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8403:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8388:3:12"},"nodeType":"YulFunctionCall","src":"8388:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8380:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8158:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8172:4:12","type":""}],"src":"8007:406:12"},{"body":{"nodeType":"YulBlock","src":"8473:325:12","statements":[{"nodeType":"YulAssignment","src":"8483:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8497:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8500:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8493:3:12"},"nodeType":"YulFunctionCall","src":"8493:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8483:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"8514:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8544:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"8550:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8540:3:12"},"nodeType":"YulFunctionCall","src":"8540:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8518:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"8591:31:12","statements":[{"nodeType":"YulAssignment","src":"8593:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8607:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"8615:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8603:3:12"},"nodeType":"YulFunctionCall","src":"8603:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8593:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8571:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8564:6:12"},"nodeType":"YulFunctionCall","src":"8564:26:12"},"nodeType":"YulIf","src":"8561:61:12"},{"body":{"nodeType":"YulBlock","src":"8681:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8702:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8709:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8714:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8705:3:12"},"nodeType":"YulFunctionCall","src":"8705:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8695:6:12"},"nodeType":"YulFunctionCall","src":"8695:31:12"},"nodeType":"YulExpressionStatement","src":"8695:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8746:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8749:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8739:6:12"},"nodeType":"YulFunctionCall","src":"8739:15:12"},"nodeType":"YulExpressionStatement","src":"8739:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8774:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8777:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8767:6:12"},"nodeType":"YulFunctionCall","src":"8767:15:12"},"nodeType":"YulExpressionStatement","src":"8767:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8637:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8660:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"8668:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8657:2:12"},"nodeType":"YulFunctionCall","src":"8657:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8634:2:12"},"nodeType":"YulFunctionCall","src":"8634:38:12"},"nodeType":"YulIf","src":"8631:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8453:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8462:6:12","type":""}],"src":"8418:380:12"},{"body":{"nodeType":"YulBlock","src":"8977:236:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8994:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9005:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8987:6:12"},"nodeType":"YulFunctionCall","src":"8987:21:12"},"nodeType":"YulExpressionStatement","src":"8987:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9028:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9039:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9024:3:12"},"nodeType":"YulFunctionCall","src":"9024:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9044:2:12","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9017:6:12"},"nodeType":"YulFunctionCall","src":"9017:30:12"},"nodeType":"YulExpressionStatement","src":"9017:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9067:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9078:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9063:3:12"},"nodeType":"YulFunctionCall","src":"9063:18:12"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"9083:34:12","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9056:6:12"},"nodeType":"YulFunctionCall","src":"9056:62:12"},"nodeType":"YulExpressionStatement","src":"9056:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9138:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9149:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9134:3:12"},"nodeType":"YulFunctionCall","src":"9134:18:12"},{"hexValue":"6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"9154:16:12","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9127:6:12"},"nodeType":"YulFunctionCall","src":"9127:44:12"},"nodeType":"YulExpressionStatement","src":"9127:44:12"},{"nodeType":"YulAssignment","src":"9180:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9192:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9203:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9188:3:12"},"nodeType":"YulFunctionCall","src":"9188:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9180:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8954:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8968:4:12","type":""}],"src":"8803:410:12"},{"body":{"nodeType":"YulBlock","src":"9392:231:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9409:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9420:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9402:6:12"},"nodeType":"YulFunctionCall","src":"9402:21:12"},"nodeType":"YulExpressionStatement","src":"9402:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9454:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:12"},"nodeType":"YulFunctionCall","src":"9439:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"9459:2:12","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:12"},"nodeType":"YulFunctionCall","src":"9432:30:12"},"nodeType":"YulExpressionStatement","src":"9432:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9482:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9493:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9478:3:12"},"nodeType":"YulFunctionCall","src":"9478:18:12"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"9498:34:12","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9471:6:12"},"nodeType":"YulFunctionCall","src":"9471:62:12"},"nodeType":"YulExpressionStatement","src":"9471:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9553:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9564:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9549:3:12"},"nodeType":"YulFunctionCall","src":"9549:18:12"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"9569:11:12","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9542:6:12"},"nodeType":"YulFunctionCall","src":"9542:39:12"},"nodeType":"YulExpressionStatement","src":"9542:39:12"},{"nodeType":"YulAssignment","src":"9590:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9602:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9613:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9598:3:12"},"nodeType":"YulFunctionCall","src":"9598:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9590:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9369:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9383:4:12","type":""}],"src":"9218:405:12"},{"body":{"nodeType":"YulBlock","src":"9660:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9677:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9684:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9689:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9680:3:12"},"nodeType":"YulFunctionCall","src":"9680:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9670:6:12"},"nodeType":"YulFunctionCall","src":"9670:31:12"},"nodeType":"YulExpressionStatement","src":"9670:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9717:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9720:4:12","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9710:6:12"},"nodeType":"YulFunctionCall","src":"9710:15:12"},"nodeType":"YulExpressionStatement","src":"9710:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9741:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9744:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9734:6:12"},"nodeType":"YulFunctionCall","src":"9734:15:12"},"nodeType":"YulExpressionStatement","src":"9734:15:12"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9628:127:12"},{"body":{"nodeType":"YulBlock","src":"9792:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9809:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9816:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9821:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9812:3:12"},"nodeType":"YulFunctionCall","src":"9812:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9802:6:12"},"nodeType":"YulFunctionCall","src":"9802:31:12"},"nodeType":"YulExpressionStatement","src":"9802:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9849:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9842:6:12"},"nodeType":"YulFunctionCall","src":"9842:15:12"},"nodeType":"YulExpressionStatement","src":"9842:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9873:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9876:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9866:6:12"},"nodeType":"YulFunctionCall","src":"9866:15:12"},"nodeType":"YulExpressionStatement","src":"9866:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9760:127:12"},{"body":{"nodeType":"YulBlock","src":"9939:88:12","statements":[{"body":{"nodeType":"YulBlock","src":"9970:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9972:16:12"},"nodeType":"YulFunctionCall","src":"9972:18:12"},"nodeType":"YulExpressionStatement","src":"9972:18:12"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9955:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9966:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9962:3:12"},"nodeType":"YulFunctionCall","src":"9962:6:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9952:2:12"},"nodeType":"YulFunctionCall","src":"9952:17:12"},"nodeType":"YulIf","src":"9949:43:12"},{"nodeType":"YulAssignment","src":"10001:20:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10012:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"10019:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10008:3:12"},"nodeType":"YulFunctionCall","src":"10008:13:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10001:3:12"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9921:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9931:3:12","type":""}],"src":"9892:135:12"},{"body":{"nodeType":"YulBlock","src":"10206:230:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10223:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10234:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10216:6:12"},"nodeType":"YulFunctionCall","src":"10216:21:12"},"nodeType":"YulExpressionStatement","src":"10216:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10257:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10268:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10253:3:12"},"nodeType":"YulFunctionCall","src":"10253:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"10273:2:12","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10246:6:12"},"nodeType":"YulFunctionCall","src":"10246:30:12"},"nodeType":"YulExpressionStatement","src":"10246:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10296:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10307:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10292:3:12"},"nodeType":"YulFunctionCall","src":"10292:18:12"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"10312:34:12","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10285:6:12"},"nodeType":"YulFunctionCall","src":"10285:62:12"},"nodeType":"YulExpressionStatement","src":"10285:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10367:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10378:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10363:3:12"},"nodeType":"YulFunctionCall","src":"10363:18:12"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"10383:10:12","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10356:6:12"},"nodeType":"YulFunctionCall","src":"10356:38:12"},"nodeType":"YulExpressionStatement","src":"10356:38:12"},{"nodeType":"YulAssignment","src":"10403:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10415:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10426:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10411:3:12"},"nodeType":"YulFunctionCall","src":"10411:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10403:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10183:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10197:4:12","type":""}],"src":"10032:404:12"},{"body":{"nodeType":"YulBlock","src":"10615:227:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10632:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10643:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10625:6:12"},"nodeType":"YulFunctionCall","src":"10625:21:12"},"nodeType":"YulExpressionStatement","src":"10625:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10677:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:12"},"nodeType":"YulFunctionCall","src":"10662:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"10682:2:12","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10655:6:12"},"nodeType":"YulFunctionCall","src":"10655:30:12"},"nodeType":"YulExpressionStatement","src":"10655:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10705:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10716:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10701:3:12"},"nodeType":"YulFunctionCall","src":"10701:18:12"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10721:34:12","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10694:6:12"},"nodeType":"YulFunctionCall","src":"10694:62:12"},"nodeType":"YulExpressionStatement","src":"10694:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10776:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10787:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10772:3:12"},"nodeType":"YulFunctionCall","src":"10772:18:12"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10792:7:12","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10765:6:12"},"nodeType":"YulFunctionCall","src":"10765:35:12"},"nodeType":"YulExpressionStatement","src":"10765:35:12"},{"nodeType":"YulAssignment","src":"10809:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10821:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10832:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10817:3:12"},"nodeType":"YulFunctionCall","src":"10817:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10809:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10592:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10606:4:12","type":""}],"src":"10441:401:12"},{"body":{"nodeType":"YulBlock","src":"11021:232:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11038:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11049:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11031:6:12"},"nodeType":"YulFunctionCall","src":"11031:21:12"},"nodeType":"YulExpressionStatement","src":"11031:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11072:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11083:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11068:3:12"},"nodeType":"YulFunctionCall","src":"11068:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"11088:2:12","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11061:6:12"},"nodeType":"YulFunctionCall","src":"11061:30:12"},"nodeType":"YulExpressionStatement","src":"11061:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11111:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11122:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11107:3:12"},"nodeType":"YulFunctionCall","src":"11107:18:12"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"11127:34:12","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:12"},"nodeType":"YulFunctionCall","src":"11100:62:12"},"nodeType":"YulExpressionStatement","src":"11100:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11182:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11193:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11178:3:12"},"nodeType":"YulFunctionCall","src":"11178:18:12"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"11198:12:12","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11171:6:12"},"nodeType":"YulFunctionCall","src":"11171:40:12"},"nodeType":"YulExpressionStatement","src":"11171:40:12"},{"nodeType":"YulAssignment","src":"11220:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11232:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11243:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11228:3:12"},"nodeType":"YulFunctionCall","src":"11228:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11220:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10998:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11012:4:12","type":""}],"src":"10847:406:12"},{"body":{"nodeType":"YulBlock","src":"11306:77:12","statements":[{"nodeType":"YulAssignment","src":"11316:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11327:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"11330:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11323:3:12"},"nodeType":"YulFunctionCall","src":"11323:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11316:3:12"}]},{"body":{"nodeType":"YulBlock","src":"11355:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11357:16:12"},"nodeType":"YulFunctionCall","src":"11357:18:12"},"nodeType":"YulExpressionStatement","src":"11357:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11347:1:12"},{"name":"sum","nodeType":"YulIdentifier","src":"11350:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11344:2:12"},"nodeType":"YulFunctionCall","src":"11344:10:12"},"nodeType":"YulIf","src":"11341:36:12"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11289:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"11292:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11298:3:12","type":""}],"src":"11258:125:12"},{"body":{"nodeType":"YulBlock","src":"11617:236:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11634:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11645:2:12","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11627:6:12"},"nodeType":"YulFunctionCall","src":"11627:21:12"},"nodeType":"YulExpressionStatement","src":"11627:21:12"},{"nodeType":"YulVariableDeclaration","src":"11657:70:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11700:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11712:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11723:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11708:3:12"},"nodeType":"YulFunctionCall","src":"11708:18:12"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11671:28:12"},"nodeType":"YulFunctionCall","src":"11671:56:12"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"11661:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11747:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11758:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11743:3:12"},"nodeType":"YulFunctionCall","src":"11743:18:12"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"11767:6:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"11775:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11763:3:12"},"nodeType":"YulFunctionCall","src":"11763:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11736:6:12"},"nodeType":"YulFunctionCall","src":"11736:50:12"},"nodeType":"YulExpressionStatement","src":"11736:50:12"},{"nodeType":"YulAssignment","src":"11795:52:12","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11832:6:12"},{"name":"tail_1","nodeType":"YulIdentifier","src":"11840:6:12"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11803:28:12"},"nodeType":"YulFunctionCall","src":"11803:44:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11795:4:12"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11578:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11589:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11597:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11608:4:12","type":""}],"src":"11388:465:12"},{"body":{"nodeType":"YulBlock","src":"12032:231:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12049:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12060:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12042:6:12"},"nodeType":"YulFunctionCall","src":"12042:21:12"},"nodeType":"YulExpressionStatement","src":"12042:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12094:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:12"},"nodeType":"YulFunctionCall","src":"12079:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"12099:2:12","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12072:6:12"},"nodeType":"YulFunctionCall","src":"12072:30:12"},"nodeType":"YulExpressionStatement","src":"12072:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12122:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12133:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12118:3:12"},"nodeType":"YulFunctionCall","src":"12118:18:12"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"12138:34:12","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12111:6:12"},"nodeType":"YulFunctionCall","src":"12111:62:12"},"nodeType":"YulExpressionStatement","src":"12111:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12193:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12204:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12189:3:12"},"nodeType":"YulFunctionCall","src":"12189:18:12"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"12209:11:12","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12182:6:12"},"nodeType":"YulFunctionCall","src":"12182:39:12"},"nodeType":"YulExpressionStatement","src":"12182:39:12"},{"nodeType":"YulAssignment","src":"12230:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12242:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12253:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12238:3:12"},"nodeType":"YulFunctionCall","src":"12238:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12230:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12009:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12023:4:12","type":""}],"src":"11858:405:12"},{"body":{"nodeType":"YulBlock","src":"12397:119:12","statements":[{"nodeType":"YulAssignment","src":"12407:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12419:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12430:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12415:3:12"},"nodeType":"YulFunctionCall","src":"12415:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12407:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12449:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"12460:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12442:6:12"},"nodeType":"YulFunctionCall","src":"12442:25:12"},"nodeType":"YulExpressionStatement","src":"12442:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12487:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12498:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12483:3:12"},"nodeType":"YulFunctionCall","src":"12483:18:12"},{"name":"value1","nodeType":"YulIdentifier","src":"12503:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12476:6:12"},"nodeType":"YulFunctionCall","src":"12476:34:12"},"nodeType":"YulExpressionStatement","src":"12476:34:12"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12358:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12369:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12377:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12388:4:12","type":""}],"src":"12268:248:12"},{"body":{"nodeType":"YulBlock","src":"12852:496:12","statements":[{"nodeType":"YulVariableDeclaration","src":"12862:29:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12880:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12885:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12876:3:12"},"nodeType":"YulFunctionCall","src":"12876:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"12889:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12872:3:12"},"nodeType":"YulFunctionCall","src":"12872:19:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12866:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12907:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12922:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"12930:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12918:3:12"},"nodeType":"YulFunctionCall","src":"12918:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12900:6:12"},"nodeType":"YulFunctionCall","src":"12900:34:12"},"nodeType":"YulExpressionStatement","src":"12900:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12954:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"12965:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12950:3:12"},"nodeType":"YulFunctionCall","src":"12950:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12974:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"12982:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12970:3:12"},"nodeType":"YulFunctionCall","src":"12970:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12943:6:12"},"nodeType":"YulFunctionCall","src":"12943:43:12"},"nodeType":"YulExpressionStatement","src":"12943:43:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13006:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13017:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13002:3:12"},"nodeType":"YulFunctionCall","src":"13002:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"13022:3:12","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12995:6:12"},"nodeType":"YulFunctionCall","src":"12995:31:12"},"nodeType":"YulExpressionStatement","src":"12995:31:12"},{"nodeType":"YulVariableDeclaration","src":"13035:71:12","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13078:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13090:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13101:3:12","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13086:3:12"},"nodeType":"YulFunctionCall","src":"13086:19:12"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13049:28:12"},"nodeType":"YulFunctionCall","src":"13049:57:12"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13039:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13126:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13137:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13122:3:12"},"nodeType":"YulFunctionCall","src":"13122:18:12"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13146:6:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"13154:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13142:3:12"},"nodeType":"YulFunctionCall","src":"13142:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13115:6:12"},"nodeType":"YulFunctionCall","src":"13115:50:12"},"nodeType":"YulExpressionStatement","src":"13115:50:12"},{"nodeType":"YulVariableDeclaration","src":"13174:58:12","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13217:6:12"},{"name":"tail_1","nodeType":"YulIdentifier","src":"13225:6:12"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"13188:28:12"},"nodeType":"YulFunctionCall","src":"13188:44:12"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"13178:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13252:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"13263:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13248:3:12"},"nodeType":"YulFunctionCall","src":"13248:19:12"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13273:6:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"13281:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13269:3:12"},"nodeType":"YulFunctionCall","src":"13269:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13241:6:12"},"nodeType":"YulFunctionCall","src":"13241:51:12"},"nodeType":"YulExpressionStatement","src":"13241:51:12"},{"nodeType":"YulAssignment","src":"13301:41:12","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"13327:6:12"},{"name":"tail_2","nodeType":"YulIdentifier","src":"13335:6:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13309:17:12"},"nodeType":"YulFunctionCall","src":"13309:33:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13301:4:12"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12789:9:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12800:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12808:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12816:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12824:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12832:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12843:4:12","type":""}],"src":"12521:827:12"},{"body":{"nodeType":"YulBlock","src":"13433:169:12","statements":[{"body":{"nodeType":"YulBlock","src":"13479:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13488:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13491:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13481:6:12"},"nodeType":"YulFunctionCall","src":"13481:12:12"},"nodeType":"YulExpressionStatement","src":"13481:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13454:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"13463:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13450:3:12"},"nodeType":"YulFunctionCall","src":"13450:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"13475:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13446:3:12"},"nodeType":"YulFunctionCall","src":"13446:32:12"},"nodeType":"YulIf","src":"13443:52:12"},{"nodeType":"YulVariableDeclaration","src":"13504:29:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13523:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13517:5:12"},"nodeType":"YulFunctionCall","src":"13517:16:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13508:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13566:5:12"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"13542:23:12"},"nodeType":"YulFunctionCall","src":"13542:30:12"},"nodeType":"YulExpressionStatement","src":"13542:30:12"},{"nodeType":"YulAssignment","src":"13581:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"13591:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13581:6:12"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13399:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13410:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13422:6:12","type":""}],"src":"13353:249:12"},{"body":{"nodeType":"YulBlock","src":"13650:136:12","statements":[{"body":{"nodeType":"YulBlock","src":"13695:85:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13724:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13727:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13730:1:12","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13709:14:12"},"nodeType":"YulFunctionCall","src":"13709:23:12"},"nodeType":"YulExpressionStatement","src":"13709:23:12"},{"nodeType":"YulAssignment","src":"13745:25:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13756:3:12","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13767:1:12","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13761:5:12"},"nodeType":"YulFunctionCall","src":"13761:8:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13752:3:12"},"nodeType":"YulFunctionCall","src":"13752:18:12"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"13745:3:12"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13666:14:12"},"nodeType":"YulFunctionCall","src":"13666:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"13684:1:12","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13663:2:12"},"nodeType":"YulFunctionCall","src":"13663:23:12"},"nodeType":"YulIf","src":"13660:120:12"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"13642:3:12","type":""}],"src":"13607:179:12"},{"body":{"nodeType":"YulBlock","src":"13838:624:12","statements":[{"body":{"nodeType":"YulBlock","src":"13878:9:12","statements":[{"nodeType":"YulLeave","src":"13880:5:12"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13854:14:12"},"nodeType":"YulFunctionCall","src":"13854:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"13872:4:12","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13851:2:12"},"nodeType":"YulFunctionCall","src":"13851:26:12"},"nodeType":"YulIf","src":"13848:39:12"},{"nodeType":"YulVariableDeclaration","src":"13896:21:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13914:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13908:5:12"},"nodeType":"YulFunctionCall","src":"13908:9:12"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13900:4:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13926:16:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13940:1:12","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13936:3:12"},"nodeType":"YulFunctionCall","src":"13936:6:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13930:2:12","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13966:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"13972:1:12","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"13979:14:12"},"nodeType":"YulFunctionCall","src":"13979:16:12"},{"name":"_1","nodeType":"YulIdentifier","src":"13997:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13975:3:12"},"nodeType":"YulFunctionCall","src":"13975:25:12"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"13951:14:12"},"nodeType":"YulFunctionCall","src":"13951:50:12"},"nodeType":"YulExpressionStatement","src":"13951:50:12"},{"nodeType":"YulVariableDeclaration","src":"14010:25:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14030:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14024:5:12"},"nodeType":"YulFunctionCall","src":"14024:11:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14014:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14044:26:12","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14054:14:12"},"nodeType":"YulFunctionCall","src":"14054:16:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"14048:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14079:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"14089:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"14083:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"14165:9:12","statements":[{"nodeType":"YulLeave","src":"14167:5:12"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14125:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"14133:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14122:2:12"},"nodeType":"YulFunctionCall","src":"14122:14:12"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14145:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"14153:4:12","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14141:3:12"},"nodeType":"YulFunctionCall","src":"14141:17:12"},{"name":"_2","nodeType":"YulIdentifier","src":"14160:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14138:2:12"},"nodeType":"YulFunctionCall","src":"14138:25:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14119:2:12"},"nodeType":"YulFunctionCall","src":"14119:45:12"},"nodeType":"YulIf","src":"14116:58:12"},{"nodeType":"YulVariableDeclaration","src":"14183:28:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14198:4:12"},{"name":"offset","nodeType":"YulIdentifier","src":"14204:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14194:3:12"},"nodeType":"YulFunctionCall","src":"14194:17:12"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"14187:3:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14220:24:12","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"14240:3:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14234:5:12"},"nodeType":"YulFunctionCall","src":"14234:10:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14224:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"14271:9:12","statements":[{"nodeType":"YulLeave","src":"14273:5:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14259:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"14267:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14256:2:12"},"nodeType":"YulFunctionCall","src":"14256:14:12"},"nodeType":"YulIf","src":"14253:27:12"},{"body":{"nodeType":"YulBlock","src":"14362:9:12","statements":[{"nodeType":"YulLeave","src":"14364:5:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"14303:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"14308:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14299:3:12"},"nodeType":"YulFunctionCall","src":"14299:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"14317:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14295:3:12"},"nodeType":"YulFunctionCall","src":"14295:27:12"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14332:4:12"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14338:14:12"},"nodeType":"YulFunctionCall","src":"14338:16:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14328:3:12"},"nodeType":"YulFunctionCall","src":"14328:27:12"},{"name":"_1","nodeType":"YulIdentifier","src":"14357:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14324:3:12"},"nodeType":"YulFunctionCall","src":"14324:36:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14292:2:12"},"nodeType":"YulFunctionCall","src":"14292:69:12"},"nodeType":"YulIf","src":"14289:82:12"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14400:4:12"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14414:6:12"},{"name":"length","nodeType":"YulIdentifier","src":"14422:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14410:3:12"},"nodeType":"YulFunctionCall","src":"14410:19:12"},{"kind":"number","nodeType":"YulLiteral","src":"14431:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14406:3:12"},"nodeType":"YulFunctionCall","src":"14406:30:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"14380:19:12"},"nodeType":"YulFunctionCall","src":"14380:57:12"},"nodeType":"YulExpressionStatement","src":"14380:57:12"},{"nodeType":"YulAssignment","src":"14446:10:12","value":{"name":"msg","nodeType":"YulIdentifier","src":"14453:3:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14446:3:12"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13830:3:12","type":""}],"src":"13791:671:12"},{"body":{"nodeType":"YulBlock","src":"14641:242:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14658:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14669:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14651:6:12"},"nodeType":"YulFunctionCall","src":"14651:21:12"},"nodeType":"YulExpressionStatement","src":"14651:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14692:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14703:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14688:3:12"},"nodeType":"YulFunctionCall","src":"14688:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"14708:2:12","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14681:6:12"},"nodeType":"YulFunctionCall","src":"14681:30:12"},"nodeType":"YulExpressionStatement","src":"14681:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14731:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14742:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14727:3:12"},"nodeType":"YulFunctionCall","src":"14727:18:12"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"14747:34:12","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14720:6:12"},"nodeType":"YulFunctionCall","src":"14720:62:12"},"nodeType":"YulExpressionStatement","src":"14720:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14802:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14813:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14798:3:12"},"nodeType":"YulFunctionCall","src":"14798:18:12"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"14818:22:12","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14791:6:12"},"nodeType":"YulFunctionCall","src":"14791:50:12"},"nodeType":"YulExpressionStatement","src":"14791:50:12"},{"nodeType":"YulAssignment","src":"14850:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14862:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14873:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14858:3:12"},"nodeType":"YulFunctionCall","src":"14858:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14850:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14618:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14632:4:12","type":""}],"src":"14467:416:12"},{"body":{"nodeType":"YulBlock","src":"15062:230:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15079:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15090:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15072:6:12"},"nodeType":"YulFunctionCall","src":"15072:21:12"},"nodeType":"YulExpressionStatement","src":"15072:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15113:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15124:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15109:3:12"},"nodeType":"YulFunctionCall","src":"15109:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"15129:2:12","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15102:6:12"},"nodeType":"YulFunctionCall","src":"15102:30:12"},"nodeType":"YulExpressionStatement","src":"15102:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15152:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15163:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15148:3:12"},"nodeType":"YulFunctionCall","src":"15148:18:12"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"15168:34:12","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15141:6:12"},"nodeType":"YulFunctionCall","src":"15141:62:12"},"nodeType":"YulExpressionStatement","src":"15141:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15223:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15234:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15219:3:12"},"nodeType":"YulFunctionCall","src":"15219:18:12"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"15239:10:12","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15212:6:12"},"nodeType":"YulFunctionCall","src":"15212:38:12"},"nodeType":"YulExpressionStatement","src":"15212:38:12"},{"nodeType":"YulAssignment","src":"15259:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15271:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15282:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15267:3:12"},"nodeType":"YulFunctionCall","src":"15267:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15259:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15039:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15053:4:12","type":""}],"src":"14888:404:12"},{"body":{"nodeType":"YulBlock","src":"15528:330:12","statements":[{"nodeType":"YulVariableDeclaration","src":"15538:29:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15556:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15561:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15552:3:12"},"nodeType":"YulFunctionCall","src":"15552:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"15565:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15548:3:12"},"nodeType":"YulFunctionCall","src":"15548:19:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15542:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15583:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15598:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"15606:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15594:3:12"},"nodeType":"YulFunctionCall","src":"15594:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15576:6:12"},"nodeType":"YulFunctionCall","src":"15576:34:12"},"nodeType":"YulExpressionStatement","src":"15576:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15630:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15641:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15626:3:12"},"nodeType":"YulFunctionCall","src":"15626:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15650:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"15658:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15646:3:12"},"nodeType":"YulFunctionCall","src":"15646:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15619:6:12"},"nodeType":"YulFunctionCall","src":"15619:43:12"},"nodeType":"YulExpressionStatement","src":"15619:43:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15682:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15693:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15678:3:12"},"nodeType":"YulFunctionCall","src":"15678:18:12"},{"name":"value2","nodeType":"YulIdentifier","src":"15698:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15671:6:12"},"nodeType":"YulFunctionCall","src":"15671:34:12"},"nodeType":"YulExpressionStatement","src":"15671:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15725:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15736:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15721:3:12"},"nodeType":"YulFunctionCall","src":"15721:18:12"},{"name":"value3","nodeType":"YulIdentifier","src":"15741:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15714:6:12"},"nodeType":"YulFunctionCall","src":"15714:34:12"},"nodeType":"YulExpressionStatement","src":"15714:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15768:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15779:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15764:3:12"},"nodeType":"YulFunctionCall","src":"15764:19:12"},{"kind":"number","nodeType":"YulLiteral","src":"15785:3:12","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15757:6:12"},"nodeType":"YulFunctionCall","src":"15757:32:12"},"nodeType":"YulExpressionStatement","src":"15757:32:12"},{"nodeType":"YulAssignment","src":"15798:54:12","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15824:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15836:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15847:3:12","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15832:3:12"},"nodeType":"YulFunctionCall","src":"15832:19:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"15806:17:12"},"nodeType":"YulFunctionCall","src":"15806:46:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15798:4:12"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15465:9:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15476:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15484:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15492:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15500:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15508:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15519:4:12","type":""}],"src":"15297:561:12"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610b40565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610b83565b610225565b60405190151581526020016100a9565b6100e86100e3366004610ba7565b610275565b6040516100a99190610c06565b610108610103366004610d65565b610309565b005b61011d610118366004610e0f565b610355565b6040516100a99190610f15565b610108610138366004610f28565b61047f565b6100c561014b366004610f64565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610f97565b61048e565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025657506001600160e01b031982166303a24d0760e21b145b8061021f57506301ffc9a760e01b6001600160e01b031983161461021f565b60606002805461028490610ffc565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090610ffc565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b6103415760405162461bcd60e51b81526004016101f390611036565b61034e85858585856104d3565b5050505050565b606081518351146103ba5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103d6576103d6610c19565b6040519080825280602002602001820160405280156103ff578160200160208202803683370190505b50905060005b84518110156104775761044a85828151811061042357610423611084565b602002602001015185838151811061043d5761043d611084565b602002602001015161018c565b82828151811061045c5761045c611084565b6020908102919091010152610470816110b0565b9050610405565b509392505050565b61048a3383836106b0565b5050565b6001600160a01b0385163314806104aa57506104aa853361014b565b6104c65760405162461bcd60e51b81526004016101f390611036565b61034e8585858585610790565b81518351146105355760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b03841661055b5760405162461bcd60e51b81526004016101f3906110c9565b3360005b845181101561064257600085828151811061057c5761057c611084565b60200260200101519050600085838151811061059a5761059a611084565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105ea5760405162461bcd60e51b81526004016101f39061110e565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610627908490611158565b925050819055505050508061063b906110b0565b905061055f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161069292919061116b565b60405180910390a46106a88187878787876108ba565b505050505050565b816001600160a01b0316836001600160a01b0316036107235760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107b65760405162461bcd60e51b81526004016101f3906110c9565b3360006107c285610a1e565b905060006107cf85610a1e565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156108125760405162461bcd60e51b81526004016101f39061110e565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061084f908490611158565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46108af848a8a8a8a8a610a69565b505050505050505050565b6001600160a01b0384163b156106a85760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108fe9089908990889088908890600401611199565b6020604051808303816000875af1925050508015610939575060408051601f3d908101601f19168201909252610936918101906111f7565b60015b6109e557610945611214565b806308c379a00361097e5750610959611230565b806109645750610980565b8060405162461bcd60e51b81526004016101f39190610c06565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610a155760405162461bcd60e51b81526004016101f3906112ba565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a5857610a58611084565b602090810291909101015292915050565b6001600160a01b0384163b156106a85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610aad9089908990889088908890600401611302565b6020604051808303816000875af1925050508015610ae8575060408051601f3d908101601f19168201909252610ae5918101906111f7565b60015b610af457610945611214565b6001600160e01b0319811663f23a6e6160e01b14610a155760405162461bcd60e51b81526004016101f3906112ba565b80356001600160a01b0381168114610b3b57600080fd5b919050565b60008060408385031215610b5357600080fd5b610b5c83610b24565b946020939093013593505050565b6001600160e01b031981168114610b8057600080fd5b50565b600060208284031215610b9557600080fd5b8135610ba081610b6a565b9392505050565b600060208284031215610bb957600080fd5b5035919050565b6000815180845260005b81811015610be657602081850181015186830182015201610bca565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ba06020830184610bc0565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610c5557610c55610c19565b6040525050565b600067ffffffffffffffff821115610c7657610c76610c19565b5060051b60200190565b600082601f830112610c9157600080fd5b81356020610c9e82610c5c565b604051610cab8282610c2f565b83815260059390931b8501820192828101915086841115610ccb57600080fd5b8286015b84811015610ce65780358352918301918301610ccf565b509695505050505050565b600082601f830112610d0257600080fd5b813567ffffffffffffffff811115610d1c57610d1c610c19565b604051610d33601f8301601f191660200182610c2f565b818152846020838601011115610d4857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d7d57600080fd5b610d8686610b24565b9450610d9460208701610b24565b9350604086013567ffffffffffffffff80821115610db157600080fd5b610dbd89838a01610c80565b94506060880135915080821115610dd357600080fd5b610ddf89838a01610c80565b93506080880135915080821115610df557600080fd5b50610e0288828901610cf1565b9150509295509295909350565b60008060408385031215610e2257600080fd5b823567ffffffffffffffff80821115610e3a57600080fd5b818501915085601f830112610e4e57600080fd5b81356020610e5b82610c5c565b604051610e688282610c2f565b83815260059390931b8501820192828101915089841115610e8857600080fd5b948201945b83861015610ead57610e9e86610b24565b82529482019490820190610e8d565b96505086013592505080821115610ec357600080fd5b50610ed085828601610c80565b9150509250929050565b600081518084526020808501945080840160005b83811015610f0a57815187529582019590820190600101610eee565b509495945050505050565b602081526000610ba06020830184610eda565b60008060408385031215610f3b57600080fd5b610f4483610b24565b915060208301358015158114610f5957600080fd5b809150509250929050565b60008060408385031215610f7757600080fd5b610f8083610b24565b9150610f8e60208401610b24565b90509250929050565b600080600080600060a08688031215610faf57600080fd5b610fb886610b24565b9450610fc660208701610b24565b93506040860135925060608601359150608086013567ffffffffffffffff811115610ff057600080fd5b610e0288828901610cf1565b600181811c9082168061101057607f821691505b60208210810361103057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110c2576110c261109a565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b8082018082111561021f5761021f61109a565b60408152600061117e6040830185610eda565b82810360208401526111908185610eda565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111c590830186610eda565b82810360608401526111d78186610eda565b905082810360808401526111eb8185610bc0565b98975050505050505050565b60006020828403121561120957600080fd5b8151610ba081610b6a565b600060033d111561122d5760046000803e5060005160e01c5b90565b600060443d101561123e5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561126e57505050505090565b82850191508151818111156112865750505050505090565b843d87010160208285010111156112a05750505050505090565b6112af60208286010187610c2f565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061133c90830184610bc0565b97965050505050505056fea26469706673582212203fe510a1ba6d5084418aa198565731043522e665ed50a47cfc6a51930f49f53364736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x256 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x21F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x21F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0xFFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0xFFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x34E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4D3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x3D6 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x477 JUMPI PUSH2 0x44A DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x423 JUMPI PUSH2 0x423 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x43D JUMPI PUSH2 0x43D PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45C JUMPI PUSH2 0x45C PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x470 DUP2 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x405 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x48A CALLER DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4AA JUMPI POP PUSH2 0x4AA DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x34E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x790 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57C JUMPI PUSH2 0x57C PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI PUSH2 0x59A PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x627 SWAP1 DUP5 SWAP1 PUSH2 0x1158 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x63B SWAP1 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x55F JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x692 SWAP3 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6A8 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8BA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x7C2 DUP6 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7CF DUP6 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x84F SWAP1 DUP5 SWAP1 PUSH2 0x1158 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8AF DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA69 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x8FE SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x939 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x936 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9E5 JUMPI PUSH2 0x945 PUSH2 0x1214 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x97E JUMPI POP PUSH2 0x959 PUSH2 0x1230 JUMP JUMPDEST DUP1 PUSH2 0x964 JUMPI POP PUSH2 0x980 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12BA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA58 JUMPI PUSH2 0xA58 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAAD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAE8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAE5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAF4 JUMPI PUSH2 0x945 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12BA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5C DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA0 DUP2 PUSH2 0xB6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBCA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBC0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC55 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC76 JUMPI PUSH2 0xC76 PUSH2 0xC19 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC9E DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCAB DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xCCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCE6 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCCF JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1C PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD33 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD86 DUP7 PUSH2 0xB24 JUMP JUMPDEST SWAP5 POP PUSH2 0xD94 PUSH1 0x20 DUP8 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDBD DUP10 DUP4 DUP11 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDF DUP10 DUP4 DUP11 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE02 DUP9 DUP3 DUP10 ADD PUSH2 0xCF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE5B DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE68 DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEAD JUMPI PUSH2 0xE9E DUP7 PUSH2 0xB24 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE8D JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xEC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED0 DUP6 DUP3 DUP7 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0A JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEEE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF44 DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF80 DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8E PUSH1 0x20 DUP5 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB8 DUP7 PUSH2 0xB24 JUMP JUMPDEST SWAP5 POP PUSH2 0xFC6 PUSH1 0x20 DUP8 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE02 DUP9 DUP3 DUP10 ADD PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1010 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1030 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10C2 JUMPI PUSH2 0x10C2 PUSH2 0x109A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x21F JUMPI PUSH2 0x21F PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x117E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEDA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1190 DUP2 DUP6 PUSH2 0xEDA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11C5 SWAP1 DUP4 ADD DUP7 PUSH2 0xEDA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11D7 DUP2 DUP7 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11EB DUP2 DUP6 PUSH2 0xBC0 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBA0 DUP2 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x122D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x123E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x126E JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1286 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12A0 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12AF PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC2F JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x133C SWAP1 DUP4 ADD DUP5 PUSH2 0xBC0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xE5 LT LOG1 0xBA PUSH14 0x5084418AA198565731043522E665 0xED POP LOG4 PUSH29 0xFC6A51930F49F53364736F6C6343000812003300000000000000000000 ","sourceMap":"570:16539:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227;;;;;;:::i;:::-;;:::i;:::-;;;597:25:12;;;585:2;570:18;2185:227:1;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:12;;1177:22;1159:41;;1147:2;1132:18;1236:305:1;1019:187:12;1940:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4042:426::-;;;;;;:::i;:::-;;:::i;:::-;;2569:486;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3123:153::-;;;;;;:::i;:::-;;:::i;3343:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3465:27:1;;;3442:4;3465:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3343:166;3576:394;;;;;;:::i;:::-;;:::i;2185:227::-;2271:7;-1:-1:-1;;;;;2298:21:1;;2290:76;;;;-1:-1:-1;;;2290:76:1;;8209:2:12;2290:76:1;;;8191:21:12;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:12;;;8331:40;8388:19;;2290:76:1;;;;;;;;;-1:-1:-1;2383:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:1;;;;;;;;;;2185:227;;;;;:::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:1;;-1:-1:-1;;;1373:41:1;;:109;;-1:-1:-1;;;;;;;1430:52:1;;-1:-1:-1;;;1430:52:1;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1498:36:1;829:155:9;1940:103:1;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4042:426::-;-1:-1:-1;;;;;4267:20:1;;719:10:8;4267:20:1;;:60;;-1:-1:-1;4291:36:1;4308:4;719:10:8;3343:166:1;:::i;4291:36::-;4246:153;;;;-1:-1:-1;;;4246:153:1;;;;;;;:::i;:::-;4409:52;4432:4;4438:2;4442:3;4447:7;4456:4;4409:22;:52::i;:::-;4042:426;;;;;:::o;2569:486::-;2702:16;2757:3;:10;2738:8;:15;:29;2730:83;;;;-1:-1:-1;;;2730:83:1;;9420:2:12;2730:83:1;;;9402:21:12;9459:2;9439:18;;;9432:30;9498:34;9478:18;;;9471:62;-1:-1:-1;;;9549:18:12;;;9542:39;9598:19;;2730:83:1;9218:405:12;2730:83:1;2824:30;2871:8;:15;2857:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:30:1;;2824:63;;2903:9;2898:120;2922:8;:15;2918:1;:19;2898:120;;;2977:30;2987:8;2996:1;2987:11;;;;;;;;:::i;:::-;;;;;;;3000:3;3004:1;3000:6;;;;;;;;:::i;:::-;;;;;;;2977:9;:30::i;:::-;2958:13;2972:1;2958:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2939:3;;;:::i;:::-;;;2898:120;;;-1:-1:-1;3035:13:1;2569:486;-1:-1:-1;;;2569:486:1:o;3123:153::-;3217:52;719:10:8;3250:8:1;3260;3217:18;:52::i;:::-;3123:153;;:::o;3576:394::-;-1:-1:-1;;;;;3776:20:1;;719:10:8;3776:20:1;;:60;;-1:-1:-1;3800:36:1;3817:4;719:10:8;3343:166:1;:::i;3800:36::-;3755:153;;;;-1:-1:-1;;;3755:153:1;;;;;;;:::i;:::-;3918:45;3936:4;3942:2;3946;3950:6;3958:4;3918:17;:45::i;6211:1115::-;6431:7;:14;6417:3;:10;:28;6409:81;;;;-1:-1:-1;;;6409:81:1;;10234:2:12;6409:81:1;;;10216:21:12;10273:2;10253:18;;;10246:30;10312:34;10292:18;;;10285:62;-1:-1:-1;;;10363:18:12;;;10356:38;10411:19;;6409:81:1;10032:404:12;6409:81:1;-1:-1:-1;;;;;6508:16:1;;6500:66;;;;-1:-1:-1;;;6500:66:1;;;;;;;:::i;:::-;719:10:8;6577:16:1;6690:411;6714:3;:10;6710:1;:14;6690:411;;;6745:10;6758:3;6762:1;6758:6;;;;;;;;:::i;:::-;;;;;;;6745:19;;6778:14;6795:7;6803:1;6795:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6820:19;6842:13;;;;;;;;;;-1:-1:-1;;;;;6842:19:1;;;;;;;;;;;;6795:10;;-1:-1:-1;6883:21:1;;;;6875:76;;;;-1:-1:-1;;;6875:76:1;;;;;;;:::i;:::-;6993:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6993:19:1;;;;;;;;;;7015:20;;;6993:42;;7063:17;;;;;;;:27;;7015:20;;6993:9;7063:27;;7015:20;;7063:27;:::i;:::-;;;;;;;;6731:370;;;6726:3;;;;:::i;:::-;;;6690:411;;;;7146:2;-1:-1:-1;;;;;7116:47:1;7140:4;-1:-1:-1;;;;;7116:47:1;7130:8;-1:-1:-1;;;;;7116:47:1;;7150:3;7155:7;7116:47;;;;;;;:::i;:::-;;;;;;;;7244:75;7280:8;7290:4;7296:2;7300:3;7305:7;7314:4;7244:35;:75::i;:::-;6399:927;6211:1115;;;;;:::o;12790:293::-;12910:8;-1:-1:-1;;;;;12901:17:1;:5;-1:-1:-1;;;;;12901:17:1;;12893:71;;;;-1:-1:-1;;;12893:71:1;;12060:2:12;12893:71:1;;;12042:21:12;12099:2;12079:18;;;12072:30;12138:34;12118:18;;;12111:62;-1:-1:-1;;;12189:18:12;;;12182:39;12238:19;;12893:71:1;11858:405:12;12893:71:1;-1:-1:-1;;;;;12974:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12974:46:1;;;;;;;;;;13035:41;;1159::12;;;13035::1;;1132:18:12;13035:41:1;;;;;;;12790:293;;;:::o;4918:947::-;-1:-1:-1;;;;;5099:16:1;;5091:66;;;;-1:-1:-1;;;5091:66:1;;;;;;;:::i;:::-;719:10:8;5168:16:1;5232:21;5250:2;5232:17;:21::i;:::-;5209:44;;5263:24;5290:25;5308:6;5290:17;:25::i;:::-;5263:52;;5397:19;5419:13;;;;;;;;;;;-1:-1:-1;;;;;5419:19:1;;;;;;;;;;5456:21;;;;5448:76;;;;-1:-1:-1;;;5448:76:1;;;;;;;:::i;:::-;5558:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5558:19:1;;;;;;;;;;5580:20;;;5558:42;;5620:17;;;;;;;:27;;5580:20;;5558:9;5620:27;;5580:20;;5620:27;:::i;:::-;;;;-1:-1:-1;;5663:46:1;;;12442:25:12;;;12498:2;12483:18;;12476:34;;;-1:-1:-1;;;;;5663:46:1;;;;;;;;;;;;;;12415:18:12;5663:46:1;;;;;;;5790:68;5821:8;5831:4;5837:2;5841;5845:6;5853:4;5790:30;:68::i;:::-;5081:784;;;;4918:947;;;;;:::o;16116:792::-;-1:-1:-1;;;;;16348:13:1;;1702:19:7;:23;16344:558:1;;16383:79;;-1:-1:-1;;;16383:79:1;;-1:-1:-1;;;;;16383:43:1;;;;;:79;;16427:8;;16437:4;;16443:3;;16448:7;;16457:4;;16383:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16383:79:1;;;;;;;;-1:-1:-1;;16383:79:1;;;;;;;;;;;;:::i;:::-;;;16379:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16768:6;16761:14;;-1:-1:-1;;;16761:14:1;;;;;;;;:::i;16379:513::-;;;16815:62;;-1:-1:-1;;;16815:62:1;;14669:2:12;16815:62:1;;;14651:21:12;14708:2;14688:18;;;14681:30;14747:34;14727:18;;;14720:62;-1:-1:-1;;;14798:18:12;;;14791:50;14858:19;;16815:62:1;14467:416:12;16379:513:1;-1:-1:-1;;;;;;16541:60:1;;-1:-1:-1;;;16541:60:1;16537:157;;16625:50;;-1:-1:-1;;;16625:50:1;;;;;;;:::i;16537:157::-;16463:245;16116:792;;;;;;:::o;16914:193::-;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:1;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:1:o;15385:725::-;-1:-1:-1;;;;;15592:13:1;;1702:19:7;:23;15588:516:1;;15627:72;;-1:-1:-1;;;15627:72:1;;-1:-1:-1;;;;;15627:38:1;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:1;;;;;;;;-1:-1:-1;;15627:72:1;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;-1:-1:-1;;;;;;15748:55:1;;-1:-1:-1;;;15748:55:1;15744:152;;15827:50;;-1:-1:-1;;;15827:50:1;;;;;;;:::i;14:173:12:-;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:12:o;633:131::-;-1:-1:-1;;;;;;707:32:12;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:12:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:12;;1211:180;-1:-1:-1;1211:180:12:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:12;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:12:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:12;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:12;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:12;2623:724;-1:-1:-1;;;;;;2623:724:12:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:12;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:12:o;3912:943::-;4066:6;4074;4082;4090;4098;4151:3;4139:9;4130:7;4126:23;4122:33;4119:53;;;4168:1;4165;4158:12;4119:53;4191:29;4210:9;4191:29;:::i;:::-;4181:39;;4239:38;4273:2;4262:9;4258:18;4239:38;:::i;:::-;4229:48;;4328:2;4317:9;4313:18;4300:32;4351:18;4392:2;4384:6;4381:14;4378:34;;;4408:1;4405;4398:12;4378:34;4431:61;4484:7;4475:6;4464:9;4460:22;4431:61;:::i;:::-;4421:71;;4545:2;4534:9;4530:18;4517:32;4501:48;;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;4613:63;4668:7;4657:8;4646:9;4642:24;4613:63;:::i;:::-;4603:73;;4729:3;4718:9;4714:19;4701:33;4685:49;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4798:51;4841:7;4830:8;4819:9;4815:24;4798:51;:::i;:::-;4788:61;;;3912:943;;;;;;;;:::o;4860:1208::-;4978:6;4986;5039:2;5027:9;5018:7;5014:23;5010:32;5007:52;;;5055:1;5052;5045:12;5007:52;5095:9;5082:23;5124:18;5165:2;5157:6;5154:14;5151:34;;;5181:1;5178;5171:12;5151:34;5219:6;5208:9;5204:22;5194:32;;5264:7;5257:4;5253:2;5249:13;5245:27;5235:55;;5286:1;5283;5276:12;5235:55;5322:2;5309:16;5344:4;5367:43;5407:2;5367:43;:::i;:::-;5439:2;5433:9;5451:31;5479:2;5471:6;5451:31;:::i;:::-;5517:18;;;5605:1;5601:10;;;;5593:19;;5589:28;;;5551:15;;;;-1:-1:-1;5629:19:12;;;5626:39;;;5661:1;5658;5651:12;5626:39;5685:11;;;;5705:148;5721:6;5716:3;5713:15;5705:148;;;5787:23;5806:3;5787:23;:::i;:::-;5775:36;;5738:12;;;;5831;;;;5705:148;;;5872:6;-1:-1:-1;;5916:18:12;;5903:32;;-1:-1:-1;;5947:16:12;;;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;4860:1208;;;;;:::o;6073:435::-;6126:3;6164:5;6158:12;6191:6;6186:3;6179:19;6217:4;6246:2;6241:3;6237:12;6230:19;;6283:2;6276:5;6272:14;6304:1;6314:169;6328:6;6325:1;6322:13;6314:169;;;6389:13;;6377:26;;6423:12;;;;6458:15;;;;6350:1;6343:9;6314:169;;;-1:-1:-1;6499:3:12;;6073:435;-1:-1:-1;;;;;6073:435:12:o;6513:261::-;6692:2;6681:9;6674:21;6655:4;6712:56;6764:2;6753:9;6749:18;6741:6;6712:56;:::i;6779:347::-;6844:6;6852;6905:2;6893:9;6884:7;6880:23;6876:32;6873:52;;;6921:1;6918;6911:12;6873:52;6944:29;6963:9;6944:29;:::i;:::-;6934:39;;7023:2;7012:9;7008:18;6995:32;7070:5;7063:13;7056:21;7049:5;7046:32;7036:60;;7092:1;7089;7082:12;7036:60;7115:5;7105:15;;;6779:347;;;;;:::o;7131:260::-;7199:6;7207;7260:2;7248:9;7239:7;7235:23;7231:32;7228:52;;;7276:1;7273;7266:12;7228:52;7299:29;7318:9;7299:29;:::i;:::-;7289:39;;7347:38;7381:2;7370:9;7366:18;7347:38;:::i;:::-;7337:48;;7131:260;;;;;:::o;7396:606::-;7500:6;7508;7516;7524;7532;7585:3;7573:9;7564:7;7560:23;7556:33;7553:53;;;7602:1;7599;7592:12;7553:53;7625:29;7644:9;7625:29;:::i;:::-;7615:39;;7673:38;7707:2;7696:9;7692:18;7673:38;:::i;:::-;7663:48;;7758:2;7747:9;7743:18;7730:32;7720:42;;7809:2;7798:9;7794:18;7781:32;7771:42;;7864:3;7853:9;7849:19;7836:33;7892:18;7884:6;7881:30;7878:50;;;7924:1;7921;7914:12;7878:50;7947:49;7988:7;7979:6;7968:9;7964:22;7947:49;:::i;8418:380::-;8497:1;8493:12;;;;8540;;;8561:61;;8615:4;8607:6;8603:17;8593:27;;8561:61;8668:2;8660:6;8657:14;8637:18;8634:38;8631:161;;8714:10;8709:3;8705:20;8702:1;8695:31;8749:4;8746:1;8739:15;8777:4;8774:1;8767:15;8631:161;;8418:380;;;:::o;8803:410::-;9005:2;8987:21;;;9044:2;9024:18;;;9017:30;9083:34;9078:2;9063:18;;9056:62;-1:-1:-1;;;9149:2:12;9134:18;;9127:44;9203:3;9188:19;;8803:410::o;9628:127::-;9689:10;9684:3;9680:20;9677:1;9670:31;9720:4;9717:1;9710:15;9744:4;9741:1;9734:15;9760:127;9821:10;9816:3;9812:20;9809:1;9802:31;9852:4;9849:1;9842:15;9876:4;9873:1;9866:15;9892:135;9931:3;9952:17;;;9949:43;;9972:18;;:::i;:::-;-1:-1:-1;10019:1:12;10008:13;;9892:135::o;10441:401::-;10643:2;10625:21;;;10682:2;10662:18;;;10655:30;10721:34;10716:2;10701:18;;10694:62;-1:-1:-1;;;10787:2:12;10772:18;;10765:35;10832:3;10817:19;;10441:401::o;10847:406::-;11049:2;11031:21;;;11088:2;11068:18;;;11061:30;11127:34;11122:2;11107:18;;11100:62;-1:-1:-1;;;11193:2:12;11178:18;;11171:40;11243:3;11228:19;;10847:406::o;11258:125::-;11323:9;;;11344:10;;;11341:36;;;11357:18;;:::i;11388:465::-;11645:2;11634:9;11627:21;11608:4;11671:56;11723:2;11712:9;11708:18;11700:6;11671:56;:::i;:::-;11775:9;11767:6;11763:22;11758:2;11747:9;11743:18;11736:50;11803:44;11840:6;11832;11803:44;:::i;:::-;11795:52;11388:465;-1:-1:-1;;;;;11388:465:12:o;12521:827::-;-1:-1:-1;;;;;12918:15:12;;;12900:34;;12970:15;;12965:2;12950:18;;12943:43;12880:3;13017:2;13002:18;;12995:31;;;12843:4;;13049:57;;13086:19;;13078:6;13049:57;:::i;:::-;13154:9;13146:6;13142:22;13137:2;13126:9;13122:18;13115:50;13188:44;13225:6;13217;13188:44;:::i;:::-;13174:58;;13281:9;13273:6;13269:22;13263:3;13252:9;13248:19;13241:51;13309:33;13335:6;13327;13309:33;:::i;:::-;13301:41;12521:827;-1:-1:-1;;;;;;;;12521:827:12:o;13353:249::-;13422:6;13475:2;13463:9;13454:7;13450:23;13446:32;13443:52;;;13491:1;13488;13481:12;13443:52;13523:9;13517:16;13542:30;13566:5;13542:30;:::i;13607:179::-;13642:3;13684:1;13666:16;13663:23;13660:120;;;13730:1;13727;13724;13709:23;-1:-1:-1;13767:1:12;13761:8;13756:3;13752:18;13660:120;13607:179;:::o;13791:671::-;13830:3;13872:4;13854:16;13851:26;13848:39;;;13791:671;:::o;13848:39::-;13914:2;13908:9;-1:-1:-1;;13979:16:12;13975:25;;13972:1;13908:9;13951:50;14030:4;14024:11;14054:16;14089:18;14160:2;14153:4;14145:6;14141:17;14138:25;14133:2;14125:6;14122:14;14119:45;14116:58;;;14167:5;;;;;13791:671;:::o;14116:58::-;14204:6;14198:4;14194:17;14183:28;;14240:3;14234:10;14267:2;14259:6;14256:14;14253:27;;;14273:5;;;;;;13791:671;:::o;14253:27::-;14357:2;14338:16;14332:4;14328:27;14324:36;14317:4;14308:6;14303:3;14299:16;14295:27;14292:69;14289:82;;;14364:5;;;;;;13791:671;:::o;14289:82::-;14380:57;14431:4;14422:6;14414;14410:19;14406:30;14400:4;14380:57;:::i;:::-;-1:-1:-1;14453:3:12;;13791:671;-1:-1:-1;;;;;13791:671:12:o;14888:404::-;15090:2;15072:21;;;15129:2;15109:18;;;15102:30;15168:34;15163:2;15148:18;;15141:62;-1:-1:-1;;;15234:2:12;15219:18;;15212:38;15282:3;15267:19;;14888:404::o;15297:561::-;-1:-1:-1;;;;;15594:15:12;;;15576:34;;15646:15;;15641:2;15626:18;;15619:43;15693:2;15678:18;;15671:34;;;15736:2;15721:18;;15714:34;;;15556:3;15779;15764:19;;15757:32;;;15519:4;;15806:46;;15832:19;;15824:6;15806:46;:::i;:::-;15798:54;15297:561;-1:-1:-1;;;;;;;15297:561:12:o"},"gasEstimates":{"creation":{"codeDepositCost":"997800","executionCost":"infinite","totalCost":"infinite"},"external":{"balanceOf(address,uint256)":"2677","balanceOfBatch(address[],uint256[])":"infinite","isApprovedForAll(address,address)":"infinite","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26705","supportsInterface(bytes4)":"555","uri(uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_asSingletonArray(uint256)":"infinite","_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_burn(address,uint256,uint256)":"infinite","_burnBatch(address,uint256[] memory,uint256[] memory)":"infinite","_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)":"infinite","_mint(address,uint256,uint256,bytes memory)":"infinite","_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_safeTransferFrom(address,address,uint256,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_setURI(string memory)":"infinite"}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    ) public view virtual override returns (uint256[] memory) {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":144,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":146,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"_Available since v3.1._","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ERC1155Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    ) public view virtual override returns (uint256[] memory) {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\\n * own tokens and those that they have been approved to use.\\n *\\n * _Available since v3.1._\\n */\\nabstract contract ERC1155Burnable is ERC1155 {\\n    function burn(address account, uint256 id, uint256 value) public virtual {\\n        require(\\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n\\n        _burn(account, id, value);\\n    }\\n\\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\\n        require(\\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n\\n        _burnBatch(account, ids, values);\\n    }\\n}\\n\",\"keccak256\":\"0x45381337dbccfb58e9443257ba1850070be892ecacd4b0da7db4c4cfa7df0b09\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":144,"contract":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":146,"contract":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"ERC1155Supply":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"exists(uint256)":{"details":"Indicates whether any token exist with a given id, or not."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"totalSupply(uint256)":{"details":"Total amount of tokens in with a given id."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","exists(uint256)":"4f558e79","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","totalSupply(uint256)":"bd85b039","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    ) public view virtual override returns (uint256[] memory) {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155.sol\\\";\\n\\n/**\\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\\n *\\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\\n * clearly identified. Note: While a totalSupply of 1 might mean the\\n * corresponding is an NFT, there is no guarantees that no other token with the\\n * same id are not going to be minted.\\n */\\nabstract contract ERC1155Supply is ERC1155 {\\n    mapping(uint256 => uint256) private _totalSupply;\\n\\n    /**\\n     * @dev Total amount of tokens in with a given id.\\n     */\\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\\n        return _totalSupply[id];\\n    }\\n\\n    /**\\n     * @dev Indicates whether any token exist with a given id, or not.\\n     */\\n    function exists(uint256 id) public view virtual returns (bool) {\\n        return ERC1155Supply.totalSupply(id) > 0;\\n    }\\n\\n    /**\\n     * @dev See {ERC1155-_beforeTokenTransfer}.\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        if (from == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                _totalSupply[ids[i]] += amounts[i];\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                uint256 id = ids[i];\\n                uint256 amount = amounts[i];\\n                uint256 supply = _totalSupply[id];\\n                require(supply >= amount, \\\"ERC1155: burn amount exceeds totalSupply\\\");\\n                unchecked {\\n                    _totalSupply[id] = supply - amount;\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":144,"contract":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":146,"contract":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"},{"astId":1577,"contract":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply","label":"_totalSupply","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"uri(uint256)":{"details":"Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220543d78b3301f2fe1a187a88c453f887d84c9f88db62763b1c81db9e858f912a864736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD RETURNDATASIZE PUSH25 0xB3301F2FE1A187A88C453F887D84C9F88DB62763B1C81DB9E8 PC 0xF9 SLT 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9169:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220543d78b3301f2fe1a187a88c453f887d84c9f88db62763b1c81db9e858f912a864736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD RETURNDATASIZE PUSH25 0xB3301F2FE1A187A88C453F887D84C9F88DB62763B1C81DB9E8 PC 0xF9 SLT 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9169:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Items.sol":{"Items":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"EMAIL","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MEMO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_count","type":"uint256"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"mintTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"transferTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"exists(uint256)":{"details":"Indicates whether any token exist with a given id, or not."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"totalSupply(uint256)":{"details":"Total amount of tokens in with a given id."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_157":{"entryPoint":null,"id":157,"parameterSlots":1,"returnSlots":0},"@_2188":{"entryPoint":null,"id":2188,"parameterSlots":0,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1178":{"entryPoint":null,"id":1178,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1334":{"entryPoint":596,"id":1334,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1159":{"entryPoint":null,"id":1159,"parameterSlots":6,"returnSlots":0},"@_beforeTokenTransfer_1723":{"entryPoint":1169,"id":1723,"parameterSlots":6,"returnSlots":0},"@_beforeTokenTransfer_2372":{"entryPoint":674,"id":2372,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1241":{"entryPoint":709,"id":1241,"parameterSlots":6,"returnSlots":0},"@_mint_769":{"entryPoint":289,"id":769,"parameterSlots":4,"returnSlots":0},"@_msgSender_2081":{"entryPoint":null,"id":2081,"parameterSlots":0,"returnSlots":1},"@_setURI_668":{"entryPoint":189,"id":668,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":207,"id":111,"parameterSlots":1,"returnSlots":0},"@isContract_1757":{"entryPoint":1599,"id":1757,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":2194,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":2051,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2123,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2464,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2001,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1696,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1775,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1636,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2274,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":2485,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1979,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2029,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1614,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":2245,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":2321,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7785:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:12"},"nodeType":"YulFunctionCall","src":"66:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:12"},"nodeType":"YulFunctionCall","src":"56:31:12"},"nodeType":"YulExpressionStatement","src":"56:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:12"},"nodeType":"YulFunctionCall","src":"96:15:12"},"nodeType":"YulExpressionStatement","src":"96:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:12"},"nodeType":"YulFunctionCall","src":"120:15:12"},"nodeType":"YulExpressionStatement","src":"120:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:12"},{"body":{"nodeType":"YulBlock","src":"201:325:12","statements":[{"nodeType":"YulAssignment","src":"211:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:12"},"nodeType":"YulFunctionCall","src":"221:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:12"},"nodeType":"YulFunctionCall","src":"268:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:12","statements":[{"nodeType":"YulAssignment","src":"321:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:12"},"nodeType":"YulFunctionCall","src":"331:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:12"},"nodeType":"YulFunctionCall","src":"292:26:12"},"nodeType":"YulIf","src":"289:61:12"},{"body":{"nodeType":"YulBlock","src":"409:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:12"},"nodeType":"YulFunctionCall","src":"433:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:12"},"nodeType":"YulFunctionCall","src":"423:31:12"},"nodeType":"YulExpressionStatement","src":"423:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:12"},"nodeType":"YulFunctionCall","src":"467:15:12"},"nodeType":"YulExpressionStatement","src":"467:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:12"},"nodeType":"YulFunctionCall","src":"495:15:12"},"nodeType":"YulExpressionStatement","src":"495:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:12"},"nodeType":"YulFunctionCall","src":"385:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:12"},"nodeType":"YulFunctionCall","src":"362:38:12"},"nodeType":"YulIf","src":"359:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:12","type":""}],"src":"146:380:12"},{"body":{"nodeType":"YulBlock","src":"587:65:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:12","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:12"},"nodeType":"YulFunctionCall","src":"597:14:12"},"nodeType":"YulExpressionStatement","src":"597:14:12"},{"nodeType":"YulAssignment","src":"620:26:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:12","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:12"},"nodeType":"YulFunctionCall","src":"628:18:12"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:12"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:12","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:12","type":""}],"src":"531:121:12"},{"body":{"nodeType":"YulBlock","src":"738:464:12","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:12","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:12","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:12","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:12","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:12"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:12"},"nodeType":"YulFunctionCall","src":"809:17:12"},"nodeType":"YulExpressionStatement","src":"809:17:12"},{"nodeType":"YulVariableDeclaration","src":"839:31:12","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:12","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:12"},"nodeType":"YulFunctionCall","src":"851:19:12"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:12","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:12"},"nodeType":"YulFunctionCall","src":"919:19:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:12"},"nodeType":"YulFunctionCall","src":"912:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:12"},"nodeType":"YulFunctionCall","src":"902:38:12"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:12","statements":[{"nodeType":"YulAssignment","src":"979:19:12","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:12"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:12"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:12","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:12"},"nodeType":"YulFunctionCall","src":"956:20:12"},"nodeType":"YulIf","src":"953:47:12"},{"nodeType":"YulVariableDeclaration","src":"1013:41:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:12","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:12"},"nodeType":"YulFunctionCall","src":"1040:12:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:12"},"nodeType":"YulFunctionCall","src":"1033:20:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:12"},"nodeType":"YulFunctionCall","src":"1023:31:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:12","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:12"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:12","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:12"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:12"},"nodeType":"YulFunctionCall","src":"1167:17:12"},"nodeType":"YulExpressionStatement","src":"1167:17:12"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:12"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:12"},"nodeType":"YulFunctionCall","src":"1112:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:12","statements":[{"nodeType":"YulAssignment","src":"1128:22:12","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:12"},"nodeType":"YulFunctionCall","src":"1137:13:12"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:12"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:12","statements":[]},"src":"1104:82:12"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:12","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:12"},"nodeType":"YulFunctionCall","src":"751:11:12"},"nodeType":"YulIf","src":"748:448:12"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:12","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:12","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:12","type":""}],"src":"657:545:12"},{"body":{"nodeType":"YulBlock","src":"1292:81:12","statements":[{"nodeType":"YulAssignment","src":"1302:65:12","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:12"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:12","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:12"},"nodeType":"YulFunctionCall","src":"1331:11:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:12"},"nodeType":"YulFunctionCall","src":"1344:6:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:12"},"nodeType":"YulFunctionCall","src":"1327:24:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:12"},"nodeType":"YulFunctionCall","src":"1323:29:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:12"},"nodeType":"YulFunctionCall","src":"1313:40:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:12","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:12"},"nodeType":"YulFunctionCall","src":"1355:11:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:12"},"nodeType":"YulFunctionCall","src":"1310:57:12"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:12"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:12","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:12","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:12","type":""}],"src":"1207:166:12"},{"body":{"nodeType":"YulBlock","src":"1474:1256:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:12","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:12"},"nodeType":"YulFunctionCall","src":"1498:10:12"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:12"},"nodeType":"YulFunctionCall","src":"1553:18:12"},"nodeType":"YulExpressionStatement","src":"1553:18:12"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:12"},"nodeType":"YulFunctionCall","src":"1535:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:12"},"nodeType":"YulFunctionCall","src":"1531:18:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:12"},"nodeType":"YulFunctionCall","src":"1520:30:12"},"nodeType":"YulIf","src":"1517:56:12"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:12"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:12"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:12"},"nodeType":"YulFunctionCall","src":"1658:11:12"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:12"},"nodeType":"YulFunctionCall","src":"1632:38:12"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:12"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:12"},"nodeType":"YulFunctionCall","src":"1582:97:12"},"nodeType":"YulExpressionStatement","src":"1582:97:12"},{"nodeType":"YulVariableDeclaration","src":"1688:18:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:12","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:12","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:12","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:12","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:12"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:12"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:12","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:12"},"nodeType":"YulFunctionCall","src":"1858:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:12"},"nodeType":"YulFunctionCall","src":"1846:20:12"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:12","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:12"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:12"},"nodeType":"YulFunctionCall","src":"1893:35:12"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:12","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:12"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:12"},"nodeType":"YulFunctionCall","src":"2067:19:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:12"},"nodeType":"YulFunctionCall","src":"2061:26:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:12"},"nodeType":"YulFunctionCall","src":"2046:42:12"},"nodeType":"YulExpressionStatement","src":"2046:42:12"},{"nodeType":"YulAssignment","src":"2105:24:12","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:12"},"nodeType":"YulFunctionCall","src":"2115:14:12"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:12"}]},{"nodeType":"YulAssignment","src":"2146:40:12","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:12"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:12"},"nodeType":"YulFunctionCall","src":"2159:27:12"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:12"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:12"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:12"},"nodeType":"YulFunctionCall","src":"1972:14:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:12","statements":[{"nodeType":"YulAssignment","src":"1989:24:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:12"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:12"},"nodeType":"YulFunctionCall","src":"1994:19:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:12","statements":[]},"src":"1964:236:12"},{"body":{"nodeType":"YulBlock","src":"2248:166:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:12","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:12"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:12"},"nodeType":"YulFunctionCall","src":"2289:19:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:12"},"nodeType":"YulFunctionCall","src":"2283:26:12"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:12","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:12"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:12","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:12"},"nodeType":"YulFunctionCall","src":"2368:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:12","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:12"},"nodeType":"YulFunctionCall","src":"2364:24:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:12"},"nodeType":"YulFunctionCall","src":"2390:6:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:12"},"nodeType":"YulFunctionCall","src":"2360:37:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:12"},"nodeType":"YulFunctionCall","src":"2356:42:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:12"},"nodeType":"YulFunctionCall","src":"2341:58:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:12"},"nodeType":"YulFunctionCall","src":"2326:74:12"},"nodeType":"YulExpressionStatement","src":"2326:74:12"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:12"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:12"},"nodeType":"YulFunctionCall","src":"2216:19:12"},"nodeType":"YulIf","src":"2213:201:12"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:12","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:12"},"nodeType":"YulFunctionCall","src":"2444:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:12"},"nodeType":"YulFunctionCall","src":"2440:22:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:12"},"nodeType":"YulFunctionCall","src":"2427:36:12"},"nodeType":"YulExpressionStatement","src":"2427:36:12"}]},"nodeType":"YulCase","src":"1810:663:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:12","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:12","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:12","statements":[{"nodeType":"YulAssignment","src":"2571:35:12","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:12"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:12"},"nodeType":"YulFunctionCall","src":"2586:19:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:12"},"nodeType":"YulFunctionCall","src":"2580:26:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:12"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:12"},"nodeType":"YulIf","src":"2531:89:12"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:12"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:12"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:12"},"nodeType":"YulFunctionCall","src":"2646:67:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:12"},"nodeType":"YulFunctionCall","src":"2633:81:12"},"nodeType":"YulExpressionStatement","src":"2633:81:12"}]},"nodeType":"YulCase","src":"2482:242:12","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:12","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:12"},"nodeType":"YulFunctionCall","src":"1787:14:12"},"nodeType":"YulSwitch","src":"1780:944:12"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:12","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:12","type":""}],"src":"1378:1352:12"},{"body":{"nodeType":"YulBlock","src":"2909:223:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2926:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2937:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2919:6:12"},"nodeType":"YulFunctionCall","src":"2919:21:12"},"nodeType":"YulExpressionStatement","src":"2919:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2960:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2971:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2956:3:12"},"nodeType":"YulFunctionCall","src":"2956:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"2976:2:12","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2949:6:12"},"nodeType":"YulFunctionCall","src":"2949:30:12"},"nodeType":"YulExpressionStatement","src":"2949:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2999:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3010:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2995:3:12"},"nodeType":"YulFunctionCall","src":"2995:18:12"},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"3015:34:12","type":"","value":"ERC1155: mint to the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2988:6:12"},"nodeType":"YulFunctionCall","src":"2988:62:12"},"nodeType":"YulExpressionStatement","src":"2988:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3070:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3081:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3066:3:12"},"nodeType":"YulFunctionCall","src":"3066:18:12"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"3086:3:12","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3059:6:12"},"nodeType":"YulFunctionCall","src":"3059:31:12"},"nodeType":"YulExpressionStatement","src":"3059:31:12"},{"nodeType":"YulAssignment","src":"3099:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3111:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3122:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3107:3:12"},"nodeType":"YulFunctionCall","src":"3107:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3099:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2886:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2900:4:12","type":""}],"src":"2735:397:12"},{"body":{"nodeType":"YulBlock","src":"3169:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3186:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3193:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3198:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3189:3:12"},"nodeType":"YulFunctionCall","src":"3189:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3179:6:12"},"nodeType":"YulFunctionCall","src":"3179:31:12"},"nodeType":"YulExpressionStatement","src":"3179:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3226:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3229:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3219:6:12"},"nodeType":"YulFunctionCall","src":"3219:15:12"},"nodeType":"YulExpressionStatement","src":"3219:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3250:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3253:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3243:6:12"},"nodeType":"YulFunctionCall","src":"3243:15:12"},"nodeType":"YulExpressionStatement","src":"3243:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3137:127:12"},{"body":{"nodeType":"YulBlock","src":"3317:77:12","statements":[{"nodeType":"YulAssignment","src":"3327:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3338:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"3341:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3334:3:12"},"nodeType":"YulFunctionCall","src":"3334:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3327:3:12"}]},{"body":{"nodeType":"YulBlock","src":"3366:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3368:16:12"},"nodeType":"YulFunctionCall","src":"3368:18:12"},"nodeType":"YulExpressionStatement","src":"3368:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3358:1:12"},{"name":"sum","nodeType":"YulIdentifier","src":"3361:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3355:2:12"},"nodeType":"YulFunctionCall","src":"3355:10:12"},"nodeType":"YulIf","src":"3352:36:12"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3300:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"3303:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3309:3:12","type":""}],"src":"3269:125:12"},{"body":{"nodeType":"YulBlock","src":"3528:119:12","statements":[{"nodeType":"YulAssignment","src":"3538:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3550:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3561:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3546:3:12"},"nodeType":"YulFunctionCall","src":"3546:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3538:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3580:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"3591:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:12"},"nodeType":"YulFunctionCall","src":"3573:25:12"},"nodeType":"YulExpressionStatement","src":"3573:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3618:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"3629:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:12"},"nodeType":"YulFunctionCall","src":"3614:18:12"},{"name":"value1","nodeType":"YulIdentifier","src":"3634:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:12"},"nodeType":"YulFunctionCall","src":"3607:34:12"},"nodeType":"YulExpressionStatement","src":"3607:34:12"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3489:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3500:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3508:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3519:4:12","type":""}],"src":"3399:248:12"},{"body":{"nodeType":"YulBlock","src":"3684:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3701:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3708:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3713:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3704:3:12"},"nodeType":"YulFunctionCall","src":"3704:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3694:6:12"},"nodeType":"YulFunctionCall","src":"3694:31:12"},"nodeType":"YulExpressionStatement","src":"3694:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3741:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3744:4:12","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3734:6:12"},"nodeType":"YulFunctionCall","src":"3734:15:12"},"nodeType":"YulExpressionStatement","src":"3734:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3765:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3768:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3758:6:12"},"nodeType":"YulFunctionCall","src":"3758:15:12"},"nodeType":"YulExpressionStatement","src":"3758:15:12"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"3652:127:12"},{"body":{"nodeType":"YulBlock","src":"3833:373:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3843:26:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3863:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3857:5:12"},"nodeType":"YulFunctionCall","src":"3857:12:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3847:6:12","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3885:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"3890:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3878:6:12"},"nodeType":"YulFunctionCall","src":"3878:19:12"},"nodeType":"YulExpressionStatement","src":"3878:19:12"},{"nodeType":"YulVariableDeclaration","src":"3906:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3915:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3910:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3977:110:12","statements":[{"nodeType":"YulVariableDeclaration","src":"3991:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4001:4:12","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3995:2:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4033:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"4038:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4029:3:12"},"nodeType":"YulFunctionCall","src":"4029:11:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4042:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:12"},"nodeType":"YulFunctionCall","src":"4025:20:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4061:5:12"},{"name":"i","nodeType":"YulIdentifier","src":"4068:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4057:3:12"},"nodeType":"YulFunctionCall","src":"4057:13:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4072:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4053:3:12"},"nodeType":"YulFunctionCall","src":"4053:22:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4047:5:12"},"nodeType":"YulFunctionCall","src":"4047:29:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4018:6:12"},"nodeType":"YulFunctionCall","src":"4018:59:12"},"nodeType":"YulExpressionStatement","src":"4018:59:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3936:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"3939:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3933:2:12"},"nodeType":"YulFunctionCall","src":"3933:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3947:21:12","statements":[{"nodeType":"YulAssignment","src":"3949:17:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3958:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"3961:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3954:3:12"},"nodeType":"YulFunctionCall","src":"3954:12:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3949:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"3929:3:12","statements":[]},"src":"3925:162:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4111:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4116:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4107:3:12"},"nodeType":"YulFunctionCall","src":"4107:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"4125:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4103:3:12"},"nodeType":"YulFunctionCall","src":"4103:27:12"},{"kind":"number","nodeType":"YulLiteral","src":"4132:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4096:6:12"},"nodeType":"YulFunctionCall","src":"4096:38:12"},"nodeType":"YulExpressionStatement","src":"4096:38:12"},{"nodeType":"YulAssignment","src":"4143:57:12","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4158:3:12"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4171:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4179:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4167:3:12"},"nodeType":"YulFunctionCall","src":"4167:15:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4188:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4184:3:12"},"nodeType":"YulFunctionCall","src":"4184:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4163:3:12"},"nodeType":"YulFunctionCall","src":"4163:29:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:12"},"nodeType":"YulFunctionCall","src":"4154:39:12"},{"kind":"number","nodeType":"YulLiteral","src":"4195:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4150:3:12"},"nodeType":"YulFunctionCall","src":"4150:50:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4143:3:12"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3810:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3817:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3825:3:12","type":""}],"src":"3784:422:12"},{"body":{"nodeType":"YulBlock","src":"4442:329:12","statements":[{"nodeType":"YulVariableDeclaration","src":"4452:29:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4470:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4475:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4466:3:12"},"nodeType":"YulFunctionCall","src":"4466:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"4479:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:12"},"nodeType":"YulFunctionCall","src":"4462:19:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4456:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4497:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4512:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4520:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4508:3:12"},"nodeType":"YulFunctionCall","src":"4508:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4490:6:12"},"nodeType":"YulFunctionCall","src":"4490:34:12"},"nodeType":"YulExpressionStatement","src":"4490:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4544:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4555:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4540:3:12"},"nodeType":"YulFunctionCall","src":"4540:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4564:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4572:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4560:3:12"},"nodeType":"YulFunctionCall","src":"4560:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4533:6:12"},"nodeType":"YulFunctionCall","src":"4533:43:12"},"nodeType":"YulExpressionStatement","src":"4533:43:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4596:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4607:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4592:3:12"},"nodeType":"YulFunctionCall","src":"4592:18:12"},{"name":"value2","nodeType":"YulIdentifier","src":"4612:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4585:6:12"},"nodeType":"YulFunctionCall","src":"4585:34:12"},"nodeType":"YulExpressionStatement","src":"4585:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4639:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4650:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4635:3:12"},"nodeType":"YulFunctionCall","src":"4635:18:12"},{"name":"value3","nodeType":"YulIdentifier","src":"4655:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4628:6:12"},"nodeType":"YulFunctionCall","src":"4628:34:12"},"nodeType":"YulExpressionStatement","src":"4628:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4682:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4693:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4678:3:12"},"nodeType":"YulFunctionCall","src":"4678:19:12"},{"kind":"number","nodeType":"YulLiteral","src":"4699:3:12","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4671:6:12"},"nodeType":"YulFunctionCall","src":"4671:32:12"},"nodeType":"YulExpressionStatement","src":"4671:32:12"},{"nodeType":"YulAssignment","src":"4712:53:12","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4737:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4760:3:12","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:12"},"nodeType":"YulFunctionCall","src":"4745:19:12"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"4720:16:12"},"nodeType":"YulFunctionCall","src":"4720:45:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4712:4:12"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4379:9:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4390:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4398:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4406:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4414:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4422:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4433:4:12","type":""}],"src":"4211:560:12"},{"body":{"nodeType":"YulBlock","src":"4856:210:12","statements":[{"body":{"nodeType":"YulBlock","src":"4902:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4911:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4914:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4904:6:12"},"nodeType":"YulFunctionCall","src":"4904:12:12"},"nodeType":"YulExpressionStatement","src":"4904:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4877:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4886:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4873:3:12"},"nodeType":"YulFunctionCall","src":"4873:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4898:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4869:3:12"},"nodeType":"YulFunctionCall","src":"4869:32:12"},"nodeType":"YulIf","src":"4866:52:12"},{"nodeType":"YulVariableDeclaration","src":"4927:29:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4946:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4940:5:12"},"nodeType":"YulFunctionCall","src":"4940:16:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4931:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5020:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5029:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5032:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5022:6:12"},"nodeType":"YulFunctionCall","src":"5022:12:12"},"nodeType":"YulExpressionStatement","src":"5022:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4978:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4989:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5000:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5005:10:12","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4996:3:12"},"nodeType":"YulFunctionCall","src":"4996:20:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4985:3:12"},"nodeType":"YulFunctionCall","src":"4985:32:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4975:2:12"},"nodeType":"YulFunctionCall","src":"4975:43:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4968:6:12"},"nodeType":"YulFunctionCall","src":"4968:51:12"},"nodeType":"YulIf","src":"4965:71:12"},{"nodeType":"YulAssignment","src":"5045:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"5055:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5045:6:12"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4822:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4833:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4845:6:12","type":""}],"src":"4776:290:12"},{"body":{"nodeType":"YulBlock","src":"5114:136:12","statements":[{"body":{"nodeType":"YulBlock","src":"5159:85:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5188:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5191:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5194:1:12","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"5173:14:12"},"nodeType":"YulFunctionCall","src":"5173:23:12"},"nodeType":"YulExpressionStatement","src":"5173:23:12"},{"nodeType":"YulAssignment","src":"5209:25:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5220:3:12","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5231:1:12","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5225:5:12"},"nodeType":"YulFunctionCall","src":"5225:8:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5216:3:12"},"nodeType":"YulFunctionCall","src":"5216:18:12"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"5209:3:12"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5130:14:12"},"nodeType":"YulFunctionCall","src":"5130:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"5148:1:12","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5127:2:12"},"nodeType":"YulFunctionCall","src":"5127:23:12"},"nodeType":"YulIf","src":"5124:120:12"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"5106:3:12","type":""}],"src":"5071:179:12"},{"body":{"nodeType":"YulBlock","src":"5302:202:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5312:58:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5334:6:12"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5350:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"5356:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5346:3:12"},"nodeType":"YulFunctionCall","src":"5346:13:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5365:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5361:3:12"},"nodeType":"YulFunctionCall","src":"5361:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5342:3:12"},"nodeType":"YulFunctionCall","src":"5342:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5330:3:12"},"nodeType":"YulFunctionCall","src":"5330:40:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5316:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5445:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5447:16:12"},"nodeType":"YulFunctionCall","src":"5447:18:12"},"nodeType":"YulExpressionStatement","src":"5447:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5388:10:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5408:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5412:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5404:3:12"},"nodeType":"YulFunctionCall","src":"5404:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"5416:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5400:3:12"},"nodeType":"YulFunctionCall","src":"5400:18:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5385:2:12"},"nodeType":"YulFunctionCall","src":"5385:34:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5424:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5436:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5421:2:12"},"nodeType":"YulFunctionCall","src":"5421:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5382:2:12"},"nodeType":"YulFunctionCall","src":"5382:62:12"},"nodeType":"YulIf","src":"5379:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5483:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5487:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5476:6:12"},"nodeType":"YulFunctionCall","src":"5476:22:12"},"nodeType":"YulExpressionStatement","src":"5476:22:12"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5284:6:12","type":""},{"name":"size","nodeType":"YulTypedName","src":"5292:4:12","type":""}],"src":"5255:249:12"},{"body":{"nodeType":"YulBlock","src":"5556:624:12","statements":[{"body":{"nodeType":"YulBlock","src":"5596:9:12","statements":[{"nodeType":"YulLeave","src":"5598:5:12"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5572:14:12"},"nodeType":"YulFunctionCall","src":"5572:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"5590:4:12","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5569:2:12"},"nodeType":"YulFunctionCall","src":"5569:26:12"},"nodeType":"YulIf","src":"5566:39:12"},{"nodeType":"YulVariableDeclaration","src":"5614:21:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5632:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5626:5:12"},"nodeType":"YulFunctionCall","src":"5626:9:12"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"5618:4:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5644:16:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5658:1:12","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5654:3:12"},"nodeType":"YulFunctionCall","src":"5654:6:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5648:2:12","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5684:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"5690:1:12","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5697:14:12"},"nodeType":"YulFunctionCall","src":"5697:16:12"},{"name":"_1","nodeType":"YulIdentifier","src":"5715:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5693:3:12"},"nodeType":"YulFunctionCall","src":"5693:25:12"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"5669:14:12"},"nodeType":"YulFunctionCall","src":"5669:50:12"},"nodeType":"YulExpressionStatement","src":"5669:50:12"},{"nodeType":"YulVariableDeclaration","src":"5728:25:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5748:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5742:5:12"},"nodeType":"YulFunctionCall","src":"5742:11:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5732:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5762:26:12","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5772:14:12"},"nodeType":"YulFunctionCall","src":"5772:16:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5766:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5797:28:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5815:2:12","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5819:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5811:3:12"},"nodeType":"YulFunctionCall","src":"5811:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"5823:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5807:3:12"},"nodeType":"YulFunctionCall","src":"5807:18:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5801:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5883:9:12","statements":[{"nodeType":"YulLeave","src":"5885:5:12"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5843:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"5851:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5840:2:12"},"nodeType":"YulFunctionCall","src":"5840:14:12"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5863:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"5871:4:12","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5859:3:12"},"nodeType":"YulFunctionCall","src":"5859:17:12"},{"name":"_2","nodeType":"YulIdentifier","src":"5878:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5856:2:12"},"nodeType":"YulFunctionCall","src":"5856:25:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5837:2:12"},"nodeType":"YulFunctionCall","src":"5837:45:12"},"nodeType":"YulIf","src":"5834:58:12"},{"nodeType":"YulVariableDeclaration","src":"5901:28:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5916:4:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5922:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5912:3:12"},"nodeType":"YulFunctionCall","src":"5912:17:12"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"5905:3:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5938:24:12","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"5958:3:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5952:5:12"},"nodeType":"YulFunctionCall","src":"5952:10:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5942:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5989:9:12","statements":[{"nodeType":"YulLeave","src":"5991:5:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5977:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"5985:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5974:2:12"},"nodeType":"YulFunctionCall","src":"5974:14:12"},"nodeType":"YulIf","src":"5971:27:12"},{"body":{"nodeType":"YulBlock","src":"6080:9:12","statements":[{"nodeType":"YulLeave","src":"6082:5:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"6021:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"6026:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6017:3:12"},"nodeType":"YulFunctionCall","src":"6017:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"6035:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6013:3:12"},"nodeType":"YulFunctionCall","src":"6013:27:12"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6050:4:12"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"6056:14:12"},"nodeType":"YulFunctionCall","src":"6056:16:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6046:3:12"},"nodeType":"YulFunctionCall","src":"6046:27:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6075:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6042:3:12"},"nodeType":"YulFunctionCall","src":"6042:36:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6010:2:12"},"nodeType":"YulFunctionCall","src":"6010:69:12"},"nodeType":"YulIf","src":"6007:82:12"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6118:4:12"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6132:6:12"},{"name":"length","nodeType":"YulIdentifier","src":"6140:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6128:3:12"},"nodeType":"YulFunctionCall","src":"6128:19:12"},{"kind":"number","nodeType":"YulLiteral","src":"6149:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6124:3:12"},"nodeType":"YulFunctionCall","src":"6124:30:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6098:19:12"},"nodeType":"YulFunctionCall","src":"6098:57:12"},"nodeType":"YulExpressionStatement","src":"6098:57:12"},{"nodeType":"YulAssignment","src":"6164:10:12","value":{"name":"msg","nodeType":"YulIdentifier","src":"6171:3:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6164:3:12"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5548:3:12","type":""}],"src":"5509:671:12"},{"body":{"nodeType":"YulBlock","src":"6306:98:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6323:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6334:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6316:6:12"},"nodeType":"YulFunctionCall","src":"6316:21:12"},"nodeType":"YulExpressionStatement","src":"6316:21:12"},{"nodeType":"YulAssignment","src":"6346:52:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6371:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6383:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6394:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6379:3:12"},"nodeType":"YulFunctionCall","src":"6379:18:12"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"6354:16:12"},"nodeType":"YulFunctionCall","src":"6354:44:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6346:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6275:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6286:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6297:4:12","type":""}],"src":"6185:219:12"},{"body":{"nodeType":"YulBlock","src":"6583:242:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6600:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6611:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6593:6:12"},"nodeType":"YulFunctionCall","src":"6593:21:12"},"nodeType":"YulExpressionStatement","src":"6593:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6634:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6645:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6630:3:12"},"nodeType":"YulFunctionCall","src":"6630:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"6650:2:12","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6623:6:12"},"nodeType":"YulFunctionCall","src":"6623:30:12"},"nodeType":"YulExpressionStatement","src":"6623:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6673:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6684:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:12"},"nodeType":"YulFunctionCall","src":"6669:18:12"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"6689:34:12","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6662:6:12"},"nodeType":"YulFunctionCall","src":"6662:62:12"},"nodeType":"YulExpressionStatement","src":"6662:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6744:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6755:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6740:3:12"},"nodeType":"YulFunctionCall","src":"6740:18:12"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"6760:22:12","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6733:6:12"},"nodeType":"YulFunctionCall","src":"6733:50:12"},"nodeType":"YulExpressionStatement","src":"6733:50:12"},{"nodeType":"YulAssignment","src":"6792:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6804:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"6815:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6800:3:12"},"nodeType":"YulFunctionCall","src":"6800:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6792:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6560:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6574:4:12","type":""}],"src":"6409:416:12"},{"body":{"nodeType":"YulBlock","src":"7004:230:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7021:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7032:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7014:6:12"},"nodeType":"YulFunctionCall","src":"7014:21:12"},"nodeType":"YulExpressionStatement","src":"7014:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7055:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7066:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7051:3:12"},"nodeType":"YulFunctionCall","src":"7051:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7071:2:12","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7044:6:12"},"nodeType":"YulFunctionCall","src":"7044:30:12"},"nodeType":"YulExpressionStatement","src":"7044:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7094:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7105:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7090:3:12"},"nodeType":"YulFunctionCall","src":"7090:18:12"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"7110:34:12","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7083:6:12"},"nodeType":"YulFunctionCall","src":"7083:62:12"},"nodeType":"YulExpressionStatement","src":"7083:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7165:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7176:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7161:3:12"},"nodeType":"YulFunctionCall","src":"7161:18:12"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"7181:10:12","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7154:6:12"},"nodeType":"YulFunctionCall","src":"7154:38:12"},"nodeType":"YulExpressionStatement","src":"7154:38:12"},{"nodeType":"YulAssignment","src":"7201:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7213:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7224:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7209:3:12"},"nodeType":"YulFunctionCall","src":"7209:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7201:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6981:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6995:4:12","type":""}],"src":"6830:404:12"},{"body":{"nodeType":"YulBlock","src":"7286:88:12","statements":[{"body":{"nodeType":"YulBlock","src":"7317:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7319:16:12"},"nodeType":"YulFunctionCall","src":"7319:18:12"},"nodeType":"YulExpressionStatement","src":"7319:18:12"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7302:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7313:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7309:3:12"},"nodeType":"YulFunctionCall","src":"7309:6:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7299:2:12"},"nodeType":"YulFunctionCall","src":"7299:17:12"},"nodeType":"YulIf","src":"7296:43:12"},{"nodeType":"YulAssignment","src":"7348:20:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7359:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"7366:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7355:3:12"},"nodeType":"YulFunctionCall","src":"7355:13:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7348:3:12"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7268:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7278:3:12","type":""}],"src":"7239:135:12"},{"body":{"nodeType":"YulBlock","src":"7553:230:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7570:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7581:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7563:6:12"},"nodeType":"YulFunctionCall","src":"7563:21:12"},"nodeType":"YulExpressionStatement","src":"7563:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7604:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7615:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7600:3:12"},"nodeType":"YulFunctionCall","src":"7600:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"7620:2:12","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7593:6:12"},"nodeType":"YulFunctionCall","src":"7593:30:12"},"nodeType":"YulExpressionStatement","src":"7593:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7643:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7654:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7639:3:12"},"nodeType":"YulFunctionCall","src":"7639:18:12"},{"hexValue":"455243313135353a206275726e20616d6f756e74206578636565647320746f74","kind":"string","nodeType":"YulLiteral","src":"7659:34:12","type":"","value":"ERC1155: burn amount exceeds tot"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7632:6:12"},"nodeType":"YulFunctionCall","src":"7632:62:12"},"nodeType":"YulExpressionStatement","src":"7632:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7714:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7725:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7710:3:12"},"nodeType":"YulFunctionCall","src":"7710:18:12"},{"hexValue":"616c537570706c79","kind":"string","nodeType":"YulLiteral","src":"7730:10:12","type":"","value":"alSupply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7703:6:12"},"nodeType":"YulFunctionCall","src":"7703:38:12"},"nodeType":"YulExpressionStatement","src":"7703:38:12"},{"nodeType":"YulAssignment","src":"7750:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7762:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7773:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7758:3:12"},"nodeType":"YulFunctionCall","src":"7758:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7750:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7530:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7544:4:12","type":""}],"src":"7379:404:12"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := sub(shl(64, 1), 1)\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds tot\")\n        mstore(add(headStart, 96), \"alSupply\")\n        tail := add(headStart, 128)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060800160405280604d815260200162002c2b604d91396200003781620000bd565b506200004333620000cf565b620000683360006064604051806020016040528060008152506200012160201b60201c565b6200008d3360016064604051806020016040528060008152506200012160201b60201c565b60405180608001604052806043815260200162002be860439139600590620000b69082620006ef565b50620009d1565b6002620000cb8282620006ef565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416620001875760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b336000620001958562000254565b90506000620001a48562000254565b9050620001b783600089858589620002a2565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290620001e9908490620007d1565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46200024b83600089898989620002c5565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110620002915762000291620007ed565b602090810291909101015292915050565b620002bd8686868686866200049160201b620008191760201c565b505050505050565b620002e4846001600160a01b03166200063f60201b6200099c1760201c565b15620002bd5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906200032090899089908890889088906004016200084b565b6020604051808303816000875af19250505080156200035e575060408051601f3d908101601f191682019092526200035b9181019062000892565b60015b6200041e576200036d620008c5565b806308c379a003620003ad57506200038462000911565b80620003915750620003af565b8060405162461bcd60e51b81526004016200017e9190620009a0565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016200017e565b6001600160e01b0319811663f23a6e6160e01b146200024b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016200017e565b620004ac868686868686620002bd60201b620009941760201c565b6001600160a01b038516620005405760005b83518110156200053e57828181518110620004dd57620004dd620007ed565b602002602001015160046000868481518110620004fe57620004fe620007ed565b602002602001015181526020019081526020016000206000828254620005259190620007d1565b9091555062000536905081620009b5565b9050620004be565b505b6001600160a01b038416620002bd5760005b83518110156200024b576000848281518110620005735762000573620007ed565b602002602001015190506000848381518110620005945762000594620007ed565b6020026020010151905060006004600084815260200190815260200160002054905081811015620006195760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016200017e565b600092835260046020526040909220910390556200063781620009b5565b905062000552565b6001600160a01b03163b151590565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200067957607f821691505b6020821081036200069a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620006ea57600081815260208120601f850160051c81016020861015620006c95750805b601f850160051c820191505b81811015620002bd57828155600101620006d5565b505050565b81516001600160401b038111156200070b576200070b6200064e565b62000723816200071c845462000664565b84620006a0565b602080601f8311600181146200075b5760008415620007425750858301515b600019600386901b1c1916600185901b178555620002bd565b600085815260208120601f198616915b828110156200078c578886015182559484019460019091019084016200076b565b5085821015620007ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b80820180821115620007e757620007e7620007bb565b92915050565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b818110156200082b576020818501810151868301820152016200080d565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090620008879083018462000803565b979650505050505050565b600060208284031215620008a557600080fd5b81516001600160e01b031981168114620008be57600080fd5b9392505050565b600060033d1115620008df5760046000803e5060005160e01c5b90565b601f8201601f191681016001600160401b03811182821017156200090a576200090a6200064e565b6040525050565b600060443d1015620009205790565b6040516003193d81016004833e81513d6001600160401b0380831160248401831017156200095057505050505090565b8285019150815181811115620009695750505050505090565b843d8701016020828501011115620009845750505050505090565b6200099560208286010187620008e2565b509095945050505050565b602081526000620008be602083018462000803565b600060018201620009ca57620009ca620007bb565b5060010190565b61220780620009e16000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b8578063c87b56dd1161007c578063c87b56dd1461029a578063d4822fbf146102ad578063e985e9c5146102c0578063f242432a146102fc578063f2fde38b1461030f578063f5298aca1461032257600080fd5b80638da5cb5b1461023c578063a22cb46514610257578063a3cd71f61461026a578063bd85b03914610272578063c7eaef1e1461029257600080fd5b80634e1273f4116100ff5780634e1273f4146101cc5780634f558e79146101ec57806355f804b31461020e5780636b20c45414610221578063715018a61461023457600080fd5b8062fdd58e1461013b57806301ffc9a7146101615780630e89341c146101845780632baf2acb146101a45780632eb2c2d6146101b9575b600080fd5b61014e6101493660046115a3565b610335565b6040519081526020015b60405180910390f35b61017461016f3660046115e3565b6103ce565b6040519015158152602001610158565b610197610192366004611607565b61041e565b6040516101589190611670565b6101b76101b2366004611683565b6104b2565b005b6101b76101c736600461180c565b6104d2565b6101df6101da3660046118b6565b61051e565b60405161015891906119bc565b6101746101fa366004611607565b600090815260046020526040902054151590565b6101b761021c3660046119cf565b610648565b6101b761022f366004611a20565b61065c565b6101b761069f565b6003546040516001600160a01b039091168152602001610158565b6101b7610265366004611a94565b6106b3565b61014e600081565b61014e610280366004611607565b60009081526004602052604090205490565b61014e600181565b6101976102a8366004611607565b6106c2565b6101b76102bb366004611ad0565b6106f6565b6101746102ce366004611afc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101b761030a366004611b26565b61071b565b6101b761031d366004611b8b565b610760565b6101b7610330366004611683565b6107d6565b60006001600160a01b0383166103a55760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806103ff57506001600160e01b031982166303a24d0760e21b145b806103c857506301ffc9a760e01b6001600160e01b03198316146103c8565b60606002805461042d90611ba6565b80601f016020809104026020016040519081016040528092919081815260200182805461045990611ba6565b80156104a65780601f1061047b576101008083540402835291602001916104a6565b820191906000526020600020905b81548152906001019060200180831161048957829003601f168201915b50505050509050919050565b6104cd838383604051806020016040528060008152506109ab565b505050565b6001600160a01b0385163314806104ee57506104ee85336102ce565b61050a5760405162461bcd60e51b815260040161039c90611be0565b6105178585858585610ac5565b5050505050565b606081518351146105835760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161039c565b6000835167ffffffffffffffff81111561059f5761059f6116b6565b6040519080825280602002602001820160405280156105c8578160200160208202803683370190505b50905060005b8451811015610640576106138582815181106105ec576105ec611c2e565b602002602001015185838151811061060657610606611c2e565b6020026020010151610335565b82828151811061062557610625611c2e565b602090810291909101015261063981611c5a565b90506105ce565b509392505050565b610650610c67565b61065981610cc1565b50565b6001600160a01b038316331480610678575061067883336102ce565b6106945760405162461bcd60e51b815260040161039c90611be0565b6104cd838383610ccd565b6106a7610c67565b6106b16000610e6a565b565b6106be338383610ebc565b5050565b606060056106cf83610f9c565b6040516020016106e0929190611c73565b6040516020818303038152906040529050919050565b6106fe610c67565b6106be3382846001604051806020016040528060008152506110c8565b6001600160a01b038516331480610737575061073785336102ce565b6107535760405162461bcd60e51b815260040161039c90611be0565b61051785858585856110c8565b610768610c67565b6001600160a01b0381166107cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161039c565b61065981610e6a565b6001600160a01b0383163314806107f257506107f283336102ce565b61080e5760405162461bcd60e51b815260040161039c90611be0565b6104cd838383611200565b6001600160a01b0385166108a05760005b835181101561089e5782818151811061084557610845611c2e565b60200260200101516004600086848151811061086357610863611c2e565b6020026020010151815260200190815260200160002060008282546108889190611d19565b90915550610897905081611c5a565b905061082a565b505b6001600160a01b0384166109945760005b83518110156109925760008482815181106108ce576108ce611c2e565b6020026020010151905060008483815181106108ec576108ec611c2e565b602002602001015190506000600460008481526020019081526020016000205490508181101561096f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b606482015260840161039c565b6000928352600460205260409092209103905561098b81611c5a565b90506108b1565b505b505050505050565b6001600160a01b03163b151590565b6001600160a01b038416610a0b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161039c565b336000610a1785611318565b90506000610a2485611318565b9050610a3583600089858589611363565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290610a65908490611d19565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461099283600089898989611371565b8151835114610ae65760405162461bcd60e51b815260040161039c90611d2c565b6001600160a01b038416610b0c5760405162461bcd60e51b815260040161039c90611d74565b33610b1b818787878787611363565b60005b8451811015610c01576000858281518110610b3b57610b3b611c2e565b602002602001015190506000858381518110610b5957610b59611c2e565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610ba95760405162461bcd60e51b815260040161039c90611db9565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610be6908490611d19565b9250508190555050505080610bfa90611c5a565b9050610b1e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c51929190611e03565b60405180910390a46109948187878787876114cc565b6003546001600160a01b031633146106b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039c565b60026106be8282611e77565b6001600160a01b038316610cf35760405162461bcd60e51b815260040161039c90611f37565b8051825114610d145760405162461bcd60e51b815260040161039c90611d2c565b6000339050610d3781856000868660405180602001604052806000815250611363565b60005b8351811015610dfc576000848281518110610d5757610d57611c2e565b602002602001015190506000848381518110610d7557610d75611c2e565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610dc55760405162461bcd60e51b815260040161039c90611f7a565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610df481611c5a565b915050610d3a565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610e4d929190611e03565b60405180910390a460408051602081019091526000905250505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610f2f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161039c565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b606081600003610fc35750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610fed5780610fd781611c5a565b9150610fe69050600a83611fbe565b9150610fc7565b60008167ffffffffffffffff811115611008576110086116b6565b6040519080825280601f01601f191660200182016040528015611032576020820181803683370190505b509050815b85156110bf57611048600182611fe0565b90506000611057600a88611fbe565b61106290600a611ff3565b61106c9088611fe0565b61107790603061200a565b905060008160f81b90508084848151811061109457611094611c2e565b60200101906001600160f81b031916908160001a9053506110b6600a89611fbe565b97505050611037565b50949350505050565b6001600160a01b0384166110ee5760405162461bcd60e51b815260040161039c90611d74565b3360006110fa85611318565b9050600061110785611318565b9050611117838989858589611363565b6000868152602081815260408083206001600160a01b038c168452909152902054858110156111585760405162461bcd60e51b815260040161039c90611db9565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611195908490611d19565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111f5848a8a8a8a8a611371565b505050505050505050565b6001600160a01b0383166112265760405162461bcd60e51b815260040161039c90611f37565b33600061123284611318565b9050600061123f84611318565b905061125f83876000858560405180602001604052806000815250611363565b6000858152602081815260408083206001600160a01b038a168452909152902054848110156112a05760405162461bcd60e51b815260040161039c90611f7a565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610992565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061135257611352611c2e565b602090810291909101015292915050565b610994868686868686610819565b6001600160a01b0384163b156109945760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113b59089908990889088908890600401612023565b6020604051808303816000875af19250505080156113f0575060408051601f3d908101601f191682019092526113ed91810190612068565b60015b61149c576113fc612085565b806308c379a00361143557506114106120a1565b8061141b5750611437565b8060405162461bcd60e51b815260040161039c9190611670565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161039c565b6001600160e01b0319811663f23a6e6160e01b146109925760405162461bcd60e51b815260040161039c9061212b565b6001600160a01b0384163b156109945760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906115109089908990889088908890600401612173565b6020604051808303816000875af192505050801561154b575060408051601f3d908101601f1916820190925261154891810190612068565b60015b611557576113fc612085565b6001600160e01b0319811663bc197c8160e01b146109925760405162461bcd60e51b815260040161039c9061212b565b80356001600160a01b038116811461159e57600080fd5b919050565b600080604083850312156115b657600080fd5b6115bf83611587565b946020939093013593505050565b6001600160e01b03198116811461065957600080fd5b6000602082840312156115f557600080fd5b8135611600816115cd565b9392505050565b60006020828403121561161957600080fd5b5035919050565b60005b8381101561163b578181015183820152602001611623565b50506000910152565b6000815180845261165c816020860160208601611620565b601f01601f19169290920160200192915050565b6020815260006116006020830184611644565b60008060006060848603121561169857600080fd5b6116a184611587565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156116f2576116f26116b6565b6040525050565b600067ffffffffffffffff821115611713576117136116b6565b5060051b60200190565b600082601f83011261172e57600080fd5b8135602061173b826116f9565b60405161174882826116cc565b83815260059390931b850182019282810191508684111561176857600080fd5b8286015b84811015611783578035835291830191830161176c565b509695505050505050565b600067ffffffffffffffff8311156117a8576117a86116b6565b6040516117bf601f8501601f1916602001826116cc565b8091508381528484840111156117d457600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126117fd57600080fd5b6116008383356020850161178e565b600080600080600060a0868803121561182457600080fd5b61182d86611587565b945061183b60208701611587565b9350604086013567ffffffffffffffff8082111561185857600080fd5b61186489838a0161171d565b9450606088013591508082111561187a57600080fd5b61188689838a0161171d565b9350608088013591508082111561189c57600080fd5b506118a9888289016117ec565b9150509295509295909350565b600080604083850312156118c957600080fd5b823567ffffffffffffffff808211156118e157600080fd5b818501915085601f8301126118f557600080fd5b81356020611902826116f9565b60405161190f82826116cc565b83815260059390931b850182019282810191508984111561192f57600080fd5b948201945b838610156119545761194586611587565b82529482019490820190611934565b9650508601359250508082111561196a57600080fd5b506119778582860161171d565b9150509250929050565b600081518084526020808501945080840160005b838110156119b157815187529582019590820190600101611995565b509495945050505050565b6020815260006116006020830184611981565b6000602082840312156119e157600080fd5b813567ffffffffffffffff8111156119f857600080fd5b8201601f81018413611a0957600080fd5b611a188482356020840161178e565b949350505050565b600080600060608486031215611a3557600080fd5b611a3e84611587565b9250602084013567ffffffffffffffff80821115611a5b57600080fd5b611a678783880161171d565b93506040860135915080821115611a7d57600080fd5b50611a8a8682870161171d565b9150509250925092565b60008060408385031215611aa757600080fd5b611ab083611587565b915060208301358015158114611ac557600080fd5b809150509250929050565b60008060408385031215611ae357600080fd5b82359150611af360208401611587565b90509250929050565b60008060408385031215611b0f57600080fd5b611b1883611587565b9150611af360208401611587565b600080600080600060a08688031215611b3e57600080fd5b611b4786611587565b9450611b5560208701611587565b93506040860135925060608601359150608086013567ffffffffffffffff811115611b7f57600080fd5b6118a9888289016117ec565b600060208284031215611b9d57600080fd5b61160082611587565b600181811c90821680611bba57607f821691505b602082108103611bda57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611c6c57611c6c611c44565b5060010190565b6000808454611c8181611ba6565b60018281168015611c995760018114611cae57611cdd565b60ff1984168752821515830287019450611cdd565b8860005260208060002060005b85811015611cd45781548a820152908401908201611cbb565b50505082870194505b50602f60f81b845286519250611cf98382860160208a01611620565b64173539b7b760d91b939092019182019290925260060195945050505050565b808201808211156103c8576103c8611c44565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000611e166040830185611981565b8281036020840152611e288185611981565b95945050505050565b601f8211156104cd57600081815260208120601f850160051c81016020861015611e585750805b601f850160051c820191505b8181101561099457828155600101611e64565b815167ffffffffffffffff811115611e9157611e916116b6565b611ea581611e9f8454611ba6565b84611e31565b602080601f831160018114611eda5760008415611ec25750858301515b600019600386901b1c1916600185901b178555610994565b600085815260208120601f198616915b82811015611f0957888601518255948401946001909101908401611eea565b5085821015611f275787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b600082611fdb57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156103c8576103c8611c44565b80820281158282048414176103c8576103c8611c44565b60ff81811683821601908111156103c8576103c8611c44565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061205d90830184611644565b979650505050505050565b60006020828403121561207a57600080fd5b8151611600816115cd565b600060033d111561209e5760046000803e5060005160e01c5b90565b600060443d10156120af5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156120df57505050505090565b82850191508151818111156120f75750505050505090565b843d87010160208285010111156121115750505050505090565b612120602082860101876116cc565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061219f90830186611981565b82810360608401526121b18186611981565b905082810360808401526121c58185611644565b9897505050505050505056fea2646970667358221220c900510f0821a538ea24d9fad9ebd08d8f728cd301fcab1b532b389c56fafb0964736f6c6343000812003368747470733a2f2f697066732e696f2f697066732f516d55685759427a3769665958644b4d77666437467a72356255654c726a476a4d454b696e7a566253666d31684768747470733a2f2f697066732e696f2f697066732f516d55685759427a3769665958644b4d77666437467a72356255654c726a476a4d454b696e7a566253666d3168472f7b69647d2e6a736f6e","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4D DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2C2B PUSH1 0x4D SWAP2 CODECOPY PUSH3 0x37 DUP2 PUSH3 0xBD JUMP JUMPDEST POP PUSH3 0x43 CALLER PUSH3 0xCF JUMP JUMPDEST PUSH3 0x68 CALLER PUSH1 0x0 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x121 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x8D CALLER PUSH1 0x1 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x121 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2BE8 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x5 SWAP1 PUSH3 0xB6 SWAP1 DUP3 PUSH3 0x6EF JUMP JUMPDEST POP PUSH3 0x9D1 JUMP JUMPDEST PUSH1 0x2 PUSH3 0xCB DUP3 DUP3 PUSH3 0x6EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 PUSH3 0x195 DUP6 PUSH3 0x254 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x1A4 DUP6 PUSH3 0x254 JUMP JUMPDEST SWAP1 POP PUSH3 0x1B7 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH3 0x2A2 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH3 0x1E9 SWAP1 DUP5 SWAP1 PUSH3 0x7D1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH3 0x24B DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH3 0x2C5 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x291 JUMPI PUSH3 0x291 PUSH3 0x7ED JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2BD DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH3 0x491 PUSH1 0x20 SHL PUSH3 0x819 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x2E4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x63F PUSH1 0x20 SHL PUSH3 0x99C OR PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x2BD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH3 0x320 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH3 0x84B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x35E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x35B SWAP2 DUP2 ADD SWAP1 PUSH3 0x892 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x41E JUMPI PUSH3 0x36D PUSH3 0x8C5 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH3 0x3AD JUMPI POP PUSH3 0x384 PUSH3 0x911 JUMP JUMPDEST DUP1 PUSH3 0x391 JUMPI POP PUSH3 0x3AF JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17E SWAP2 SWAP1 PUSH3 0x9A0 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x17E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH3 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x17E JUMP JUMPDEST PUSH3 0x4AC DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH3 0x2BD PUSH1 0x20 SHL PUSH3 0x994 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH3 0x540 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x53E JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x4DD JUMPI PUSH3 0x4DD PUSH3 0x7ED JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x4FE JUMPI PUSH3 0x4FE PUSH3 0x7ED JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x525 SWAP2 SWAP1 PUSH3 0x7D1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x536 SWAP1 POP DUP2 PUSH3 0x9B5 JUMP JUMPDEST SWAP1 POP PUSH3 0x4BE JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x2BD JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x24B JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x573 JUMPI PUSH3 0x573 PUSH3 0x7ED JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x594 JUMPI PUSH3 0x594 PUSH3 0x7ED JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x619 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E74206578636565647320746F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x616C537570706C79 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x17E JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH3 0x637 DUP2 PUSH3 0x9B5 JUMP JUMPDEST SWAP1 POP PUSH3 0x552 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x679 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x69A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6EA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x6C9 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2BD JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x6D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x70B JUMPI PUSH3 0x70B PUSH3 0x64E JUMP JUMPDEST PUSH3 0x723 DUP2 PUSH3 0x71C DUP5 SLOAD PUSH3 0x664 JUMP JUMPDEST DUP5 PUSH3 0x6A0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x75B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x742 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2BD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x78C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x76B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x7AB JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x7E7 JUMPI PUSH3 0x7E7 PUSH3 0x7BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x82B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x80D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x887 SWAP1 DUP4 ADD DUP5 PUSH3 0x803 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH3 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH3 0x8DF JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x90A JUMPI PUSH3 0x90A PUSH3 0x64E JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH3 0x920 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT PUSH1 0x24 DUP5 ADD DUP4 LT OR ISZERO PUSH3 0x950 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x969 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH3 0x984 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH3 0x995 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH3 0x8E2 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x8BE PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x803 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x9CA JUMPI PUSH3 0x9CA PUSH3 0x7BB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2207 DUP1 PUSH3 0x9E1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xD4822FBF EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xA3CD71F6 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xC7EAEF1E EQ PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x2BAF2ACB EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x180C JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A94 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x14E PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14E PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x6C2 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3FF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3C8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x459 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4EE JUMPI POP PUSH2 0x4EE DUP6 CALLER PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x517 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xAC5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x59F JUMPI PUSH2 0x59F PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x640 JUMPI PUSH2 0x613 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5EC JUMPI PUSH2 0x5EC PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x606 JUMPI PUSH2 0x606 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x335 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x625 JUMPI PUSH2 0x625 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x639 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP PUSH2 0x5CE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x650 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x659 DUP2 PUSH2 0xCC1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x678 JUMPI POP PUSH2 0x678 DUP4 CALLER PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 DUP4 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x6B1 PUSH1 0x0 PUSH2 0xE6A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6BE CALLER DUP4 DUP4 PUSH2 0xEBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH2 0x6CF DUP4 PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E0 SWAP3 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FE PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x6BE CALLER DUP3 DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x737 JUMPI POP PUSH2 0x737 DUP6 CALLER PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x517 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10C8 JUMP JUMPDEST PUSH2 0x768 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST PUSH2 0x659 DUP2 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x7F2 JUMPI POP PUSH2 0x7F2 DUP4 CALLER PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 DUP4 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x8A0 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x89E JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x845 JUMPI PUSH2 0x845 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x863 JUMPI PUSH2 0x863 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x888 SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x897 SWAP1 POP DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP PUSH2 0x82A JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x994 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8CE JUMPI PUSH2 0x8CE PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8EC JUMPI PUSH2 0x8EC PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E74206578636565647320746F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x616C537570706C79 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0x98B DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP PUSH2 0x8B1 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xA17 DUP6 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA24 DUP6 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH2 0xA35 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xA65 SWAP1 DUP5 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x992 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1371 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1D74 JUMP JUMPDEST CALLER PUSH2 0xB1B DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xC01 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB3B JUMPI PUSH2 0xB3B PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB59 JUMPI PUSH2 0xB59 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBE6 SWAP1 DUP5 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xBFA SWAP1 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP PUSH2 0xB1E JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC51 SWAP3 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x994 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x2 PUSH2 0x6BE DUP3 DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1F37 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0xD37 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD57 JUMPI PUSH2 0xD57 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD75 JUMPI PUSH2 0xD75 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1F7A JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0xDF4 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD3A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xE4D SWAP3 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xF2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xFC3 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xFED JUMPI DUP1 PUSH2 0xFD7 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP PUSH2 0xFE6 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1FBE JUMP JUMPDEST SWAP2 POP PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1008 JUMPI PUSH2 0x1008 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1032 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x10BF JUMPI PUSH2 0x1048 PUSH1 0x1 DUP3 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1057 PUSH1 0xA DUP9 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x1062 SWAP1 PUSH1 0xA PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0x106C SWAP1 DUP9 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1077 SWAP1 PUSH1 0x30 PUSH2 0x200A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1094 JUMPI PUSH2 0x1094 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x10B6 PUSH1 0xA DUP10 PUSH2 0x1FBE JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0x1037 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1D74 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x10FA DUP6 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1107 DUP6 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH2 0x1117 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1195 SWAP1 DUP5 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11F5 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1371 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1226 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1F37 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1232 DUP5 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x123F DUP5 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH2 0x125F DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1F7A JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1352 JUMPI PUSH2 0x1352 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x994 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x13B5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13F0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13ED SWAP2 DUP2 ADD SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x149C JUMPI PUSH2 0x13FC PUSH2 0x2085 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1435 JUMPI POP PUSH2 0x1410 PUSH2 0x20A1 JUMP JUMPDEST DUP1 PUSH2 0x141B JUMPI POP PUSH2 0x1437 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1510 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x154B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1548 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1557 JUMPI PUSH2 0x13FC PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x212B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15BF DUP4 PUSH2 0x1587 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1600 DUP2 PUSH2 0x15CD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x163B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1623 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x165C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1600 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A1 DUP5 PUSH2 0x1587 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x16F2 JUMPI PUSH2 0x16F2 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1713 JUMPI PUSH2 0x1713 PUSH2 0x16B6 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x173B DUP3 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1748 DUP3 DUP3 PUSH2 0x16CC JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1783 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x176C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x17A8 JUMPI PUSH2 0x17A8 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17BF PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x16CC JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1600 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x182D DUP7 PUSH2 0x1587 JUMP JUMPDEST SWAP5 POP PUSH2 0x183B PUSH1 0x20 DUP8 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1864 DUP10 DUP4 DUP11 ADD PUSH2 0x171D JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x187A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1886 DUP10 DUP4 DUP11 ADD PUSH2 0x171D JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x189C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A9 DUP9 DUP3 DUP10 ADD PUSH2 0x17EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1902 DUP3 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190F DUP3 DUP3 PUSH2 0x16CC JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x192F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1954 JUMPI PUSH2 0x1945 DUP7 PUSH2 0x1587 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1934 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x196A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1977 DUP6 DUP3 DUP7 ADD PUSH2 0x171D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19B1 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1995 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1600 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1A09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A18 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x178E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3E DUP5 PUSH2 0x1587 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A67 DUP8 DUP4 DUP9 ADD PUSH2 0x171D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8A DUP7 DUP3 DUP8 ADD PUSH2 0x171D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AB0 DUP4 PUSH2 0x1587 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1AC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1AF3 PUSH1 0x20 DUP5 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B18 DUP4 PUSH2 0x1587 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF3 PUSH1 0x20 DUP5 ADD PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B47 DUP7 PUSH2 0x1587 JUMP JUMPDEST SWAP5 POP PUSH2 0x1B55 PUSH1 0x20 DUP8 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18A9 DUP9 DUP3 DUP10 ADD PUSH2 0x17EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1600 DUP3 PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1BBA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BDA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C6C JUMPI PUSH2 0x1C6C PUSH2 0x1C44 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x1C81 DUP2 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1C99 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1CAE JUMPI PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1CDD JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1CD4 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1CBB JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP PUSH1 0x2F PUSH1 0xF8 SHL DUP5 MSTORE DUP7 MLOAD SWAP3 POP PUSH2 0x1CF9 DUP4 DUP3 DUP7 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x1620 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x6 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C8 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E16 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1981 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1E28 DUP2 DUP6 PUSH2 0x1981 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1E58 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x994 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E64 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E91 JUMPI PUSH2 0x1E91 PUSH2 0x16B6 JUMP JUMPDEST PUSH2 0x1EA5 DUP2 PUSH2 0x1E9F DUP5 SLOAD PUSH2 0x1BA6 JUMP JUMPDEST DUP5 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1EDA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EC2 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x994 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F09 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1EEA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1F27 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FDB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C8 PUSH2 0x1C44 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3C8 JUMPI PUSH2 0x3C8 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C8 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x205D SWAP1 DUP4 ADD DUP5 PUSH2 0x1644 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x207A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1600 DUP2 PUSH2 0x15CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x209E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x20AF JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x20DF JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x20F7 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2111 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2120 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x16CC JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x219F SWAP1 DUP4 ADD DUP7 PUSH2 0x1981 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x21B1 DUP2 DUP7 PUSH2 0x1981 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x21C5 DUP2 DUP6 PUSH2 0x1644 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 STOP MLOAD 0xF ADDMOD 0x21 0xA5 CODESIZE 0xEA 0x24 0xD9 STATICCALL 0xD9 0xEB 0xD0 DUP14 DUP16 PUSH19 0x8CD301FCAB1B532B389C56FAFB0964736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER PUSH9 0x747470733A2F2F6970 PUSH7 0x732E696F2F6970 PUSH7 0x732F516D556857 MSIZE TIMESTAMP PUSH27 0x3769665958644B4D77666437467A72356255654C726A476A4D454B PUSH10 0x6E7A566253666D316847 PUSH9 0x747470733A2F2F6970 PUSH7 0x732E696F2F6970 PUSH7 0x732F516D556857 MSIZE TIMESTAMP PUSH27 0x3769665958644B4D77666437467A72356255654C726A476A4D454B PUSH10 0x6E7A566253666D316847 0x2F PUSH28 0x69647D2E6A736F6E0000000000000000000000000000000000000000 ","sourceMap":"329:1950:11:-:0;;;600:290;;;;;;;;;;1107:62:1;;;;;;;;;;;;;;;;;1149:13;1157:4;1149:7;:13::i;:::-;-1:-1:-1;936:32:0;719:10:8;936:18:0;:32::i;:::-;718:33:11::1;724:10;435:1;743:3;718:33;;;;;;;;;;;::::0;:5:::1;;;:33;;:::i;:::-;761:32;767:10;473:1;785:3;761:32;;;;;;;;;;;::::0;:5:::1;;;:32;;:::i;:::-;803:79;;;;;;;;;;;;;;;;;:7;::::0;:79:::1;::::0;:7;:79:::1;:::i;:::-;;329:1950:::0;;8149:86:1;8215:4;:13;8222:6;8215:4;:13;:::i;:::-;;8149:86;:::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8608:671:1:-;-1:-1:-1;;;;;8717:16:1;;8709:62;;;;-1:-1:-1;;;8709:62:1;;2937:2:12;8709:62:1;;;2919:21:12;2976:2;2956:18;;;2949:30;3015:34;2995:18;;;2988:62;-1:-1:-1;;;3066:18:12;;;3059:31;3107:19;;8709:62:1;;;;;;;;;719:10:8;8782:16:1;8846:21;8864:2;8846:17;:21::i;:::-;8823:44;-1:-1:-1;8877:24:1;8904:25;8922:6;8904:17;:25::i;:::-;8877:52;-1:-1:-1;8940:66:1;8961:8;8979:1;8983:2;8987:3;8877:52;9001:4;8940:20;:66::i;:::-;9017:9;:13;;;;;;;;;;;-1:-1:-1;;;;;9017:17:1;;;;;;;;;:27;;9038:6;;9017:9;:27;;9038:6;;9017:27;:::i;:::-;;;;-1:-1:-1;;9059:52:1;;;3573:25:12;;;3629:2;3614:18;;3607:34;;;-1:-1:-1;;;;;9059:52:1;;;;9092:1;;9059:52;;;;;;3546:18:12;9059:52:1;;;;;;;9198:74;9229:8;9247:1;9251:2;9255;9259:6;9267:4;9198:30;:74::i;:::-;8699:580;;;8608:671;;;;:::o;16914:193::-;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:1;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:1:o;1989:288:11:-;2206:66;2233:8;2243:4;2249:2;2253:3;2258:7;2267:4;2206:26;;;;;:66;;:::i;:::-;1989:288;;;;;;:::o;15385:725:1:-;15592:15;:2;-1:-1:-1;;;;;15592:13:1;;;;;;:15;;:::i;:::-;15588:516;;;15627:72;;-1:-1:-1;;;15627:72:1;;-1:-1:-1;;;;;15627:38:1;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:1;;;;;;;;-1:-1:-1;;15627:72:1;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;15970:6;15963:14;;-1:-1:-1;;;15963:14:1;;;;;;;;:::i;15623:471::-;;;16017:62;;-1:-1:-1;;;16017:62:1;;6611:2:12;16017:62:1;;;6593:21:12;6650:2;6630:18;;;6623:30;6689:34;6669:18;;;6662:62;6760:22;6740:18;;;6733:50;6800:19;;16017:62:1;6409:416:12;15623:471:1;-1:-1:-1;;;;;;15748:55:1;;-1:-1:-1;;;15748:55:1;15744:152;;15827:50;;-1:-1:-1;;;15827:50:1;;7032:2:12;15827:50:1;;;7014:21:12;7071:2;7051:18;;;7044:30;7110:34;7090:18;;;7083:62;-1:-1:-1;;;7161:18:12;;;7154:38;7209:19;;15827:50:1;6830:404:12;1091:904:5;1322:66;1349:8;1359:4;1365:2;1369:3;1374:7;1383:4;1322:26;;;;;:66;;:::i;:::-;-1:-1:-1;;;;;1403:18:5;;1399:156;;1442:9;1437:108;1461:3;:10;1457:1;:14;1437:108;;;1520:7;1528:1;1520:10;;;;;;;;:::i;:::-;;;;;;;1496:12;:20;1509:3;1513:1;1509:6;;;;;;;;:::i;:::-;;;;;;;1496:20;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;1473:3:5;;-1:-1:-1;1473:3:5;;:::i;:::-;;;1437:108;;;;1399:156;-1:-1:-1;;;;;1569:16:5;;1565:424;;1606:9;1601:378;1625:3;:10;1621:1;:14;1601:378;;;1660:10;1673:3;1677:1;1673:6;;;;;;;;:::i;:::-;;;;;;;1660:19;;1697:14;1714:7;1722:1;1714:10;;;;;;;;:::i;:::-;;;;;;;1697:27;;1742:14;1759:12;:16;1772:2;1759:16;;;;;;;;;;;;1742:33;;1811:6;1801;:16;;1793:69;;;;-1:-1:-1;;;1793:69:5;;7581:2:12;1793:69:5;;;7563:21:12;7620:2;7600:18;;;7593:30;7659:34;7639:18;;;7632:62;-1:-1:-1;;;7710:18:12;;;7703:38;7758:19;;1793:69:5;7379:404:12;1793:69:5;1912:16;;;;:12;:16;;;;;;1931:15;;1912:34;;1637:3;;;:::i;:::-;;;1601:378;;1412:320:7;-1:-1:-1;;;;;1702:19:7;;:23;;;1412:320::o;14:127:12:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:12;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:12;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:12;;;2580:26;2531:89;-1:-1:-1;;1335:1:12;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:12;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:12;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:12;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:12:o;3137:127::-;3198:10;3193:3;3189:20;3186:1;3179:31;3229:4;3226:1;3219:15;3253:4;3250:1;3243:15;3269:125;3334:9;;;3355:10;;;3352:36;;;3368:18;;:::i;:::-;3269:125;;;;:::o;3652:127::-;3713:10;3708:3;3704:20;3701:1;3694:31;3744:4;3741:1;3734:15;3768:4;3765:1;3758:15;3784:422;3825:3;3863:5;3857:12;3890:6;3885:3;3878:19;3915:1;3925:162;3939:6;3936:1;3933:13;3925:162;;;4001:4;4057:13;;;4053:22;;4047:29;4029:11;;;4025:20;;4018:59;3954:12;3925:162;;;3929:3;4132:1;4125:4;4116:6;4111:3;4107:16;4103:27;4096:38;4195:4;4188:2;4184:7;4179:2;4171:6;4167:15;4163:29;4158:3;4154:39;4150:50;4143:57;;;3784:422;;;;:::o;4211:560::-;-1:-1:-1;;;;;4508:15:12;;;4490:34;;4560:15;;4555:2;4540:18;;4533:43;4607:2;4592:18;;4585:34;;;4650:2;4635:18;;4628:34;;;4470:3;4693;4678:19;;4671:32;;;4433:4;;4720:45;;4745:19;;4737:6;4720:45;:::i;:::-;4712:53;4211:560;-1:-1:-1;;;;;;;4211:560:12:o;4776:290::-;4845:6;4898:2;4886:9;4877:7;4873:23;4869:32;4866:52;;;4914:1;4911;4904:12;4866:52;4940:16;;-1:-1:-1;;;;;;4985:32:12;;4975:43;;4965:71;;5032:1;5029;5022:12;4965:71;5055:5;4776:290;-1:-1:-1;;;4776:290:12:o;5071:179::-;5106:3;5148:1;5130:16;5127:23;5124:120;;;5194:1;5191;5188;5173:23;-1:-1:-1;5231:1:12;5225:8;5220:3;5216:18;5124:120;5071:179;:::o;5255:249::-;5365:2;5346:13;;-1:-1:-1;;5342:27:12;5330:40;;-1:-1:-1;;;;;5385:34:12;;5421:22;;;5382:62;5379:88;;;5447:18;;:::i;:::-;5483:2;5476:22;-1:-1:-1;;5255:249:12:o;5509:671::-;5548:3;5590:4;5572:16;5569:26;5566:39;;;5509:671;:::o;5566:39::-;5632:2;5626:9;-1:-1:-1;;5697:16:12;5693:25;;5690:1;5626:9;5669:50;5742:11;;5772:16;-1:-1:-1;;;;;5840:14:12;;;5871:4;5859:17;;5856:25;-1:-1:-1;5837:45:12;5834:58;;;5885:5;;;;;5509:671;:::o;5834:58::-;5922:6;5916:4;5912:17;5901:28;;5958:3;5952:10;5985:2;5977:6;5974:14;5971:27;;;5991:5;;;;;;5509:671;:::o;5971:27::-;6075:2;6056:16;6050:4;6046:27;6042:36;6035:4;6026:6;6021:3;6017:16;6013:27;6010:69;6007:82;;;6082:5;;;;;;5509:671;:::o;6007:82::-;6098:57;6149:4;6140:6;6132;6128:19;6124:30;6118:4;6098:57;:::i;:::-;-1:-1:-1;6171:3:12;;5509:671;-1:-1:-1;;;;;5509:671:12:o;6185:219::-;6334:2;6323:9;6316:21;6297:4;6354:44;6394:2;6383:9;6379:18;6371:6;6354:44;:::i;7239:135::-;7278:3;7299:17;;;7296:43;;7319:18;;:::i;:::-;-1:-1:-1;7366:1:12;7355:13;;7239:135::o;7379:404::-;329:1950:11;;;;;;"},"deployedBytecode":{"functionDebugData":{"@EMAIL_2144":{"entryPoint":null,"id":2144,"parameterSlots":0,"returnSlots":0},"@MEMO_2147":{"entryPoint":null,"id":2147,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1178":{"entryPoint":null,"id":1178,"parameterSlots":6,"returnSlots":0},"@_asSingletonArray_1334":{"entryPoint":4888,"id":1334,"parameterSlots":1,"returnSlots":1},"@_beforeTokenTransfer_1159":{"entryPoint":null,"id":1159,"parameterSlots":6,"returnSlots":0},"@_beforeTokenTransfer_1723":{"entryPoint":2073,"id":1723,"parameterSlots":6,"returnSlots":0},"@_beforeTokenTransfer_2372":{"entryPoint":4963,"id":2372,"parameterSlots":6,"returnSlots":0},"@_burnBatch_1108":{"entryPoint":3277,"id":1108,"parameterSlots":3,"returnSlots":0},"@_burn_985":{"entryPoint":4608,"id":985,"parameterSlots":3,"returnSlots":0},"@_checkOwner_54":{"entryPoint":3175,"id":54,"parameterSlots":0,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1306":{"entryPoint":5324,"id":1306,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1241":{"entryPoint":4977,"id":1241,"parameterSlots":6,"returnSlots":0},"@_mint_769":{"entryPoint":2475,"id":769,"parameterSlots":4,"returnSlots":0},"@_msgSender_2081":{"entryPoint":null,"id":2081,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_657":{"entryPoint":2757,"id":657,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_522":{"entryPoint":4296,"id":522,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1140":{"entryPoint":3772,"id":1140,"parameterSlots":3,"returnSlots":0},"@_setURI_668":{"entryPoint":3265,"id":668,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":3690,"id":111,"parameterSlots":1,"returnSlots":0},"@balanceOfBatch_292":{"entryPoint":1310,"id":292,"parameterSlots":2,"returnSlots":1},"@balanceOf_228":{"entryPoint":821,"id":228,"parameterSlots":2,"returnSlots":1},"@burnBatch_1566":{"entryPoint":1628,"id":1566,"parameterSlots":3,"returnSlots":0},"@burn_1534":{"entryPoint":2006,"id":1534,"parameterSlots":3,"returnSlots":0},"@exists_1606":{"entryPoint":null,"id":1606,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_327":{"entryPoint":null,"id":327,"parameterSlots":2,"returnSlots":1},"@isContract_1757":{"entryPoint":2460,"id":1757,"parameterSlots":1,"returnSlots":1},"@mintTo_2224":{"entryPoint":1202,"id":2224,"parameterSlots":3,"returnSlots":0},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":1695,"id":68,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_405":{"entryPoint":1234,"id":405,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_365":{"entryPoint":1819,"id":365,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_309":{"entryPoint":1715,"id":309,"parameterSlots":2,"returnSlots":0},"@setBaseURI_2161":{"entryPoint":1608,"id":2161,"parameterSlots":1,"returnSlots":0},"@supportsInterface_188":{"entryPoint":974,"id":188,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2114":{"entryPoint":null,"id":2114,"parameterSlots":1,"returnSlots":1},"@tokenURI_2340":{"entryPoint":1730,"id":2340,"parameterSlots":1,"returnSlots":1},"@totalSupply_1590":{"entryPoint":null,"id":1590,"parameterSlots":1,"returnSlots":1},"@transferOwnership_91":{"entryPoint":1888,"id":91,"parameterSlots":1,"returnSlots":0},"@transferTo_2207":{"entryPoint":1782,"id":2207,"parameterSlots":2,"returnSlots":0},"@uintToStr_2319":{"entryPoint":3996,"id":2319,"parameterSlots":1,"returnSlots":1},"@uri_200":{"entryPoint":1054,"id":200,"parameterSlots":1,"returnSlots":1},"abi_decode_address":{"entryPoint":5511,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":5917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":6030,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":6124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7051,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6908,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":6156,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":6950,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6688,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6804,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5539,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":5763,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6326,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":6607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":6864,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_array_uint256_dyn":{"entryPoint":6529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5700,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7283,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8563,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8227,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7683,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7136,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7540,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7991,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7609,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7468,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":5881,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7449,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":8202,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8126,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8179,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8160,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":7729,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":7799,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5664,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7078,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":5836,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":7258,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7236,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7214,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5814,"id":null,"parameterSlots":0,"returnSlots":0},"return_data_selector":{"entryPoint":8325,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":8353,"id":null,"parameterSlots":0,"returnSlots":1},"validator_revert_bytes4":{"entryPoint":5581,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24815:12","statements":[{"nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:12","statements":[{"nodeType":"YulAssignment","src":"73:29:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:12"},"nodeType":"YulFunctionCall","src":"82:20:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:12"}]},{"body":{"nodeType":"YulBlock","src":"165:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:12"},"nodeType":"YulFunctionCall","src":"167:12:12"},"nodeType":"YulExpressionStatement","src":"167:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:12"},"nodeType":"YulFunctionCall","src":"146:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:12"},"nodeType":"YulFunctionCall","src":"142:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:12"},"nodeType":"YulFunctionCall","src":"131:31:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:12"},"nodeType":"YulFunctionCall","src":"121:42:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:12"},"nodeType":"YulFunctionCall","src":"114:50:12"},"nodeType":"YulIf","src":"111:70:12"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:12","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:12","type":""}],"src":"14:173:12"},{"body":{"nodeType":"YulBlock","src":"279:167:12","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:12"},"nodeType":"YulFunctionCall","src":"327:12:12"},"nodeType":"YulExpressionStatement","src":"327:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:12"},"nodeType":"YulFunctionCall","src":"296:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:12"},"nodeType":"YulFunctionCall","src":"292:32:12"},"nodeType":"YulIf","src":"289:52:12"},{"nodeType":"YulAssignment","src":"350:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:12"},"nodeType":"YulFunctionCall","src":"360:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:12"}]},{"nodeType":"YulAssignment","src":"398:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:12"},"nodeType":"YulFunctionCall","src":"421:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:12"},"nodeType":"YulFunctionCall","src":"408:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:12","type":""}],"src":"192:254:12"},{"body":{"nodeType":"YulBlock","src":"552:76:12","statements":[{"nodeType":"YulAssignment","src":"562:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:12"},"nodeType":"YulFunctionCall","src":"570:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"615:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:12"},"nodeType":"YulFunctionCall","src":"597:25:12"},"nodeType":"YulExpressionStatement","src":"597:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:12","type":""}],"src":"451:177:12"},{"body":{"nodeType":"YulBlock","src":"677:87:12","statements":[{"body":{"nodeType":"YulBlock","src":"742:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"751:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"754:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"744:6:12"},"nodeType":"YulFunctionCall","src":"744:12:12"},"nodeType":"YulExpressionStatement","src":"744:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"700:5:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"711:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"722:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"727:10:12","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"718:3:12"},"nodeType":"YulFunctionCall","src":"718:20:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"707:3:12"},"nodeType":"YulFunctionCall","src":"707:32:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"697:2:12"},"nodeType":"YulFunctionCall","src":"697:43:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"690:6:12"},"nodeType":"YulFunctionCall","src":"690:51:12"},"nodeType":"YulIf","src":"687:71:12"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"666:5:12","type":""}],"src":"633:131:12"},{"body":{"nodeType":"YulBlock","src":"838:176:12","statements":[{"body":{"nodeType":"YulBlock","src":"884:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"893:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"896:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"886:6:12"},"nodeType":"YulFunctionCall","src":"886:12:12"},"nodeType":"YulExpressionStatement","src":"886:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"859:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"855:3:12"},"nodeType":"YulFunctionCall","src":"855:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"880:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"851:3:12"},"nodeType":"YulFunctionCall","src":"851:32:12"},"nodeType":"YulIf","src":"848:52:12"},{"nodeType":"YulVariableDeclaration","src":"909:36:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"935:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"922:12:12"},"nodeType":"YulFunctionCall","src":"922:23:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"913:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:12"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"954:23:12"},"nodeType":"YulFunctionCall","src":"954:30:12"},"nodeType":"YulExpressionStatement","src":"954:30:12"},{"nodeType":"YulAssignment","src":"993:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"1003:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"993:6:12"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"804:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"815:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"827:6:12","type":""}],"src":"769:245:12"},{"body":{"nodeType":"YulBlock","src":"1114:92:12","statements":[{"nodeType":"YulAssignment","src":"1124:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1136:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"1147:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1132:3:12"},"nodeType":"YulFunctionCall","src":"1132:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1124:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:12"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1184:6:12"},"nodeType":"YulFunctionCall","src":"1184:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:12"},"nodeType":"YulFunctionCall","src":"1177:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:12"},"nodeType":"YulFunctionCall","src":"1159:41:12"},"nodeType":"YulExpressionStatement","src":"1159:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1083:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1094:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1105:4:12","type":""}],"src":"1019:187:12"},{"body":{"nodeType":"YulBlock","src":"1281:110:12","statements":[{"body":{"nodeType":"YulBlock","src":"1327:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1336:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1339:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1329:6:12"},"nodeType":"YulFunctionCall","src":"1329:12:12"},"nodeType":"YulExpressionStatement","src":"1329:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"1311:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1298:3:12"},"nodeType":"YulFunctionCall","src":"1298:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"1323:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1294:3:12"},"nodeType":"YulFunctionCall","src":"1294:32:12"},"nodeType":"YulIf","src":"1291:52:12"},{"nodeType":"YulAssignment","src":"1352:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1375:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1362:12:12"},"nodeType":"YulFunctionCall","src":"1362:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1352:6:12"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1247:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1258:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1270:6:12","type":""}],"src":"1211:180:12"},{"body":{"nodeType":"YulBlock","src":"1462:184:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1472:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"1481:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1476:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"1541:63:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1566:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"1571:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1562:3:12"},"nodeType":"YulFunctionCall","src":"1562:11:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1585:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"1590:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1581:3:12"},"nodeType":"YulFunctionCall","src":"1581:11:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1575:5:12"},"nodeType":"YulFunctionCall","src":"1575:18:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1555:6:12"},"nodeType":"YulFunctionCall","src":"1555:39:12"},"nodeType":"YulExpressionStatement","src":"1555:39:12"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1502:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"1505:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1499:2:12"},"nodeType":"YulFunctionCall","src":"1499:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1513:19:12","statements":[{"nodeType":"YulAssignment","src":"1515:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1524:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"1527:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1520:3:12"},"nodeType":"YulFunctionCall","src":"1520:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1515:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"1495:3:12","statements":[]},"src":"1491:113:12"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1624:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"1629:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1620:3:12"},"nodeType":"YulFunctionCall","src":"1620:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"1638:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1613:6:12"},"nodeType":"YulFunctionCall","src":"1613:27:12"},"nodeType":"YulExpressionStatement","src":"1613:27:12"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1440:3:12","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1445:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"1450:6:12","type":""}],"src":"1396:250:12"},{"body":{"nodeType":"YulBlock","src":"1701:221:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1711:26:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1731:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1725:5:12"},"nodeType":"YulFunctionCall","src":"1725:12:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1715:6:12","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1753:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"1758:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1746:6:12"},"nodeType":"YulFunctionCall","src":"1746:19:12"},"nodeType":"YulExpressionStatement","src":"1746:19:12"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1813:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"1820:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:12"},"nodeType":"YulFunctionCall","src":"1809:16:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1831:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"1836:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:12"},"nodeType":"YulFunctionCall","src":"1827:14:12"},{"name":"length","nodeType":"YulIdentifier","src":"1843:6:12"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1774:34:12"},"nodeType":"YulFunctionCall","src":"1774:76:12"},"nodeType":"YulExpressionStatement","src":"1774:76:12"},{"nodeType":"YulAssignment","src":"1859:57:12","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1874:3:12"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1887:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"1895:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1883:3:12"},"nodeType":"YulFunctionCall","src":"1883:15:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1904:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1900:3:12"},"nodeType":"YulFunctionCall","src":"1900:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1879:3:12"},"nodeType":"YulFunctionCall","src":"1879:29:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1870:3:12"},"nodeType":"YulFunctionCall","src":"1870:39:12"},{"kind":"number","nodeType":"YulLiteral","src":"1911:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:12"},"nodeType":"YulFunctionCall","src":"1866:50:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1859:3:12"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1678:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1685:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1693:3:12","type":""}],"src":"1651:271:12"},{"body":{"nodeType":"YulBlock","src":"2048:99:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2065:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2076:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2058:6:12"},"nodeType":"YulFunctionCall","src":"2058:21:12"},"nodeType":"YulExpressionStatement","src":"2058:21:12"},{"nodeType":"YulAssignment","src":"2088:53:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2114:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2126:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2137:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:12"},"nodeType":"YulFunctionCall","src":"2122:18:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2096:17:12"},"nodeType":"YulFunctionCall","src":"2096:45:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2088:4:12"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2017:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2028:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2039:4:12","type":""}],"src":"1927:220:12"},{"body":{"nodeType":"YulBlock","src":"2256:218:12","statements":[{"body":{"nodeType":"YulBlock","src":"2302:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2311:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2314:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2304:6:12"},"nodeType":"YulFunctionCall","src":"2304:12:12"},"nodeType":"YulExpressionStatement","src":"2304:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2277:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"2286:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2273:3:12"},"nodeType":"YulFunctionCall","src":"2273:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2298:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2269:3:12"},"nodeType":"YulFunctionCall","src":"2269:32:12"},"nodeType":"YulIf","src":"2266:52:12"},{"nodeType":"YulAssignment","src":"2327:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2356:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2337:18:12"},"nodeType":"YulFunctionCall","src":"2337:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2327:6:12"}]},{"nodeType":"YulAssignment","src":"2375:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2402:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2413:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2398:3:12"},"nodeType":"YulFunctionCall","src":"2398:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2385:12:12"},"nodeType":"YulFunctionCall","src":"2385:32:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2375:6:12"}]},{"nodeType":"YulAssignment","src":"2426:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2453:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2464:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2449:3:12"},"nodeType":"YulFunctionCall","src":"2449:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2436:12:12"},"nodeType":"YulFunctionCall","src":"2436:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2426:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2206:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2217:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2229:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2237:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2245:6:12","type":""}],"src":"2152:322:12"},{"body":{"nodeType":"YulBlock","src":"2511:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2528:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2535:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2540:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2531:3:12"},"nodeType":"YulFunctionCall","src":"2531:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2521:6:12"},"nodeType":"YulFunctionCall","src":"2521:31:12"},"nodeType":"YulExpressionStatement","src":"2521:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2568:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2571:4:12","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2561:6:12"},"nodeType":"YulFunctionCall","src":"2561:15:12"},"nodeType":"YulExpressionStatement","src":"2561:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2592:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2595:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2585:6:12"},"nodeType":"YulFunctionCall","src":"2585:15:12"},"nodeType":"YulExpressionStatement","src":"2585:15:12"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2479:127:12"},{"body":{"nodeType":"YulBlock","src":"2658:202:12","statements":[{"nodeType":"YulVariableDeclaration","src":"2668:58:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2690:6:12"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2706:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2702:3:12"},"nodeType":"YulFunctionCall","src":"2702:13:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2721:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2717:3:12"},"nodeType":"YulFunctionCall","src":"2717:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2698:3:12"},"nodeType":"YulFunctionCall","src":"2698:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2686:3:12"},"nodeType":"YulFunctionCall","src":"2686:40:12"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2672:10:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"2801:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2803:16:12"},"nodeType":"YulFunctionCall","src":"2803:18:12"},"nodeType":"YulExpressionStatement","src":"2803:18:12"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2744:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"2756:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2741:2:12"},"nodeType":"YulFunctionCall","src":"2741:34:12"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2780:10:12"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2792:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2777:2:12"},"nodeType":"YulFunctionCall","src":"2777:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:12"},"nodeType":"YulFunctionCall","src":"2738:62:12"},"nodeType":"YulIf","src":"2735:88:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2839:2:12","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2843:10:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2832:6:12"},"nodeType":"YulFunctionCall","src":"2832:22:12"},"nodeType":"YulExpressionStatement","src":"2832:22:12"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2640:6:12","type":""},{"name":"size","nodeType":"YulTypedName","src":"2648:4:12","type":""}],"src":"2611:249:12"},{"body":{"nodeType":"YulBlock","src":"2934:114:12","statements":[{"body":{"nodeType":"YulBlock","src":"2978:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2980:16:12"},"nodeType":"YulFunctionCall","src":"2980:18:12"},"nodeType":"YulExpressionStatement","src":"2980:18:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2950:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"2958:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2947:2:12"},"nodeType":"YulFunctionCall","src":"2947:30:12"},"nodeType":"YulIf","src":"2944:56:12"},{"nodeType":"YulAssignment","src":"3009:33:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3025:1:12","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3028:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3021:3:12"},"nodeType":"YulFunctionCall","src":"3021:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"3037:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3017:3:12"},"nodeType":"YulFunctionCall","src":"3017:25:12"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3009:4:12"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2914:6:12","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2925:4:12","type":""}],"src":"2865:183:12"},{"body":{"nodeType":"YulBlock","src":"3117:660:12","statements":[{"body":{"nodeType":"YulBlock","src":"3166:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3175:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3178:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3168:6:12"},"nodeType":"YulFunctionCall","src":"3168:12:12"},"nodeType":"YulExpressionStatement","src":"3168:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3145:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3153:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3141:3:12"},"nodeType":"YulFunctionCall","src":"3141:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"3160:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3137:3:12"},"nodeType":"YulFunctionCall","src":"3137:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:12"},"nodeType":"YulFunctionCall","src":"3130:35:12"},"nodeType":"YulIf","src":"3127:55:12"},{"nodeType":"YulVariableDeclaration","src":"3191:30:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3214:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3201:12:12"},"nodeType":"YulFunctionCall","src":"3201:20:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3195:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3230:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"3240:4:12","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3234:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3253:53:12","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3303:2:12"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"3263:39:12"},"nodeType":"YulFunctionCall","src":"3263:43:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3257:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3315:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3335:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3329:5:12"},"nodeType":"YulFunctionCall","src":"3329:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3319:6:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3367:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"3375:2:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3347:19:12"},"nodeType":"YulFunctionCall","src":"3347:31:12"},"nodeType":"YulExpressionStatement","src":"3347:31:12"},{"nodeType":"YulVariableDeclaration","src":"3387:17:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3398:6:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3391:3:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3420:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"3428:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3413:6:12"},"nodeType":"YulFunctionCall","src":"3413:18:12"},"nodeType":"YulExpressionStatement","src":"3413:18:12"},{"nodeType":"YulAssignment","src":"3440:22:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3451:6:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3459:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3447:3:12"},"nodeType":"YulFunctionCall","src":"3447:15:12"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3440:3:12"}]},{"nodeType":"YulVariableDeclaration","src":"3471:46:12","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3493:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3505:1:12","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3508:2:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3501:3:12"},"nodeType":"YulFunctionCall","src":"3501:10:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3489:3:12"},"nodeType":"YulFunctionCall","src":"3489:23:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3514:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3485:3:12"},"nodeType":"YulFunctionCall","src":"3485:32:12"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3475:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3545:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3554:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3547:6:12"},"nodeType":"YulFunctionCall","src":"3547:12:12"},"nodeType":"YulExpressionStatement","src":"3547:12:12"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3532:6:12"},{"name":"end","nodeType":"YulIdentifier","src":"3540:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3529:2:12"},"nodeType":"YulFunctionCall","src":"3529:15:12"},"nodeType":"YulIf","src":"3526:35:12"},{"nodeType":"YulVariableDeclaration","src":"3570:26:12","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3585:6:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3593:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3581:3:12"},"nodeType":"YulFunctionCall","src":"3581:15:12"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3574:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"3661:86:12","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3682:3:12"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3700:3:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3687:12:12"},"nodeType":"YulFunctionCall","src":"3687:17:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3675:6:12"},"nodeType":"YulFunctionCall","src":"3675:30:12"},"nodeType":"YulExpressionStatement","src":"3675:30:12"},{"nodeType":"YulAssignment","src":"3718:19:12","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3729:3:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3734:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3725:3:12"},"nodeType":"YulFunctionCall","src":"3725:12:12"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3718:3:12"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3616:3:12"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3621:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3613:2:12"},"nodeType":"YulFunctionCall","src":"3613:15:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3629:23:12","statements":[{"nodeType":"YulAssignment","src":"3631:19:12","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3642:3:12"},{"name":"_2","nodeType":"YulIdentifier","src":"3647:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3638:3:12"},"nodeType":"YulFunctionCall","src":"3638:12:12"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3631:3:12"}]}]},"pre":{"nodeType":"YulBlock","src":"3609:3:12","statements":[]},"src":"3605:142:12"},{"nodeType":"YulAssignment","src":"3756:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3765:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3756:5:12"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3091:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"3099:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3107:5:12","type":""}],"src":"3053:724:12"},{"body":{"nodeType":"YulBlock","src":"3856:394:12","statements":[{"body":{"nodeType":"YulBlock","src":"3900:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3902:16:12"},"nodeType":"YulFunctionCall","src":"3902:18:12"},"nodeType":"YulExpressionStatement","src":"3902:18:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3872:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"3880:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3869:2:12"},"nodeType":"YulFunctionCall","src":"3869:30:12"},"nodeType":"YulIf","src":"3866:56:12"},{"nodeType":"YulVariableDeclaration","src":"3931:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3951:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3945:5:12"},"nodeType":"YulFunctionCall","src":"3945:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3935:6:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3983:6:12"},{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4003:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4011:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:12"},"nodeType":"YulFunctionCall","src":"3999:15:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4020:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4016:3:12"},"nodeType":"YulFunctionCall","src":"4016:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3995:3:12"},"nodeType":"YulFunctionCall","src":"3995:29:12"},{"kind":"number","nodeType":"YulLiteral","src":"4026:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3991:3:12"},"nodeType":"YulFunctionCall","src":"3991:40:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3963:19:12"},"nodeType":"YulFunctionCall","src":"3963:69:12"},"nodeType":"YulExpressionStatement","src":"3963:69:12"},{"nodeType":"YulAssignment","src":"4041:15:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4050:6:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4041:5:12"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4072:6:12"},{"name":"length","nodeType":"YulIdentifier","src":"4080:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4065:6:12"},"nodeType":"YulFunctionCall","src":"4065:22:12"},"nodeType":"YulExpressionStatement","src":"4065:22:12"},{"body":{"nodeType":"YulBlock","src":"4125:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4134:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4137:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4127:6:12"},"nodeType":"YulFunctionCall","src":"4127:12:12"},"nodeType":"YulExpressionStatement","src":"4127:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4106:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4111:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4102:3:12"},"nodeType":"YulFunctionCall","src":"4102:16:12"},{"name":"end","nodeType":"YulIdentifier","src":"4120:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4099:2:12"},"nodeType":"YulFunctionCall","src":"4099:25:12"},"nodeType":"YulIf","src":"4096:45:12"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4167:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4175:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4163:3:12"},"nodeType":"YulFunctionCall","src":"4163:17:12"},{"name":"src","nodeType":"YulIdentifier","src":"4182:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"4187:6:12"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4150:12:12"},"nodeType":"YulFunctionCall","src":"4150:44:12"},"nodeType":"YulExpressionStatement","src":"4150:44:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4218:6:12"},{"name":"length","nodeType":"YulIdentifier","src":"4226:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4214:3:12"},"nodeType":"YulFunctionCall","src":"4214:19:12"},{"kind":"number","nodeType":"YulLiteral","src":"4235:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:12"},"nodeType":"YulFunctionCall","src":"4210:30:12"},{"kind":"number","nodeType":"YulLiteral","src":"4242:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4203:6:12"},"nodeType":"YulFunctionCall","src":"4203:41:12"},"nodeType":"YulExpressionStatement","src":"4203:41:12"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3825:3:12","type":""},{"name":"length","nodeType":"YulTypedName","src":"3830:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"3838:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3846:5:12","type":""}],"src":"3782:468:12"},{"body":{"nodeType":"YulBlock","src":"4307:168:12","statements":[{"body":{"nodeType":"YulBlock","src":"4356:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4365:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4368:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4358:6:12"},"nodeType":"YulFunctionCall","src":"4358:12:12"},"nodeType":"YulExpressionStatement","src":"4358:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4335:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4343:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4331:3:12"},"nodeType":"YulFunctionCall","src":"4331:17:12"},{"name":"end","nodeType":"YulIdentifier","src":"4350:3:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4327:3:12"},"nodeType":"YulFunctionCall","src":"4327:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4320:6:12"},"nodeType":"YulFunctionCall","src":"4320:35:12"},"nodeType":"YulIf","src":"4317:55:12"},{"nodeType":"YulAssignment","src":"4381:88:12","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4428:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"4436:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4424:3:12"},"nodeType":"YulFunctionCall","src":"4424:17:12"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4456:6:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4443:12:12"},"nodeType":"YulFunctionCall","src":"4443:20:12"},{"name":"end","nodeType":"YulIdentifier","src":"4465:3:12"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"4390:33:12"},"nodeType":"YulFunctionCall","src":"4390:79:12"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4381:5:12"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4281:6:12","type":""},{"name":"end","nodeType":"YulTypedName","src":"4289:3:12","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4297:5:12","type":""}],"src":"4255:220:12"},{"body":{"nodeType":"YulBlock","src":"4677:746:12","statements":[{"body":{"nodeType":"YulBlock","src":"4724:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4733:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4736:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4726:6:12"},"nodeType":"YulFunctionCall","src":"4726:12:12"},"nodeType":"YulExpressionStatement","src":"4726:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4698:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"4707:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4694:3:12"},"nodeType":"YulFunctionCall","src":"4694:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"4719:3:12","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4690:3:12"},"nodeType":"YulFunctionCall","src":"4690:33:12"},"nodeType":"YulIf","src":"4687:53:12"},{"nodeType":"YulAssignment","src":"4749:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4778:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4759:18:12"},"nodeType":"YulFunctionCall","src":"4759:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4749:6:12"}]},{"nodeType":"YulAssignment","src":"4797:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4830:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4841:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4826:3:12"},"nodeType":"YulFunctionCall","src":"4826:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4807:18:12"},"nodeType":"YulFunctionCall","src":"4807:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4797:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"4854:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4885:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4896:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4881:3:12"},"nodeType":"YulFunctionCall","src":"4881:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4868:12:12"},"nodeType":"YulFunctionCall","src":"4868:32:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4858:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4909:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"4919:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4913:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"4964:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4973:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4976:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4966:6:12"},"nodeType":"YulFunctionCall","src":"4966:12:12"},"nodeType":"YulExpressionStatement","src":"4966:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4952:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"4960:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4949:2:12"},"nodeType":"YulFunctionCall","src":"4949:14:12"},"nodeType":"YulIf","src":"4946:34:12"},{"nodeType":"YulAssignment","src":"4989:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5032:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5043:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5028:3:12"},"nodeType":"YulFunctionCall","src":"5028:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5052:7:12"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4999:28:12"},"nodeType":"YulFunctionCall","src":"4999:61:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4989:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"5069:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5102:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5113:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5098:3:12"},"nodeType":"YulFunctionCall","src":"5098:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5085:12:12"},"nodeType":"YulFunctionCall","src":"5085:32:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5073:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5146:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5155:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5158:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5148:6:12"},"nodeType":"YulFunctionCall","src":"5148:12:12"},"nodeType":"YulExpressionStatement","src":"5148:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5132:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"5142:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5129:2:12"},"nodeType":"YulFunctionCall","src":"5129:16:12"},"nodeType":"YulIf","src":"5126:36:12"},{"nodeType":"YulAssignment","src":"5171:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5214:9:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5225:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5210:3:12"},"nodeType":"YulFunctionCall","src":"5210:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5236:7:12"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5181:28:12"},"nodeType":"YulFunctionCall","src":"5181:63:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5171:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"5253:49:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5286:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5297:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5282:3:12"},"nodeType":"YulFunctionCall","src":"5282:19:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5269:12:12"},"nodeType":"YulFunctionCall","src":"5269:33:12"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"5257:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5331:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5340:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5343:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5333:6:12"},"nodeType":"YulFunctionCall","src":"5333:12:12"},"nodeType":"YulExpressionStatement","src":"5333:12:12"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"5317:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"5327:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5314:2:12"},"nodeType":"YulFunctionCall","src":"5314:16:12"},"nodeType":"YulIf","src":"5311:36:12"},{"nodeType":"YulAssignment","src":"5356:61:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5387:9:12"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5398:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5383:3:12"},"nodeType":"YulFunctionCall","src":"5383:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5409:7:12"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5366:16:12"},"nodeType":"YulFunctionCall","src":"5366:51:12"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5356:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4611:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4622:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4634:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4642:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4650:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4658:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4666:6:12","type":""}],"src":"4480:943:12"},{"body":{"nodeType":"YulBlock","src":"5565:1071:12","statements":[{"body":{"nodeType":"YulBlock","src":"5611:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5620:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5623:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5613:6:12"},"nodeType":"YulFunctionCall","src":"5613:12:12"},"nodeType":"YulExpressionStatement","src":"5613:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5586:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"5595:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5582:3:12"},"nodeType":"YulFunctionCall","src":"5582:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"5607:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5578:3:12"},"nodeType":"YulFunctionCall","src":"5578:32:12"},"nodeType":"YulIf","src":"5575:52:12"},{"nodeType":"YulVariableDeclaration","src":"5636:37:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5663:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5650:12:12"},"nodeType":"YulFunctionCall","src":"5650:23:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5640:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5682:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5692:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5686:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5737:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5746:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5749:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5739:6:12"},"nodeType":"YulFunctionCall","src":"5739:12:12"},"nodeType":"YulExpressionStatement","src":"5739:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5725:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"5733:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5722:2:12"},"nodeType":"YulFunctionCall","src":"5722:14:12"},"nodeType":"YulIf","src":"5719:34:12"},{"nodeType":"YulVariableDeclaration","src":"5762:32:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5776:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"5787:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5772:3:12"},"nodeType":"YulFunctionCall","src":"5772:22:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5766:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"5842:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5851:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5854:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5844:6:12"},"nodeType":"YulFunctionCall","src":"5844:12:12"},"nodeType":"YulExpressionStatement","src":"5844:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5821:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"5825:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5817:3:12"},"nodeType":"YulFunctionCall","src":"5817:13:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5832:7:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5813:3:12"},"nodeType":"YulFunctionCall","src":"5813:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5806:6:12"},"nodeType":"YulFunctionCall","src":"5806:35:12"},"nodeType":"YulIf","src":"5803:55:12"},{"nodeType":"YulVariableDeclaration","src":"5867:26:12","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5890:2:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5877:12:12"},"nodeType":"YulFunctionCall","src":"5877:16:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5871:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5902:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"5912:4:12","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5906:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5925:53:12","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5975:2:12"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"5935:39:12"},"nodeType":"YulFunctionCall","src":"5935:43:12"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"5929:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5987:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6007:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6001:5:12"},"nodeType":"YulFunctionCall","src":"6001:9:12"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5991:6:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6039:6:12"},{"name":"_5","nodeType":"YulIdentifier","src":"6047:2:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6019:19:12"},"nodeType":"YulFunctionCall","src":"6019:31:12"},"nodeType":"YulExpressionStatement","src":"6019:31:12"},{"nodeType":"YulVariableDeclaration","src":"6059:17:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"6070:6:12"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6063:3:12","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6092:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"6100:2:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6085:6:12"},"nodeType":"YulFunctionCall","src":"6085:18:12"},"nodeType":"YulExpressionStatement","src":"6085:18:12"},{"nodeType":"YulAssignment","src":"6112:22:12","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6123:6:12"},{"name":"_4","nodeType":"YulIdentifier","src":"6131:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6119:3:12"},"nodeType":"YulFunctionCall","src":"6119:15:12"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6112:3:12"}]},{"nodeType":"YulVariableDeclaration","src":"6143:42:12","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6165:2:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6173:1:12","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"6176:2:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6169:3:12"},"nodeType":"YulFunctionCall","src":"6169:10:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6161:3:12"},"nodeType":"YulFunctionCall","src":"6161:19:12"},{"name":"_4","nodeType":"YulIdentifier","src":"6182:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6157:3:12"},"nodeType":"YulFunctionCall","src":"6157:28:12"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6147:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"6217:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6226:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6229:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6219:6:12"},"nodeType":"YulFunctionCall","src":"6219:12:12"},"nodeType":"YulExpressionStatement","src":"6219:12:12"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6200:6:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6208:7:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6197:2:12"},"nodeType":"YulFunctionCall","src":"6197:19:12"},"nodeType":"YulIf","src":"6194:39:12"},{"nodeType":"YulVariableDeclaration","src":"6242:22:12","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6257:2:12"},{"name":"_4","nodeType":"YulIdentifier","src":"6261:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6253:3:12"},"nodeType":"YulFunctionCall","src":"6253:11:12"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6246:3:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"6329:92:12","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6350:3:12"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6374:3:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6355:18:12"},"nodeType":"YulFunctionCall","src":"6355:23:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6343:6:12"},"nodeType":"YulFunctionCall","src":"6343:36:12"},"nodeType":"YulExpressionStatement","src":"6343:36:12"},{"nodeType":"YulAssignment","src":"6392:19:12","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6403:3:12"},{"name":"_4","nodeType":"YulIdentifier","src":"6408:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6399:3:12"},"nodeType":"YulFunctionCall","src":"6399:12:12"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6392:3:12"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6284:3:12"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6289:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6281:2:12"},"nodeType":"YulFunctionCall","src":"6281:15:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6297:23:12","statements":[{"nodeType":"YulAssignment","src":"6299:19:12","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6310:3:12"},{"name":"_4","nodeType":"YulIdentifier","src":"6315:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6306:3:12"},"nodeType":"YulFunctionCall","src":"6306:12:12"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6299:3:12"}]}]},"pre":{"nodeType":"YulBlock","src":"6277:3:12","statements":[]},"src":"6273:148:12"},{"nodeType":"YulAssignment","src":"6430:16:12","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"6440:6:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6430:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"6455:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6488:9:12"},{"name":"_4","nodeType":"YulIdentifier","src":"6499:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6484:3:12"},"nodeType":"YulFunctionCall","src":"6484:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6471:12:12"},"nodeType":"YulFunctionCall","src":"6471:32:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6459:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"6532:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6541:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6544:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6534:6:12"},"nodeType":"YulFunctionCall","src":"6534:12:12"},"nodeType":"YulExpressionStatement","src":"6534:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6518:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6528:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6515:2:12"},"nodeType":"YulFunctionCall","src":"6515:16:12"},"nodeType":"YulIf","src":"6512:36:12"},{"nodeType":"YulAssignment","src":"6557:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6600:9:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6611:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6596:3:12"},"nodeType":"YulFunctionCall","src":"6596:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6622:7:12"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"6567:28:12"},"nodeType":"YulFunctionCall","src":"6567:63:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6557:6:12"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5523:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5534:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5546:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5554:6:12","type":""}],"src":"5428:1208:12"},{"body":{"nodeType":"YulBlock","src":"6702:374:12","statements":[{"nodeType":"YulVariableDeclaration","src":"6712:26:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6732:5:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6726:5:12"},"nodeType":"YulFunctionCall","src":"6726:12:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6716:6:12","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6754:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"6759:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6747:6:12"},"nodeType":"YulFunctionCall","src":"6747:19:12"},"nodeType":"YulExpressionStatement","src":"6747:19:12"},{"nodeType":"YulVariableDeclaration","src":"6775:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6785:4:12","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6779:2:12","type":""}]},{"nodeType":"YulAssignment","src":"6798:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6809:3:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6814:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:12"},"nodeType":"YulFunctionCall","src":"6805:12:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6798:3:12"}]},{"nodeType":"YulVariableDeclaration","src":"6826:28:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6844:5:12"},{"name":"_1","nodeType":"YulIdentifier","src":"6851:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6840:3:12"},"nodeType":"YulFunctionCall","src":"6840:14:12"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6830:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6863:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"6872:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6867:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"6931:120:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6952:3:12"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6963:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6957:5:12"},"nodeType":"YulFunctionCall","src":"6957:13:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6945:6:12"},"nodeType":"YulFunctionCall","src":"6945:26:12"},"nodeType":"YulExpressionStatement","src":"6945:26:12"},{"nodeType":"YulAssignment","src":"6984:19:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6995:3:12"},{"name":"_1","nodeType":"YulIdentifier","src":"7000:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6991:3:12"},"nodeType":"YulFunctionCall","src":"6991:12:12"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6984:3:12"}]},{"nodeType":"YulAssignment","src":"7016:25:12","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7030:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"7038:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7026:3:12"},"nodeType":"YulFunctionCall","src":"7026:15:12"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7016:6:12"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6893:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"6896:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6890:2:12"},"nodeType":"YulFunctionCall","src":"6890:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6904:18:12","statements":[{"nodeType":"YulAssignment","src":"6906:14:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6915:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"6918:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6911:3:12"},"nodeType":"YulFunctionCall","src":"6911:9:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6906:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"6886:3:12","statements":[]},"src":"6882:169:12"},{"nodeType":"YulAssignment","src":"7060:10:12","value":{"name":"pos","nodeType":"YulIdentifier","src":"7067:3:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7060:3:12"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6679:5:12","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6686:3:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6694:3:12","type":""}],"src":"6641:435:12"},{"body":{"nodeType":"YulBlock","src":"7232:110:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7249:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7260:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7242:6:12"},"nodeType":"YulFunctionCall","src":"7242:21:12"},"nodeType":"YulExpressionStatement","src":"7242:21:12"},{"nodeType":"YulAssignment","src":"7272:64:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7309:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7321:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"7332:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7317:3:12"},"nodeType":"YulFunctionCall","src":"7317:18:12"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"7280:28:12"},"nodeType":"YulFunctionCall","src":"7280:56:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7272:4:12"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7201:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7212:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7223:4:12","type":""}],"src":"7081:261:12"},{"body":{"nodeType":"YulBlock","src":"7427:370:12","statements":[{"body":{"nodeType":"YulBlock","src":"7473:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7482:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7485:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7475:6:12"},"nodeType":"YulFunctionCall","src":"7475:12:12"},"nodeType":"YulExpressionStatement","src":"7475:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7448:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"7457:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7444:3:12"},"nodeType":"YulFunctionCall","src":"7444:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"7469:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7440:3:12"},"nodeType":"YulFunctionCall","src":"7440:32:12"},"nodeType":"YulIf","src":"7437:52:12"},{"nodeType":"YulVariableDeclaration","src":"7498:37:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7525:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7512:12:12"},"nodeType":"YulFunctionCall","src":"7512:23:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7502:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"7578:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7587:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7590:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7580:6:12"},"nodeType":"YulFunctionCall","src":"7580:12:12"},"nodeType":"YulExpressionStatement","src":"7580:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7550:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"7558:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7547:2:12"},"nodeType":"YulFunctionCall","src":"7547:30:12"},"nodeType":"YulIf","src":"7544:50:12"},{"nodeType":"YulVariableDeclaration","src":"7603:32:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7617:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"7628:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7613:3:12"},"nodeType":"YulFunctionCall","src":"7613:22:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7607:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"7683:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7692:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7695:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7685:6:12"},"nodeType":"YulFunctionCall","src":"7685:12:12"},"nodeType":"YulExpressionStatement","src":"7685:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7662:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"7666:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7658:3:12"},"nodeType":"YulFunctionCall","src":"7658:13:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7673:7:12"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7654:3:12"},"nodeType":"YulFunctionCall","src":"7654:27:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7647:6:12"},"nodeType":"YulFunctionCall","src":"7647:35:12"},"nodeType":"YulIf","src":"7644:55:12"},{"nodeType":"YulAssignment","src":"7708:83:12","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7756:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"7760:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7752:3:12"},"nodeType":"YulFunctionCall","src":"7752:11:12"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7778:2:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7765:12:12"},"nodeType":"YulFunctionCall","src":"7765:16:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7783:7:12"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"7718:33:12"},"nodeType":"YulFunctionCall","src":"7718:73:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7708:6:12"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7393:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7404:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7416:6:12","type":""}],"src":"7347:450:12"},{"body":{"nodeType":"YulBlock","src":"7956:515:12","statements":[{"body":{"nodeType":"YulBlock","src":"8002:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8011:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8014:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8004:6:12"},"nodeType":"YulFunctionCall","src":"8004:12:12"},"nodeType":"YulExpressionStatement","src":"8004:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7977:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"7986:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7973:3:12"},"nodeType":"YulFunctionCall","src":"7973:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"7998:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7969:3:12"},"nodeType":"YulFunctionCall","src":"7969:32:12"},"nodeType":"YulIf","src":"7966:52:12"},{"nodeType":"YulAssignment","src":"8027:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8056:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8037:18:12"},"nodeType":"YulFunctionCall","src":"8037:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8027:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"8075:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8106:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8117:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8102:3:12"},"nodeType":"YulFunctionCall","src":"8102:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8089:12:12"},"nodeType":"YulFunctionCall","src":"8089:32:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8079:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8130:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"8140:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8134:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"8185:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8194:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8197:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8187:6:12"},"nodeType":"YulFunctionCall","src":"8187:12:12"},"nodeType":"YulExpressionStatement","src":"8187:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8173:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"8181:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8170:2:12"},"nodeType":"YulFunctionCall","src":"8170:14:12"},"nodeType":"YulIf","src":"8167:34:12"},{"nodeType":"YulAssignment","src":"8210:71:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8253:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"8264:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8249:3:12"},"nodeType":"YulFunctionCall","src":"8249:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8273:7:12"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"8220:28:12"},"nodeType":"YulFunctionCall","src":"8220:61:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8210:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"8290:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8323:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8334:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8319:3:12"},"nodeType":"YulFunctionCall","src":"8319:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8306:12:12"},"nodeType":"YulFunctionCall","src":"8306:32:12"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"8294:8:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"8367:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8376:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8379:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8369:6:12"},"nodeType":"YulFunctionCall","src":"8369:12:12"},"nodeType":"YulExpressionStatement","src":"8369:12:12"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"8353:8:12"},{"name":"_1","nodeType":"YulIdentifier","src":"8363:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8350:2:12"},"nodeType":"YulFunctionCall","src":"8350:16:12"},"nodeType":"YulIf","src":"8347:36:12"},{"nodeType":"YulAssignment","src":"8392:73:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8435:9:12"},{"name":"offset_1","nodeType":"YulIdentifier","src":"8446:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8431:3:12"},"nodeType":"YulFunctionCall","src":"8431:24:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8457:7:12"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"8402:28:12"},"nodeType":"YulFunctionCall","src":"8402:63:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8392:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7906:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7917:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7929:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7937:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7945:6:12","type":""}],"src":"7802:669:12"},{"body":{"nodeType":"YulBlock","src":"8577:102:12","statements":[{"nodeType":"YulAssignment","src":"8587:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8599:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8610:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8595:3:12"},"nodeType":"YulFunctionCall","src":"8595:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8587:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8629:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8644:6:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8660:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8665:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8656:3:12"},"nodeType":"YulFunctionCall","src":"8656:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"8669:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8652:3:12"},"nodeType":"YulFunctionCall","src":"8652:19:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8640:3:12"},"nodeType":"YulFunctionCall","src":"8640:32:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8622:6:12"},"nodeType":"YulFunctionCall","src":"8622:51:12"},"nodeType":"YulExpressionStatement","src":"8622:51:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8546:9:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8557:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8568:4:12","type":""}],"src":"8476:203:12"},{"body":{"nodeType":"YulBlock","src":"8768:263:12","statements":[{"body":{"nodeType":"YulBlock","src":"8814:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8823:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8826:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8816:6:12"},"nodeType":"YulFunctionCall","src":"8816:12:12"},"nodeType":"YulExpressionStatement","src":"8816:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8789:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"8798:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8785:3:12"},"nodeType":"YulFunctionCall","src":"8785:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"8810:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8781:3:12"},"nodeType":"YulFunctionCall","src":"8781:32:12"},"nodeType":"YulIf","src":"8778:52:12"},{"nodeType":"YulAssignment","src":"8839:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8868:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8849:18:12"},"nodeType":"YulFunctionCall","src":"8849:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8839:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"8887:45:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8917:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"8928:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8913:3:12"},"nodeType":"YulFunctionCall","src":"8913:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8900:12:12"},"nodeType":"YulFunctionCall","src":"8900:32:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8891:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"8985:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8994:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8997:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8987:6:12"},"nodeType":"YulFunctionCall","src":"8987:12:12"},"nodeType":"YulExpressionStatement","src":"8987:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8954:5:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8975:5:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8968:6:12"},"nodeType":"YulFunctionCall","src":"8968:13:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8961:6:12"},"nodeType":"YulFunctionCall","src":"8961:21:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8951:2:12"},"nodeType":"YulFunctionCall","src":"8951:32:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8944:6:12"},"nodeType":"YulFunctionCall","src":"8944:40:12"},"nodeType":"YulIf","src":"8941:60:12"},{"nodeType":"YulAssignment","src":"9010:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"9020:5:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9010:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8726:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8737:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8749:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8757:6:12","type":""}],"src":"8684:347:12"},{"body":{"nodeType":"YulBlock","src":"9123:167:12","statements":[{"body":{"nodeType":"YulBlock","src":"9169:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9178:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9181:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9171:6:12"},"nodeType":"YulFunctionCall","src":"9171:12:12"},"nodeType":"YulExpressionStatement","src":"9171:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9144:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"9153:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9140:3:12"},"nodeType":"YulFunctionCall","src":"9140:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"9165:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9136:3:12"},"nodeType":"YulFunctionCall","src":"9136:32:12"},"nodeType":"YulIf","src":"9133:52:12"},{"nodeType":"YulAssignment","src":"9194:33:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9217:9:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9204:12:12"},"nodeType":"YulFunctionCall","src":"9204:23:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9194:6:12"}]},{"nodeType":"YulAssignment","src":"9236:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9269:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9280:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9265:3:12"},"nodeType":"YulFunctionCall","src":"9265:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9246:18:12"},"nodeType":"YulFunctionCall","src":"9246:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9236:6:12"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9081:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9092:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9104:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9112:6:12","type":""}],"src":"9036:254:12"},{"body":{"nodeType":"YulBlock","src":"9382:173:12","statements":[{"body":{"nodeType":"YulBlock","src":"9428:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9437:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9440:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9430:6:12"},"nodeType":"YulFunctionCall","src":"9430:12:12"},"nodeType":"YulExpressionStatement","src":"9430:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9403:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"9412:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9399:3:12"},"nodeType":"YulFunctionCall","src":"9399:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"9424:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9395:3:12"},"nodeType":"YulFunctionCall","src":"9395:32:12"},"nodeType":"YulIf","src":"9392:52:12"},{"nodeType":"YulAssignment","src":"9453:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9482:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9463:18:12"},"nodeType":"YulFunctionCall","src":"9463:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9453:6:12"}]},{"nodeType":"YulAssignment","src":"9501:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9534:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9545:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9530:3:12"},"nodeType":"YulFunctionCall","src":"9530:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9511:18:12"},"nodeType":"YulFunctionCall","src":"9511:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9501:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9340:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9351:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9363:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9371:6:12","type":""}],"src":"9295:260:12"},{"body":{"nodeType":"YulBlock","src":"9707:459:12","statements":[{"body":{"nodeType":"YulBlock","src":"9754:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9763:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9766:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9756:6:12"},"nodeType":"YulFunctionCall","src":"9756:12:12"},"nodeType":"YulExpressionStatement","src":"9756:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9728:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9724:3:12"},"nodeType":"YulFunctionCall","src":"9724:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"9749:3:12","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9720:3:12"},"nodeType":"YulFunctionCall","src":"9720:33:12"},"nodeType":"YulIf","src":"9717:53:12"},{"nodeType":"YulAssignment","src":"9779:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9808:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9789:18:12"},"nodeType":"YulFunctionCall","src":"9789:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9779:6:12"}]},{"nodeType":"YulAssignment","src":"9827:48:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9860:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9871:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9856:3:12"},"nodeType":"YulFunctionCall","src":"9856:18:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9837:18:12"},"nodeType":"YulFunctionCall","src":"9837:38:12"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9827:6:12"}]},{"nodeType":"YulAssignment","src":"9884:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9911:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9922:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9907:3:12"},"nodeType":"YulFunctionCall","src":"9907:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9894:12:12"},"nodeType":"YulFunctionCall","src":"9894:32:12"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9884:6:12"}]},{"nodeType":"YulAssignment","src":"9935:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9962:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"9973:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9958:3:12"},"nodeType":"YulFunctionCall","src":"9958:18:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9945:12:12"},"nodeType":"YulFunctionCall","src":"9945:32:12"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9935:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"9986:47:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10017:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10028:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10013:3:12"},"nodeType":"YulFunctionCall","src":"10013:19:12"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10000:12:12"},"nodeType":"YulFunctionCall","src":"10000:33:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9990:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"10076:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10085:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10088:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10078:6:12"},"nodeType":"YulFunctionCall","src":"10078:12:12"},"nodeType":"YulExpressionStatement","src":"10078:12:12"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10048:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"10056:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10045:2:12"},"nodeType":"YulFunctionCall","src":"10045:30:12"},"nodeType":"YulIf","src":"10042:50:12"},{"nodeType":"YulAssignment","src":"10101:59:12","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10132:9:12"},{"name":"offset","nodeType":"YulIdentifier","src":"10143:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10128:3:12"},"nodeType":"YulFunctionCall","src":"10128:22:12"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10152:7:12"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"10111:16:12"},"nodeType":"YulFunctionCall","src":"10111:49:12"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10101:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9641:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9652:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9664:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9672:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9680:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9688:6:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9696:6:12","type":""}],"src":"9560:606:12"},{"body":{"nodeType":"YulBlock","src":"10241:116:12","statements":[{"body":{"nodeType":"YulBlock","src":"10287:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10296:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10299:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10289:6:12"},"nodeType":"YulFunctionCall","src":"10289:12:12"},"nodeType":"YulExpressionStatement","src":"10289:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10262:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"10271:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10258:3:12"},"nodeType":"YulFunctionCall","src":"10258:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"10283:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10254:3:12"},"nodeType":"YulFunctionCall","src":"10254:32:12"},"nodeType":"YulIf","src":"10251:52:12"},{"nodeType":"YulAssignment","src":"10312:39:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10341:9:12"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10322:18:12"},"nodeType":"YulFunctionCall","src":"10322:29:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10312:6:12"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10207:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10218:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10230:6:12","type":""}],"src":"10171:186:12"},{"body":{"nodeType":"YulBlock","src":"10536:232:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10553:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10564:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10546:6:12"},"nodeType":"YulFunctionCall","src":"10546:21:12"},"nodeType":"YulExpressionStatement","src":"10546:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10587:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10598:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10583:3:12"},"nodeType":"YulFunctionCall","src":"10583:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"10603:2:12","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10576:6:12"},"nodeType":"YulFunctionCall","src":"10576:30:12"},"nodeType":"YulExpressionStatement","src":"10576:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10626:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10637:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10622:3:12"},"nodeType":"YulFunctionCall","src":"10622:18:12"},{"hexValue":"455243313135353a2061646472657373207a65726f206973206e6f7420612076","kind":"string","nodeType":"YulLiteral","src":"10642:34:12","type":"","value":"ERC1155: address zero is not a v"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10615:6:12"},"nodeType":"YulFunctionCall","src":"10615:62:12"},"nodeType":"YulExpressionStatement","src":"10615:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10697:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10708:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10693:3:12"},"nodeType":"YulFunctionCall","src":"10693:18:12"},{"hexValue":"616c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10713:12:12","type":"","value":"alid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10686:6:12"},"nodeType":"YulFunctionCall","src":"10686:40:12"},"nodeType":"YulExpressionStatement","src":"10686:40:12"},{"nodeType":"YulAssignment","src":"10735:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10747:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"10758:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10743:3:12"},"nodeType":"YulFunctionCall","src":"10743:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10735:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10513:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10527:4:12","type":""}],"src":"10362:406:12"},{"body":{"nodeType":"YulBlock","src":"10828:325:12","statements":[{"nodeType":"YulAssignment","src":"10838:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10852:1:12","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"10855:4:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10848:3:12"},"nodeType":"YulFunctionCall","src":"10848:12:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10838:6:12"}]},{"nodeType":"YulVariableDeclaration","src":"10869:38:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10899:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"10905:1:12","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10895:3:12"},"nodeType":"YulFunctionCall","src":"10895:12:12"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10873:18:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"10946:31:12","statements":[{"nodeType":"YulAssignment","src":"10948:27:12","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10962:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"10970:4:12","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10958:3:12"},"nodeType":"YulFunctionCall","src":"10958:17:12"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10948:6:12"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10926:18:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10919:6:12"},"nodeType":"YulFunctionCall","src":"10919:26:12"},"nodeType":"YulIf","src":"10916:61:12"},{"body":{"nodeType":"YulBlock","src":"11036:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11057:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11064:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11069:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11060:3:12"},"nodeType":"YulFunctionCall","src":"11060:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11050:6:12"},"nodeType":"YulFunctionCall","src":"11050:31:12"},"nodeType":"YulExpressionStatement","src":"11050:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11101:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11104:4:12","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11094:6:12"},"nodeType":"YulFunctionCall","src":"11094:15:12"},"nodeType":"YulExpressionStatement","src":"11094:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11129:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11132:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11122:6:12"},"nodeType":"YulFunctionCall","src":"11122:15:12"},"nodeType":"YulExpressionStatement","src":"11122:15:12"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10992:18:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11015:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"11023:2:12","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11012:2:12"},"nodeType":"YulFunctionCall","src":"11012:14:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10989:2:12"},"nodeType":"YulFunctionCall","src":"10989:38:12"},"nodeType":"YulIf","src":"10986:161:12"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10808:4:12","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10817:6:12","type":""}],"src":"10773:380:12"},{"body":{"nodeType":"YulBlock","src":"11332:236:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11349:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11360:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11342:6:12"},"nodeType":"YulFunctionCall","src":"11342:21:12"},"nodeType":"YulExpressionStatement","src":"11342:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11383:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11394:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11379:3:12"},"nodeType":"YulFunctionCall","src":"11379:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"11399:2:12","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11372:6:12"},"nodeType":"YulFunctionCall","src":"11372:30:12"},"nodeType":"YulExpressionStatement","src":"11372:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11422:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11433:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11418:3:12"},"nodeType":"YulFunctionCall","src":"11418:18:12"},{"hexValue":"455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e","kind":"string","nodeType":"YulLiteral","src":"11438:34:12","type":"","value":"ERC1155: caller is not token own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11411:6:12"},"nodeType":"YulFunctionCall","src":"11411:62:12"},"nodeType":"YulExpressionStatement","src":"11411:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11493:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11504:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11489:3:12"},"nodeType":"YulFunctionCall","src":"11489:18:12"},{"hexValue":"6572206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"11509:16:12","type":"","value":"er or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11482:6:12"},"nodeType":"YulFunctionCall","src":"11482:44:12"},"nodeType":"YulExpressionStatement","src":"11482:44:12"},{"nodeType":"YulAssignment","src":"11535:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11547:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11558:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11543:3:12"},"nodeType":"YulFunctionCall","src":"11543:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11535:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11309:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11323:4:12","type":""}],"src":"11158:410:12"},{"body":{"nodeType":"YulBlock","src":"11747:231:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11764:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11775:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11757:6:12"},"nodeType":"YulFunctionCall","src":"11757:21:12"},"nodeType":"YulExpressionStatement","src":"11757:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11798:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11809:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11794:3:12"},"nodeType":"YulFunctionCall","src":"11794:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"11814:2:12","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11787:6:12"},"nodeType":"YulFunctionCall","src":"11787:30:12"},"nodeType":"YulExpressionStatement","src":"11787:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11837:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11848:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11833:3:12"},"nodeType":"YulFunctionCall","src":"11833:18:12"},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468","kind":"string","nodeType":"YulLiteral","src":"11853:34:12","type":"","value":"ERC1155: accounts and ids length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11826:6:12"},"nodeType":"YulFunctionCall","src":"11826:62:12"},"nodeType":"YulExpressionStatement","src":"11826:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11908:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11919:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11904:3:12"},"nodeType":"YulFunctionCall","src":"11904:18:12"},{"hexValue":"206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"11924:11:12","type":"","value":" mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11897:6:12"},"nodeType":"YulFunctionCall","src":"11897:39:12"},"nodeType":"YulExpressionStatement","src":"11897:39:12"},{"nodeType":"YulAssignment","src":"11945:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11957:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"11968:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11953:3:12"},"nodeType":"YulFunctionCall","src":"11953:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11945:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11724:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11738:4:12","type":""}],"src":"11573:405:12"},{"body":{"nodeType":"YulBlock","src":"12015:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12032:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12039:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12044:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12035:3:12"},"nodeType":"YulFunctionCall","src":"12035:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12025:6:12"},"nodeType":"YulFunctionCall","src":"12025:31:12"},"nodeType":"YulExpressionStatement","src":"12025:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12072:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12075:4:12","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12065:6:12"},"nodeType":"YulFunctionCall","src":"12065:15:12"},"nodeType":"YulExpressionStatement","src":"12065:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12096:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12099:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12089:6:12"},"nodeType":"YulFunctionCall","src":"12089:15:12"},"nodeType":"YulExpressionStatement","src":"12089:15:12"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"11983:127:12"},{"body":{"nodeType":"YulBlock","src":"12147:95:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12164:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12171:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12176:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12167:3:12"},"nodeType":"YulFunctionCall","src":"12167:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12157:6:12"},"nodeType":"YulFunctionCall","src":"12157:31:12"},"nodeType":"YulExpressionStatement","src":"12157:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12204:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12207:4:12","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12197:6:12"},"nodeType":"YulFunctionCall","src":"12197:15:12"},"nodeType":"YulExpressionStatement","src":"12197:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12228:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12231:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12221:6:12"},"nodeType":"YulFunctionCall","src":"12221:15:12"},"nodeType":"YulExpressionStatement","src":"12221:15:12"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12115:127:12"},{"body":{"nodeType":"YulBlock","src":"12294:88:12","statements":[{"body":{"nodeType":"YulBlock","src":"12325:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12327:16:12"},"nodeType":"YulFunctionCall","src":"12327:18:12"},"nodeType":"YulExpressionStatement","src":"12327:18:12"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12310:5:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12321:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12317:3:12"},"nodeType":"YulFunctionCall","src":"12317:6:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12307:2:12"},"nodeType":"YulFunctionCall","src":"12307:17:12"},"nodeType":"YulIf","src":"12304:43:12"},{"nodeType":"YulAssignment","src":"12356:20:12","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12367:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"12374:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12363:3:12"},"nodeType":"YulFunctionCall","src":"12363:13:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12356:3:12"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12276:5:12","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12286:3:12","type":""}],"src":"12247:135:12"},{"body":{"nodeType":"YulBlock","src":"12443:65:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12460:1:12","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"12463:3:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12453:6:12"},"nodeType":"YulFunctionCall","src":"12453:14:12"},"nodeType":"YulExpressionStatement","src":"12453:14:12"},{"nodeType":"YulAssignment","src":"12476:26:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12494:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12497:4:12","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12484:9:12"},"nodeType":"YulFunctionCall","src":"12484:18:12"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12476:4:12"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12426:3:12","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12434:4:12","type":""}],"src":"12387:121:12"},{"body":{"nodeType":"YulBlock","src":"12899:936:12","statements":[{"nodeType":"YulVariableDeclaration","src":"12909:12:12","value":{"kind":"number","nodeType":"YulLiteral","src":"12920:1:12","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"12913:3:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12930:30:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12953:6:12"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12947:5:12"},"nodeType":"YulFunctionCall","src":"12947:13:12"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"12934:9:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12969:50:12","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"13009:9:12"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12983:25:12"},"nodeType":"YulFunctionCall","src":"12983:36:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12973:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13028:11:12","value":{"kind":"number","nodeType":"YulLiteral","src":"13038:1:12","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13032:2:12","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"13089:126:12","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13110:3:12"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"13119:9:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13134:3:12","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13130:3:12"},"nodeType":"YulFunctionCall","src":"13130:8:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13115:3:12"},"nodeType":"YulFunctionCall","src":"13115:24:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13103:6:12"},"nodeType":"YulFunctionCall","src":"13103:37:12"},"nodeType":"YulExpressionStatement","src":"13103:37:12"},{"nodeType":"YulAssignment","src":"13153:52:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13164:3:12"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13173:6:12"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13195:6:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13188:6:12"},"nodeType":"YulFunctionCall","src":"13188:14:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13181:6:12"},"nodeType":"YulFunctionCall","src":"13181:22:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13169:3:12"},"nodeType":"YulFunctionCall","src":"13169:35:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13160:3:12"},"nodeType":"YulFunctionCall","src":"13160:45:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13153:3:12"}]}]},"nodeType":"YulCase","src":"13082:133:12","value":{"kind":"number","nodeType":"YulLiteral","src":"13087:1:12","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"13231:349:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13252:1:12","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"13255:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13245:6:12"},"nodeType":"YulFunctionCall","src":"13245:17:12"},"nodeType":"YulExpressionStatement","src":"13245:17:12"},{"nodeType":"YulVariableDeclaration","src":"13275:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"13285:4:12","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"13279:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13302:31:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13327:1:12","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"13330:2:12"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13317:9:12"},"nodeType":"YulFunctionCall","src":"13317:16:12"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"13306:7:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13346:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"13355:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13350:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"13423:111:12","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13452:3:12"},{"name":"i","nodeType":"YulIdentifier","src":"13457:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13448:3:12"},"nodeType":"YulFunctionCall","src":"13448:11:12"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"13467:7:12"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13461:5:12"},"nodeType":"YulFunctionCall","src":"13461:14:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13441:6:12"},"nodeType":"YulFunctionCall","src":"13441:35:12"},"nodeType":"YulExpressionStatement","src":"13441:35:12"},{"nodeType":"YulAssignment","src":"13493:27:12","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"13508:7:12"},{"name":"_1","nodeType":"YulIdentifier","src":"13517:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13504:3:12"},"nodeType":"YulFunctionCall","src":"13504:16:12"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"13493:7:12"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13380:1:12"},{"name":"length","nodeType":"YulIdentifier","src":"13383:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13377:2:12"},"nodeType":"YulFunctionCall","src":"13377:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13391:19:12","statements":[{"nodeType":"YulAssignment","src":"13393:15:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13402:1:12"},{"name":"_2","nodeType":"YulIdentifier","src":"13405:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13398:3:12"},"nodeType":"YulFunctionCall","src":"13398:10:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13393:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"13373:3:12","statements":[]},"src":"13369:165:12"},{"nodeType":"YulAssignment","src":"13547:23:12","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13558:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"13563:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13554:3:12"},"nodeType":"YulFunctionCall","src":"13554:16:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13547:3:12"}]}]},"nodeType":"YulCase","src":"13224:356:12","value":{"kind":"number","nodeType":"YulLiteral","src":"13229:1:12","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"13059:9:12"},{"name":"_1","nodeType":"YulIdentifier","src":"13070:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13055:3:12"},"nodeType":"YulFunctionCall","src":"13055:18:12"},"nodeType":"YulSwitch","src":"13048:532:12"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"13596:3:12"},{"hexValue":"2f","kind":"string","nodeType":"YulLiteral","src":"13601:3:12","type":"","value":"/"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13589:6:12"},"nodeType":"YulFunctionCall","src":"13589:16:12"},"nodeType":"YulExpressionStatement","src":"13589:16:12"},{"nodeType":"YulVariableDeclaration","src":"13614:29:12","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13636:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13630:5:12"},"nodeType":"YulFunctionCall","src":"13630:13:12"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"13618:8:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13691:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"13699:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13687:3:12"},"nodeType":"YulFunctionCall","src":"13687:17:12"},{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"13710:3:12"},{"name":"_1","nodeType":"YulIdentifier","src":"13715:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13706:3:12"},"nodeType":"YulFunctionCall","src":"13706:12:12"},{"name":"length_1","nodeType":"YulIdentifier","src":"13720:8:12"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13652:34:12"},"nodeType":"YulFunctionCall","src":"13652:77:12"},"nodeType":"YulExpressionStatement","src":"13652:77:12"},{"nodeType":"YulVariableDeclaration","src":"13738:28:12","value":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"13752:3:12"},{"name":"length_1","nodeType":"YulIdentifier","src":"13757:8:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13748:3:12"},"nodeType":"YulFunctionCall","src":"13748:18:12"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"13742:2:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"13786:2:12"},{"name":"_1","nodeType":"YulIdentifier","src":"13790:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13782:3:12"},"nodeType":"YulFunctionCall","src":"13782:11:12"},{"hexValue":"2e6a736f6e","kind":"string","nodeType":"YulLiteral","src":"13795:7:12","type":"","value":".json"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13775:6:12"},"nodeType":"YulFunctionCall","src":"13775:28:12"},"nodeType":"YulExpressionStatement","src":"13775:28:12"},{"nodeType":"YulAssignment","src":"13812:17:12","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"13823:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"13827:1:12","type":"","value":"6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13819:3:12"},"nodeType":"YulFunctionCall","src":"13819:10:12"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13812:3:12"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12867:3:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12872:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12880:6:12","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12891:3:12","type":""}],"src":"12513:1322:12"},{"body":{"nodeType":"YulBlock","src":"14014:228:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14031:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14042:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14024:6:12"},"nodeType":"YulFunctionCall","src":"14024:21:12"},"nodeType":"YulExpressionStatement","src":"14024:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14065:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14076:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14061:3:12"},"nodeType":"YulFunctionCall","src":"14061:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"14081:2:12","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14054:6:12"},"nodeType":"YulFunctionCall","src":"14054:30:12"},"nodeType":"YulExpressionStatement","src":"14054:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14104:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14115:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14100:3:12"},"nodeType":"YulFunctionCall","src":"14100:18:12"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"14120:34:12","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14093:6:12"},"nodeType":"YulFunctionCall","src":"14093:62:12"},"nodeType":"YulExpressionStatement","src":"14093:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14175:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14186:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14171:3:12"},"nodeType":"YulFunctionCall","src":"14171:18:12"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"14191:8:12","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14164:6:12"},"nodeType":"YulFunctionCall","src":"14164:36:12"},"nodeType":"YulExpressionStatement","src":"14164:36:12"},{"nodeType":"YulAssignment","src":"14209:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14221:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14232:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14217:3:12"},"nodeType":"YulFunctionCall","src":"14217:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14209:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13991:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14005:4:12","type":""}],"src":"13840:402:12"},{"body":{"nodeType":"YulBlock","src":"14295:77:12","statements":[{"nodeType":"YulAssignment","src":"14305:16:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14316:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"14319:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14312:3:12"},"nodeType":"YulFunctionCall","src":"14312:9:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14305:3:12"}]},{"body":{"nodeType":"YulBlock","src":"14344:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14346:16:12"},"nodeType":"YulFunctionCall","src":"14346:18:12"},"nodeType":"YulExpressionStatement","src":"14346:18:12"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14336:1:12"},{"name":"sum","nodeType":"YulIdentifier","src":"14339:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14333:2:12"},"nodeType":"YulFunctionCall","src":"14333:10:12"},"nodeType":"YulIf","src":"14330:36:12"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14278:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"14281:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"14287:3:12","type":""}],"src":"14247:125:12"},{"body":{"nodeType":"YulBlock","src":"14551:230:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14568:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14579:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14561:6:12"},"nodeType":"YulFunctionCall","src":"14561:21:12"},"nodeType":"YulExpressionStatement","src":"14561:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14602:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14613:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14598:3:12"},"nodeType":"YulFunctionCall","src":"14598:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"14618:2:12","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14591:6:12"},"nodeType":"YulFunctionCall","src":"14591:30:12"},"nodeType":"YulExpressionStatement","src":"14591:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14641:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14652:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14637:3:12"},"nodeType":"YulFunctionCall","src":"14637:18:12"},{"hexValue":"455243313135353a206275726e20616d6f756e74206578636565647320746f74","kind":"string","nodeType":"YulLiteral","src":"14657:34:12","type":"","value":"ERC1155: burn amount exceeds tot"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14630:6:12"},"nodeType":"YulFunctionCall","src":"14630:62:12"},"nodeType":"YulExpressionStatement","src":"14630:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14712:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14723:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14708:3:12"},"nodeType":"YulFunctionCall","src":"14708:18:12"},{"hexValue":"616c537570706c79","kind":"string","nodeType":"YulLiteral","src":"14728:10:12","type":"","value":"alSupply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14701:6:12"},"nodeType":"YulFunctionCall","src":"14701:38:12"},"nodeType":"YulExpressionStatement","src":"14701:38:12"},{"nodeType":"YulAssignment","src":"14748:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14760:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14771:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14756:3:12"},"nodeType":"YulFunctionCall","src":"14756:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14748:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14528:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14542:4:12","type":""}],"src":"14377:404:12"},{"body":{"nodeType":"YulBlock","src":"14960:223:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14977:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"14988:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14970:6:12"},"nodeType":"YulFunctionCall","src":"14970:21:12"},"nodeType":"YulExpressionStatement","src":"14970:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15011:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15022:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15007:3:12"},"nodeType":"YulFunctionCall","src":"15007:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"15027:2:12","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15000:6:12"},"nodeType":"YulFunctionCall","src":"15000:30:12"},"nodeType":"YulExpressionStatement","src":"15000:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15050:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15061:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15046:3:12"},"nodeType":"YulFunctionCall","src":"15046:18:12"},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"15066:34:12","type":"","value":"ERC1155: mint to the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15039:6:12"},"nodeType":"YulFunctionCall","src":"15039:62:12"},"nodeType":"YulExpressionStatement","src":"15039:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15121:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15132:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15117:3:12"},"nodeType":"YulFunctionCall","src":"15117:18:12"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"15137:3:12","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15110:6:12"},"nodeType":"YulFunctionCall","src":"15110:31:12"},"nodeType":"YulExpressionStatement","src":"15110:31:12"},{"nodeType":"YulAssignment","src":"15150:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15162:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15173:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15158:3:12"},"nodeType":"YulFunctionCall","src":"15158:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15150:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14937:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14951:4:12","type":""}],"src":"14786:397:12"},{"body":{"nodeType":"YulBlock","src":"15317:119:12","statements":[{"nodeType":"YulAssignment","src":"15327:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15339:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15350:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15335:3:12"},"nodeType":"YulFunctionCall","src":"15335:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15327:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15369:9:12"},{"name":"value0","nodeType":"YulIdentifier","src":"15380:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15362:6:12"},"nodeType":"YulFunctionCall","src":"15362:25:12"},"nodeType":"YulExpressionStatement","src":"15362:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15407:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15418:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15403:3:12"},"nodeType":"YulFunctionCall","src":"15403:18:12"},{"name":"value1","nodeType":"YulIdentifier","src":"15423:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15396:6:12"},"nodeType":"YulFunctionCall","src":"15396:34:12"},"nodeType":"YulExpressionStatement","src":"15396:34:12"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15278:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15289:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15297:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15308:4:12","type":""}],"src":"15188:248:12"},{"body":{"nodeType":"YulBlock","src":"15615:230:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15632:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15643:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15625:6:12"},"nodeType":"YulFunctionCall","src":"15625:21:12"},"nodeType":"YulExpressionStatement","src":"15625:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15666:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15677:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15662:3:12"},"nodeType":"YulFunctionCall","src":"15662:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"15682:2:12","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15655:6:12"},"nodeType":"YulFunctionCall","src":"15655:30:12"},"nodeType":"YulExpressionStatement","src":"15655:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15705:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15716:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15701:3:12"},"nodeType":"YulFunctionCall","src":"15701:18:12"},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e67746820","kind":"string","nodeType":"YulLiteral","src":"15721:34:12","type":"","value":"ERC1155: ids and amounts length "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15694:6:12"},"nodeType":"YulFunctionCall","src":"15694:62:12"},"nodeType":"YulExpressionStatement","src":"15694:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15776:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15787:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15772:3:12"},"nodeType":"YulFunctionCall","src":"15772:18:12"},{"hexValue":"6d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"15792:10:12","type":"","value":"mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15765:6:12"},"nodeType":"YulFunctionCall","src":"15765:38:12"},"nodeType":"YulExpressionStatement","src":"15765:38:12"},{"nodeType":"YulAssignment","src":"15812:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15824:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"15835:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15820:3:12"},"nodeType":"YulFunctionCall","src":"15820:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15812:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15592:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15606:4:12","type":""}],"src":"15441:404:12"},{"body":{"nodeType":"YulBlock","src":"16024:227:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16041:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16052:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16034:6:12"},"nodeType":"YulFunctionCall","src":"16034:21:12"},"nodeType":"YulExpressionStatement","src":"16034:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16075:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16086:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16071:3:12"},"nodeType":"YulFunctionCall","src":"16071:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"16091:2:12","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16064:6:12"},"nodeType":"YulFunctionCall","src":"16064:30:12"},"nodeType":"YulExpressionStatement","src":"16064:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16114:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16125:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16110:3:12"},"nodeType":"YulFunctionCall","src":"16110:18:12"},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"16130:34:12","type":"","value":"ERC1155: transfer to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16103:6:12"},"nodeType":"YulFunctionCall","src":"16103:62:12"},"nodeType":"YulExpressionStatement","src":"16103:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16185:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16196:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16181:3:12"},"nodeType":"YulFunctionCall","src":"16181:18:12"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"16201:7:12","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16174:6:12"},"nodeType":"YulFunctionCall","src":"16174:35:12"},"nodeType":"YulExpressionStatement","src":"16174:35:12"},{"nodeType":"YulAssignment","src":"16218:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16230:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16241:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16226:3:12"},"nodeType":"YulFunctionCall","src":"16226:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16218:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16001:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16015:4:12","type":""}],"src":"15850:401:12"},{"body":{"nodeType":"YulBlock","src":"16430:232:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16447:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16458:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16440:6:12"},"nodeType":"YulFunctionCall","src":"16440:21:12"},"nodeType":"YulExpressionStatement","src":"16440:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16481:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16492:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16477:3:12"},"nodeType":"YulFunctionCall","src":"16477:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"16497:2:12","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16470:6:12"},"nodeType":"YulFunctionCall","src":"16470:30:12"},"nodeType":"YulExpressionStatement","src":"16470:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16520:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16531:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16516:3:12"},"nodeType":"YulFunctionCall","src":"16516:18:12"},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"16536:34:12","type":"","value":"ERC1155: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16509:6:12"},"nodeType":"YulFunctionCall","src":"16509:62:12"},"nodeType":"YulExpressionStatement","src":"16509:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16591:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16602:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16587:3:12"},"nodeType":"YulFunctionCall","src":"16587:18:12"},{"hexValue":"72207472616e73666572","kind":"string","nodeType":"YulLiteral","src":"16607:12:12","type":"","value":"r transfer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16580:6:12"},"nodeType":"YulFunctionCall","src":"16580:40:12"},"nodeType":"YulExpressionStatement","src":"16580:40:12"},{"nodeType":"YulAssignment","src":"16629:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16641:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16652:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16637:3:12"},"nodeType":"YulFunctionCall","src":"16637:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16629:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16407:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16421:4:12","type":""}],"src":"16256:406:12"},{"body":{"nodeType":"YulBlock","src":"16896:236:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16913:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"16924:2:12","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16906:6:12"},"nodeType":"YulFunctionCall","src":"16906:21:12"},"nodeType":"YulExpressionStatement","src":"16906:21:12"},{"nodeType":"YulVariableDeclaration","src":"16936:70:12","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16979:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16991:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17002:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16987:3:12"},"nodeType":"YulFunctionCall","src":"16987:18:12"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"16950:28:12"},"nodeType":"YulFunctionCall","src":"16950:56:12"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16940:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17026:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17037:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17022:3:12"},"nodeType":"YulFunctionCall","src":"17022:18:12"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"17046:6:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"17054:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17042:3:12"},"nodeType":"YulFunctionCall","src":"17042:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17015:6:12"},"nodeType":"YulFunctionCall","src":"17015:50:12"},"nodeType":"YulExpressionStatement","src":"17015:50:12"},{"nodeType":"YulAssignment","src":"17074:52:12","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17111:6:12"},{"name":"tail_1","nodeType":"YulIdentifier","src":"17119:6:12"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"17082:28:12"},"nodeType":"YulFunctionCall","src":"17082:44:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17074:4:12"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16857:9:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16868:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16876:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16887:4:12","type":""}],"src":"16667:465:12"},{"body":{"nodeType":"YulBlock","src":"17311:182:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17328:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17339:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17321:6:12"},"nodeType":"YulFunctionCall","src":"17321:21:12"},"nodeType":"YulExpressionStatement","src":"17321:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17362:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17373:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17358:3:12"},"nodeType":"YulFunctionCall","src":"17358:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"17378:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17351:6:12"},"nodeType":"YulFunctionCall","src":"17351:30:12"},"nodeType":"YulExpressionStatement","src":"17351:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17401:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17412:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17397:3:12"},"nodeType":"YulFunctionCall","src":"17397:18:12"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"17417:34:12","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17390:6:12"},"nodeType":"YulFunctionCall","src":"17390:62:12"},"nodeType":"YulExpressionStatement","src":"17390:62:12"},{"nodeType":"YulAssignment","src":"17461:26:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17473:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"17484:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17469:3:12"},"nodeType":"YulFunctionCall","src":"17469:18:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17461:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17288:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17302:4:12","type":""}],"src":"17137:356:12"},{"body":{"nodeType":"YulBlock","src":"17579:464:12","statements":[{"body":{"nodeType":"YulBlock","src":"17612:425:12","statements":[{"nodeType":"YulVariableDeclaration","src":"17626:11:12","value":{"kind":"number","nodeType":"YulLiteral","src":"17636:1:12","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17630:2:12","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17657:2:12"},{"name":"array","nodeType":"YulIdentifier","src":"17661:5:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17650:6:12"},"nodeType":"YulFunctionCall","src":"17650:17:12"},"nodeType":"YulExpressionStatement","src":"17650:17:12"},{"nodeType":"YulVariableDeclaration","src":"17680:31:12","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17702:2:12"},{"kind":"number","nodeType":"YulLiteral","src":"17706:4:12","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17692:9:12"},"nodeType":"YulFunctionCall","src":"17692:19:12"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"17684:4:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17724:57:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17747:4:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17757:1:12","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17764:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"17776:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17760:3:12"},"nodeType":"YulFunctionCall","src":"17760:19:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17753:3:12"},"nodeType":"YulFunctionCall","src":"17753:27:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17743:3:12"},"nodeType":"YulFunctionCall","src":"17743:38:12"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"17728:11:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"17818:23:12","statements":[{"nodeType":"YulAssignment","src":"17820:19:12","value":{"name":"data","nodeType":"YulIdentifier","src":"17835:4:12"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"17820:11:12"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"17800:10:12"},{"kind":"number","nodeType":"YulLiteral","src":"17812:4:12","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17797:2:12"},"nodeType":"YulFunctionCall","src":"17797:20:12"},"nodeType":"YulIf","src":"17794:47:12"},{"nodeType":"YulVariableDeclaration","src":"17854:41:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17868:4:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17878:1:12","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17885:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17890:2:12","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17881:3:12"},"nodeType":"YulFunctionCall","src":"17881:12:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17874:3:12"},"nodeType":"YulFunctionCall","src":"17874:20:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17864:3:12"},"nodeType":"YulFunctionCall","src":"17864:31:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"17858:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17908:24:12","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"17921:11:12"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"17912:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"18006:21:12","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"18015:5:12"},{"name":"_1","nodeType":"YulIdentifier","src":"18022:2:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18008:6:12"},"nodeType":"YulFunctionCall","src":"18008:17:12"},"nodeType":"YulExpressionStatement","src":"18008:17:12"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17956:5:12"},{"name":"_2","nodeType":"YulIdentifier","src":"17963:2:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17953:2:12"},"nodeType":"YulFunctionCall","src":"17953:13:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17967:26:12","statements":[{"nodeType":"YulAssignment","src":"17969:22:12","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17982:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"17989:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17978:3:12"},"nodeType":"YulFunctionCall","src":"17978:13:12"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"17969:5:12"}]}]},"pre":{"nodeType":"YulBlock","src":"17949:3:12","statements":[]},"src":"17945:82:12"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"17595:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17600:2:12","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17592:2:12"},"nodeType":"YulFunctionCall","src":"17592:11:12"},"nodeType":"YulIf","src":"17589:448:12"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"17551:5:12","type":""},{"name":"len","nodeType":"YulTypedName","src":"17558:3:12","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"17563:10:12","type":""}],"src":"17498:545:12"},{"body":{"nodeType":"YulBlock","src":"18133:81:12","statements":[{"nodeType":"YulAssignment","src":"18143:65:12","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18158:4:12"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18176:1:12","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"18179:3:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18172:3:12"},"nodeType":"YulFunctionCall","src":"18172:11:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18189:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18185:3:12"},"nodeType":"YulFunctionCall","src":"18185:6:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18168:3:12"},"nodeType":"YulFunctionCall","src":"18168:24:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18164:3:12"},"nodeType":"YulFunctionCall","src":"18164:29:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18154:3:12"},"nodeType":"YulFunctionCall","src":"18154:40:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18200:1:12","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"18203:3:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18196:3:12"},"nodeType":"YulFunctionCall","src":"18196:11:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18151:2:12"},"nodeType":"YulFunctionCall","src":"18151:57:12"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"18143:4:12"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18110:4:12","type":""},{"name":"len","nodeType":"YulTypedName","src":"18116:3:12","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"18124:4:12","type":""}],"src":"18048:166:12"},{"body":{"nodeType":"YulBlock","src":"18315:1256:12","statements":[{"nodeType":"YulVariableDeclaration","src":"18325:24:12","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18345:3:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18339:5:12"},"nodeType":"YulFunctionCall","src":"18339:10:12"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"18329:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"18392:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18394:16:12"},"nodeType":"YulFunctionCall","src":"18394:18:12"},"nodeType":"YulExpressionStatement","src":"18394:18:12"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18364:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"18372:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18361:2:12"},"nodeType":"YulFunctionCall","src":"18361:30:12"},"nodeType":"YulIf","src":"18358:56:12"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18467:4:12"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18505:4:12"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18499:5:12"},"nodeType":"YulFunctionCall","src":"18499:11:12"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"18473:25:12"},"nodeType":"YulFunctionCall","src":"18473:38:12"},{"name":"newLen","nodeType":"YulIdentifier","src":"18513:6:12"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"18423:43:12"},"nodeType":"YulFunctionCall","src":"18423:97:12"},"nodeType":"YulExpressionStatement","src":"18423:97:12"},{"nodeType":"YulVariableDeclaration","src":"18529:18:12","value":{"kind":"number","nodeType":"YulLiteral","src":"18546:1:12","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"18533:9:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18556:23:12","value":{"kind":"number","nodeType":"YulLiteral","src":"18575:4:12","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"18560:11:12","type":""}]},{"nodeType":"YulAssignment","src":"18588:24:12","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"18601:11:12"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18588:9:12"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"18658:656:12","statements":[{"nodeType":"YulVariableDeclaration","src":"18672:35:12","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18691:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18703:2:12","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18699:3:12"},"nodeType":"YulFunctionCall","src":"18699:7:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18687:3:12"},"nodeType":"YulFunctionCall","src":"18687:20:12"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"18676:7:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18720:49:12","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18764:4:12"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"18734:29:12"},"nodeType":"YulFunctionCall","src":"18734:35:12"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"18724:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18782:10:12","value":{"kind":"number","nodeType":"YulLiteral","src":"18791:1:12","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18786:1:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"18869:172:12","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18894:6:12"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18912:3:12"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"18917:9:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18908:3:12"},"nodeType":"YulFunctionCall","src":"18908:19:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18902:5:12"},"nodeType":"YulFunctionCall","src":"18902:26:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18887:6:12"},"nodeType":"YulFunctionCall","src":"18887:42:12"},"nodeType":"YulExpressionStatement","src":"18887:42:12"},{"nodeType":"YulAssignment","src":"18946:24:12","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18960:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"18968:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18956:3:12"},"nodeType":"YulFunctionCall","src":"18956:14:12"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"18946:6:12"}]},{"nodeType":"YulAssignment","src":"18987:40:12","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19004:9:12"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"19015:11:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19000:3:12"},"nodeType":"YulFunctionCall","src":"19000:27:12"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"18987:9:12"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18816:1:12"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"18819:7:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18813:2:12"},"nodeType":"YulFunctionCall","src":"18813:14:12"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18828:28:12","statements":[{"nodeType":"YulAssignment","src":"18830:24:12","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18839:1:12"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"18842:11:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18835:3:12"},"nodeType":"YulFunctionCall","src":"18835:19:12"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18830:1:12"}]}]},"pre":{"nodeType":"YulBlock","src":"18809:3:12","statements":[]},"src":"18805:236:12"},{"body":{"nodeType":"YulBlock","src":"19089:166:12","statements":[{"nodeType":"YulVariableDeclaration","src":"19107:43:12","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19134:3:12"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19139:9:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19130:3:12"},"nodeType":"YulFunctionCall","src":"19130:19:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19124:5:12"},"nodeType":"YulFunctionCall","src":"19124:26:12"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"19111:9:12","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19174:6:12"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"19186:9:12"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19213:1:12","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"19216:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19209:3:12"},"nodeType":"YulFunctionCall","src":"19209:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"19225:3:12","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19205:3:12"},"nodeType":"YulFunctionCall","src":"19205:24:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19235:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19231:3:12"},"nodeType":"YulFunctionCall","src":"19231:6:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19201:3:12"},"nodeType":"YulFunctionCall","src":"19201:37:12"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19197:3:12"},"nodeType":"YulFunctionCall","src":"19197:42:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19182:3:12"},"nodeType":"YulFunctionCall","src":"19182:58:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19167:6:12"},"nodeType":"YulFunctionCall","src":"19167:74:12"},"nodeType":"YulExpressionStatement","src":"19167:74:12"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"19060:7:12"},{"name":"newLen","nodeType":"YulIdentifier","src":"19069:6:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19057:2:12"},"nodeType":"YulFunctionCall","src":"19057:19:12"},"nodeType":"YulIf","src":"19054:201:12"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19275:4:12"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19289:1:12","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"19292:6:12"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19285:3:12"},"nodeType":"YulFunctionCall","src":"19285:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"19301:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19281:3:12"},"nodeType":"YulFunctionCall","src":"19281:22:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19268:6:12"},"nodeType":"YulFunctionCall","src":"19268:36:12"},"nodeType":"YulExpressionStatement","src":"19268:36:12"}]},"nodeType":"YulCase","src":"18651:663:12","value":{"kind":"number","nodeType":"YulLiteral","src":"18656:1:12","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19331:234:12","statements":[{"nodeType":"YulVariableDeclaration","src":"19345:14:12","value":{"kind":"number","nodeType":"YulLiteral","src":"19358:1:12","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19349:5:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"19394:67:12","statements":[{"nodeType":"YulAssignment","src":"19412:35:12","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19431:3:12"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19436:9:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19427:3:12"},"nodeType":"YulFunctionCall","src":"19427:19:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19421:5:12"},"nodeType":"YulFunctionCall","src":"19421:26:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19412:5:12"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"19375:6:12"},"nodeType":"YulIf","src":"19372:89:12"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19481:4:12"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19540:5:12"},{"name":"newLen","nodeType":"YulIdentifier","src":"19547:6:12"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"19487:52:12"},"nodeType":"YulFunctionCall","src":"19487:67:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19474:6:12"},"nodeType":"YulFunctionCall","src":"19474:81:12"},"nodeType":"YulExpressionStatement","src":"19474:81:12"}]},"nodeType":"YulCase","src":"19323:242:12","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"18631:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"18639:2:12","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18628:2:12"},"nodeType":"YulFunctionCall","src":"18628:14:12"},"nodeType":"YulSwitch","src":"18621:944:12"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18300:4:12","type":""},{"name":"src","nodeType":"YulTypedName","src":"18306:3:12","type":""}],"src":"18219:1352:12"},{"body":{"nodeType":"YulBlock","src":"19750:225:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19767:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19778:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19760:6:12"},"nodeType":"YulFunctionCall","src":"19760:21:12"},"nodeType":"YulExpressionStatement","src":"19760:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19801:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19812:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19797:3:12"},"nodeType":"YulFunctionCall","src":"19797:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"19817:2:12","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19790:6:12"},"nodeType":"YulFunctionCall","src":"19790:30:12"},"nodeType":"YulExpressionStatement","src":"19790:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19840:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19851:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19836:3:12"},"nodeType":"YulFunctionCall","src":"19836:18:12"},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"19856:34:12","type":"","value":"ERC1155: burn from the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19829:6:12"},"nodeType":"YulFunctionCall","src":"19829:62:12"},"nodeType":"YulExpressionStatement","src":"19829:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19911:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19922:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19907:3:12"},"nodeType":"YulFunctionCall","src":"19907:18:12"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"19927:5:12","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19900:6:12"},"nodeType":"YulFunctionCall","src":"19900:33:12"},"nodeType":"YulExpressionStatement","src":"19900:33:12"},{"nodeType":"YulAssignment","src":"19942:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19954:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"19965:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19950:3:12"},"nodeType":"YulFunctionCall","src":"19950:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19942:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19727:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19741:4:12","type":""}],"src":"19576:399:12"},{"body":{"nodeType":"YulBlock","src":"20154:226:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20171:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20182:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20164:6:12"},"nodeType":"YulFunctionCall","src":"20164:21:12"},"nodeType":"YulExpressionStatement","src":"20164:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20205:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20216:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20201:3:12"},"nodeType":"YulFunctionCall","src":"20201:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"20221:2:12","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20194:6:12"},"nodeType":"YulFunctionCall","src":"20194:30:12"},"nodeType":"YulExpressionStatement","src":"20194:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20244:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20255:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20240:3:12"},"nodeType":"YulFunctionCall","src":"20240:18:12"},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c","kind":"string","nodeType":"YulLiteral","src":"20260:34:12","type":"","value":"ERC1155: burn amount exceeds bal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20233:6:12"},"nodeType":"YulFunctionCall","src":"20233:62:12"},"nodeType":"YulExpressionStatement","src":"20233:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20315:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20326:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20311:3:12"},"nodeType":"YulFunctionCall","src":"20311:18:12"},{"hexValue":"616e6365","kind":"string","nodeType":"YulLiteral","src":"20331:6:12","type":"","value":"ance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20304:6:12"},"nodeType":"YulFunctionCall","src":"20304:34:12"},"nodeType":"YulExpressionStatement","src":"20304:34:12"},{"nodeType":"YulAssignment","src":"20347:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20359:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20370:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20355:3:12"},"nodeType":"YulFunctionCall","src":"20355:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20347:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20131:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20145:4:12","type":""}],"src":"19980:400:12"},{"body":{"nodeType":"YulBlock","src":"20559:231:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20576:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20587:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20569:6:12"},"nodeType":"YulFunctionCall","src":"20569:21:12"},"nodeType":"YulExpressionStatement","src":"20569:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20610:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20621:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20606:3:12"},"nodeType":"YulFunctionCall","src":"20606:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"20626:2:12","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20599:6:12"},"nodeType":"YulFunctionCall","src":"20599:30:12"},"nodeType":"YulExpressionStatement","src":"20599:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20649:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20660:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20645:3:12"},"nodeType":"YulFunctionCall","src":"20645:18:12"},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c20737461747573","kind":"string","nodeType":"YulLiteral","src":"20665:34:12","type":"","value":"ERC1155: setting approval status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20638:6:12"},"nodeType":"YulFunctionCall","src":"20638:62:12"},"nodeType":"YulExpressionStatement","src":"20638:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20720:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20731:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20716:3:12"},"nodeType":"YulFunctionCall","src":"20716:18:12"},{"hexValue":"20666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"20736:11:12","type":"","value":" for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20709:6:12"},"nodeType":"YulFunctionCall","src":"20709:39:12"},"nodeType":"YulExpressionStatement","src":"20709:39:12"},{"nodeType":"YulAssignment","src":"20757:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20769:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"20780:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20765:3:12"},"nodeType":"YulFunctionCall","src":"20765:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20757:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20536:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20550:4:12","type":""}],"src":"20385:405:12"},{"body":{"nodeType":"YulBlock","src":"20841:171:12","statements":[{"body":{"nodeType":"YulBlock","src":"20872:111:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20893:1:12","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20900:3:12","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"20905:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20896:3:12"},"nodeType":"YulFunctionCall","src":"20896:20:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20886:6:12"},"nodeType":"YulFunctionCall","src":"20886:31:12"},"nodeType":"YulExpressionStatement","src":"20886:31:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20937:1:12","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20940:4:12","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20930:6:12"},"nodeType":"YulFunctionCall","src":"20930:15:12"},"nodeType":"YulExpressionStatement","src":"20930:15:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20965:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20968:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20958:6:12"},"nodeType":"YulFunctionCall","src":"20958:15:12"},"nodeType":"YulExpressionStatement","src":"20958:15:12"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20861:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20854:6:12"},"nodeType":"YulFunctionCall","src":"20854:9:12"},"nodeType":"YulIf","src":"20851:132:12"},{"nodeType":"YulAssignment","src":"20992:14:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21001:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"21004:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20997:3:12"},"nodeType":"YulFunctionCall","src":"20997:9:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"20992:1:12"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20826:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"20829:1:12","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"20835:1:12","type":""}],"src":"20795:217:12"},{"body":{"nodeType":"YulBlock","src":"21066:79:12","statements":[{"nodeType":"YulAssignment","src":"21076:17:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21088:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"21091:1:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21084:3:12"},"nodeType":"YulFunctionCall","src":"21084:9:12"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21076:4:12"}]},{"body":{"nodeType":"YulBlock","src":"21117:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21119:16:12"},"nodeType":"YulFunctionCall","src":"21119:18:12"},"nodeType":"YulExpressionStatement","src":"21119:18:12"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"21108:4:12"},{"name":"x","nodeType":"YulIdentifier","src":"21114:1:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21105:2:12"},"nodeType":"YulFunctionCall","src":"21105:11:12"},"nodeType":"YulIf","src":"21102:37:12"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21048:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"21051:1:12","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21057:4:12","type":""}],"src":"21017:128:12"},{"body":{"nodeType":"YulBlock","src":"21202:116:12","statements":[{"nodeType":"YulAssignment","src":"21212:20:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21227:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"21230:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21223:3:12"},"nodeType":"YulFunctionCall","src":"21223:9:12"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"21212:7:12"}]},{"body":{"nodeType":"YulBlock","src":"21290:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21292:16:12"},"nodeType":"YulFunctionCall","src":"21292:18:12"},"nodeType":"YulExpressionStatement","src":"21292:18:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21261:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21254:6:12"},"nodeType":"YulFunctionCall","src":"21254:9:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21268:1:12"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"21275:7:12"},{"name":"x","nodeType":"YulIdentifier","src":"21284:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21271:3:12"},"nodeType":"YulFunctionCall","src":"21271:15:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21265:2:12"},"nodeType":"YulFunctionCall","src":"21265:22:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21251:2:12"},"nodeType":"YulFunctionCall","src":"21251:37:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21244:6:12"},"nodeType":"YulFunctionCall","src":"21244:45:12"},"nodeType":"YulIf","src":"21241:71:12"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21181:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"21184:1:12","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"21190:7:12","type":""}],"src":"21150:168:12"},{"body":{"nodeType":"YulBlock","src":"21369:102:12","statements":[{"nodeType":"YulAssignment","src":"21379:38:12","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21394:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"21397:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21390:3:12"},"nodeType":"YulFunctionCall","src":"21390:12:12"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21408:1:12"},{"kind":"number","nodeType":"YulLiteral","src":"21411:4:12","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21404:3:12"},"nodeType":"YulFunctionCall","src":"21404:12:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21386:3:12"},"nodeType":"YulFunctionCall","src":"21386:31:12"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"21379:3:12"}]},{"body":{"nodeType":"YulBlock","src":"21443:22:12","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21445:16:12"},"nodeType":"YulFunctionCall","src":"21445:18:12"},"nodeType":"YulExpressionStatement","src":"21445:18:12"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"21432:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"21437:4:12","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21429:2:12"},"nodeType":"YulFunctionCall","src":"21429:13:12"},"nodeType":"YulIf","src":"21426:39:12"}]},"name":"checked_add_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21352:1:12","type":""},{"name":"y","nodeType":"YulTypedName","src":"21355:1:12","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21361:3:12","type":""}],"src":"21323:148:12"},{"body":{"nodeType":"YulBlock","src":"21707:330:12","statements":[{"nodeType":"YulVariableDeclaration","src":"21717:29:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21735:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"21740:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21731:3:12"},"nodeType":"YulFunctionCall","src":"21731:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"21744:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21727:3:12"},"nodeType":"YulFunctionCall","src":"21727:19:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21721:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21762:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21777:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"21785:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21773:3:12"},"nodeType":"YulFunctionCall","src":"21773:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21755:6:12"},"nodeType":"YulFunctionCall","src":"21755:34:12"},"nodeType":"YulExpressionStatement","src":"21755:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21809:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"21820:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21805:3:12"},"nodeType":"YulFunctionCall","src":"21805:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21829:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"21837:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21825:3:12"},"nodeType":"YulFunctionCall","src":"21825:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21798:6:12"},"nodeType":"YulFunctionCall","src":"21798:43:12"},"nodeType":"YulExpressionStatement","src":"21798:43:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21861:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"21872:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21857:3:12"},"nodeType":"YulFunctionCall","src":"21857:18:12"},{"name":"value2","nodeType":"YulIdentifier","src":"21877:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21850:6:12"},"nodeType":"YulFunctionCall","src":"21850:34:12"},"nodeType":"YulExpressionStatement","src":"21850:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21904:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"21915:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21900:3:12"},"nodeType":"YulFunctionCall","src":"21900:18:12"},{"name":"value3","nodeType":"YulIdentifier","src":"21920:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21893:6:12"},"nodeType":"YulFunctionCall","src":"21893:34:12"},"nodeType":"YulExpressionStatement","src":"21893:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21947:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"21958:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21943:3:12"},"nodeType":"YulFunctionCall","src":"21943:19:12"},{"kind":"number","nodeType":"YulLiteral","src":"21964:3:12","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21936:6:12"},"nodeType":"YulFunctionCall","src":"21936:32:12"},"nodeType":"YulExpressionStatement","src":"21936:32:12"},{"nodeType":"YulAssignment","src":"21977:54:12","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"22003:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22015:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"22026:3:12","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22011:3:12"},"nodeType":"YulFunctionCall","src":"22011:19:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21985:17:12"},"nodeType":"YulFunctionCall","src":"21985:46:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21977:4:12"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21644:9:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21655:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21663:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21671:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21679:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21687:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21698:4:12","type":""}],"src":"21476:561:12"},{"body":{"nodeType":"YulBlock","src":"22122:169:12","statements":[{"body":{"nodeType":"YulBlock","src":"22168:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22177:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22180:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22170:6:12"},"nodeType":"YulFunctionCall","src":"22170:12:12"},"nodeType":"YulExpressionStatement","src":"22170:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22143:7:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"22152:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22139:3:12"},"nodeType":"YulFunctionCall","src":"22139:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"22164:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22135:3:12"},"nodeType":"YulFunctionCall","src":"22135:32:12"},"nodeType":"YulIf","src":"22132:52:12"},{"nodeType":"YulVariableDeclaration","src":"22193:29:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22212:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22206:5:12"},"nodeType":"YulFunctionCall","src":"22206:16:12"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22197:5:12","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22255:5:12"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"22231:23:12"},"nodeType":"YulFunctionCall","src":"22231:30:12"},"nodeType":"YulExpressionStatement","src":"22231:30:12"},{"nodeType":"YulAssignment","src":"22270:15:12","value":{"name":"value","nodeType":"YulIdentifier","src":"22280:5:12"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22270:6:12"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22088:9:12","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22099:7:12","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22111:6:12","type":""}],"src":"22042:249:12"},{"body":{"nodeType":"YulBlock","src":"22339:136:12","statements":[{"body":{"nodeType":"YulBlock","src":"22384:85:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22413:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22416:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22419:1:12","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"22398:14:12"},"nodeType":"YulFunctionCall","src":"22398:23:12"},"nodeType":"YulExpressionStatement","src":"22398:23:12"},{"nodeType":"YulAssignment","src":"22434:25:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22445:3:12","type":"","value":"224"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22456:1:12","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22450:5:12"},"nodeType":"YulFunctionCall","src":"22450:8:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22441:3:12"},"nodeType":"YulFunctionCall","src":"22441:18:12"},"variableNames":[{"name":"sig","nodeType":"YulIdentifier","src":"22434:3:12"}]}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22355:14:12"},"nodeType":"YulFunctionCall","src":"22355:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"22373:1:12","type":"","value":"3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22352:2:12"},"nodeType":"YulFunctionCall","src":"22352:23:12"},"nodeType":"YulIf","src":"22349:120:12"}]},"name":"return_data_selector","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"sig","nodeType":"YulTypedName","src":"22331:3:12","type":""}],"src":"22296:179:12"},{"body":{"nodeType":"YulBlock","src":"22527:624:12","statements":[{"body":{"nodeType":"YulBlock","src":"22567:9:12","statements":[{"nodeType":"YulLeave","src":"22569:5:12"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22543:14:12"},"nodeType":"YulFunctionCall","src":"22543:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"22561:4:12","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22540:2:12"},"nodeType":"YulFunctionCall","src":"22540:26:12"},"nodeType":"YulIf","src":"22537:39:12"},{"nodeType":"YulVariableDeclaration","src":"22585:21:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22603:2:12","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22597:5:12"},"nodeType":"YulFunctionCall","src":"22597:9:12"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"22589:4:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22615:16:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22629:1:12","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22625:3:12"},"nodeType":"YulFunctionCall","src":"22625:6:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22619:2:12","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22655:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"22661:1:12","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22668:14:12"},"nodeType":"YulFunctionCall","src":"22668:16:12"},{"name":"_1","nodeType":"YulIdentifier","src":"22686:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22664:3:12"},"nodeType":"YulFunctionCall","src":"22664:25:12"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"22640:14:12"},"nodeType":"YulFunctionCall","src":"22640:50:12"},"nodeType":"YulExpressionStatement","src":"22640:50:12"},{"nodeType":"YulVariableDeclaration","src":"22699:25:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22719:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22713:5:12"},"nodeType":"YulFunctionCall","src":"22713:11:12"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22703:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22733:26:12","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"22743:14:12"},"nodeType":"YulFunctionCall","src":"22743:16:12"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"22737:2:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22768:28:12","value":{"kind":"number","nodeType":"YulLiteral","src":"22778:18:12","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"22772:2:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"22854:9:12","statements":[{"nodeType":"YulLeave","src":"22856:5:12"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22814:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"22822:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22811:2:12"},"nodeType":"YulFunctionCall","src":"22811:14:12"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22834:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"22842:4:12","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22830:3:12"},"nodeType":"YulFunctionCall","src":"22830:17:12"},{"name":"_2","nodeType":"YulIdentifier","src":"22849:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22827:2:12"},"nodeType":"YulFunctionCall","src":"22827:25:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22808:2:12"},"nodeType":"YulFunctionCall","src":"22808:45:12"},"nodeType":"YulIf","src":"22805:58:12"},{"nodeType":"YulVariableDeclaration","src":"22872:28:12","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22887:4:12"},{"name":"offset","nodeType":"YulIdentifier","src":"22893:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22883:3:12"},"nodeType":"YulFunctionCall","src":"22883:17:12"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"22876:3:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22909:24:12","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"22929:3:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22923:5:12"},"nodeType":"YulFunctionCall","src":"22923:10:12"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22913:6:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"22960:9:12","statements":[{"nodeType":"YulLeave","src":"22962:5:12"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22948:6:12"},{"name":"_3","nodeType":"YulIdentifier","src":"22956:2:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22945:2:12"},"nodeType":"YulFunctionCall","src":"22945:14:12"},"nodeType":"YulIf","src":"22942:27:12"},{"body":{"nodeType":"YulBlock","src":"23051:9:12","statements":[{"nodeType":"YulLeave","src":"23053:5:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"22992:3:12"},{"name":"length","nodeType":"YulIdentifier","src":"22997:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22988:3:12"},"nodeType":"YulFunctionCall","src":"22988:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"23006:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22984:3:12"},"nodeType":"YulFunctionCall","src":"22984:27:12"},{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23021:4:12"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"23027:14:12"},"nodeType":"YulFunctionCall","src":"23027:16:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23017:3:12"},"nodeType":"YulFunctionCall","src":"23017:27:12"},{"name":"_1","nodeType":"YulIdentifier","src":"23046:2:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23013:3:12"},"nodeType":"YulFunctionCall","src":"23013:36:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22981:2:12"},"nodeType":"YulFunctionCall","src":"22981:69:12"},"nodeType":"YulIf","src":"22978:82:12"},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23089:4:12"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23103:6:12"},{"name":"length","nodeType":"YulIdentifier","src":"23111:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23099:3:12"},"nodeType":"YulFunctionCall","src":"23099:19:12"},{"kind":"number","nodeType":"YulLiteral","src":"23120:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23095:3:12"},"nodeType":"YulFunctionCall","src":"23095:30:12"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"23069:19:12"},"nodeType":"YulFunctionCall","src":"23069:57:12"},"nodeType":"YulExpressionStatement","src":"23069:57:12"},{"nodeType":"YulAssignment","src":"23135:10:12","value":{"name":"msg","nodeType":"YulIdentifier","src":"23142:3:12"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23135:3:12"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22519:3:12","type":""}],"src":"22480:671:12"},{"body":{"nodeType":"YulBlock","src":"23330:242:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23347:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23358:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23340:6:12"},"nodeType":"YulFunctionCall","src":"23340:21:12"},"nodeType":"YulExpressionStatement","src":"23340:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23381:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23392:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23377:3:12"},"nodeType":"YulFunctionCall","src":"23377:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"23397:2:12","type":"","value":"52"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23370:6:12"},"nodeType":"YulFunctionCall","src":"23370:30:12"},"nodeType":"YulExpressionStatement","src":"23370:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23420:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23431:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23416:3:12"},"nodeType":"YulFunctionCall","src":"23416:18:12"},{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2d45524331313535","kind":"string","nodeType":"YulLiteral","src":"23436:34:12","type":"","value":"ERC1155: transfer to non-ERC1155"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23409:6:12"},"nodeType":"YulFunctionCall","src":"23409:62:12"},"nodeType":"YulExpressionStatement","src":"23409:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23491:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23502:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23487:3:12"},"nodeType":"YulFunctionCall","src":"23487:18:12"},{"hexValue":"526563656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"23507:22:12","type":"","value":"Receiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23480:6:12"},"nodeType":"YulFunctionCall","src":"23480:50:12"},"nodeType":"YulExpressionStatement","src":"23480:50:12"},{"nodeType":"YulAssignment","src":"23539:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23551:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23562:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23547:3:12"},"nodeType":"YulFunctionCall","src":"23547:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23539:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23307:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23321:4:12","type":""}],"src":"23156:416:12"},{"body":{"nodeType":"YulBlock","src":"23751:230:12","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23768:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23779:2:12","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23761:6:12"},"nodeType":"YulFunctionCall","src":"23761:21:12"},"nodeType":"YulExpressionStatement","src":"23761:21:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23802:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23813:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23798:3:12"},"nodeType":"YulFunctionCall","src":"23798:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"23818:2:12","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23791:6:12"},"nodeType":"YulFunctionCall","src":"23791:30:12"},"nodeType":"YulExpressionStatement","src":"23791:30:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23841:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23852:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23837:3:12"},"nodeType":"YulFunctionCall","src":"23837:18:12"},{"hexValue":"455243313135353a204552433131353552656365697665722072656a65637465","kind":"string","nodeType":"YulLiteral","src":"23857:34:12","type":"","value":"ERC1155: ERC1155Receiver rejecte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23830:6:12"},"nodeType":"YulFunctionCall","src":"23830:62:12"},"nodeType":"YulExpressionStatement","src":"23830:62:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23912:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23923:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23908:3:12"},"nodeType":"YulFunctionCall","src":"23908:18:12"},{"hexValue":"6420746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"23928:10:12","type":"","value":"d tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23901:6:12"},"nodeType":"YulFunctionCall","src":"23901:38:12"},"nodeType":"YulExpressionStatement","src":"23901:38:12"},{"nodeType":"YulAssignment","src":"23948:27:12","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23960:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"23971:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23956:3:12"},"nodeType":"YulFunctionCall","src":"23956:19:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23948:4:12"}]}]},"name":"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23728:9:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23742:4:12","type":""}],"src":"23577:404:12"},{"body":{"nodeType":"YulBlock","src":"24317:496:12","statements":[{"nodeType":"YulVariableDeclaration","src":"24327:29:12","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24345:3:12","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"24350:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24341:3:12"},"nodeType":"YulFunctionCall","src":"24341:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"24354:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24337:3:12"},"nodeType":"YulFunctionCall","src":"24337:19:12"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"24331:2:12","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24372:9:12"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24387:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"24395:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24383:3:12"},"nodeType":"YulFunctionCall","src":"24383:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24365:6:12"},"nodeType":"YulFunctionCall","src":"24365:34:12"},"nodeType":"YulExpressionStatement","src":"24365:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24419:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"24430:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24415:3:12"},"nodeType":"YulFunctionCall","src":"24415:18:12"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24439:6:12"},{"name":"_1","nodeType":"YulIdentifier","src":"24447:2:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24435:3:12"},"nodeType":"YulFunctionCall","src":"24435:15:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24408:6:12"},"nodeType":"YulFunctionCall","src":"24408:43:12"},"nodeType":"YulExpressionStatement","src":"24408:43:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24471:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"24482:2:12","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24467:3:12"},"nodeType":"YulFunctionCall","src":"24467:18:12"},{"kind":"number","nodeType":"YulLiteral","src":"24487:3:12","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24460:6:12"},"nodeType":"YulFunctionCall","src":"24460:31:12"},"nodeType":"YulExpressionStatement","src":"24460:31:12"},{"nodeType":"YulVariableDeclaration","src":"24500:71:12","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24543:6:12"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24555:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"24566:3:12","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24551:3:12"},"nodeType":"YulFunctionCall","src":"24551:19:12"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"24514:28:12"},"nodeType":"YulFunctionCall","src":"24514:57:12"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"24504:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24591:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"24602:2:12","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24587:3:12"},"nodeType":"YulFunctionCall","src":"24587:18:12"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"24611:6:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"24619:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24607:3:12"},"nodeType":"YulFunctionCall","src":"24607:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24580:6:12"},"nodeType":"YulFunctionCall","src":"24580:50:12"},"nodeType":"YulExpressionStatement","src":"24580:50:12"},{"nodeType":"YulVariableDeclaration","src":"24639:58:12","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24682:6:12"},{"name":"tail_1","nodeType":"YulIdentifier","src":"24690:6:12"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"24653:28:12"},"nodeType":"YulFunctionCall","src":"24653:44:12"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"24643:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24717:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"24728:3:12","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24713:3:12"},"nodeType":"YulFunctionCall","src":"24713:19:12"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"24738:6:12"},{"name":"headStart","nodeType":"YulIdentifier","src":"24746:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24734:3:12"},"nodeType":"YulFunctionCall","src":"24734:22:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24706:6:12"},"nodeType":"YulFunctionCall","src":"24706:51:12"},"nodeType":"YulExpressionStatement","src":"24706:51:12"},{"nodeType":"YulAssignment","src":"24766:41:12","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24792:6:12"},{"name":"tail_2","nodeType":"YulIdentifier","src":"24800:6:12"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"24774:17:12"},"nodeType":"YulFunctionCall","src":"24774:33:12"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24766:4:12"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24254:9:12","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24265:6:12","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24273:6:12","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24281:6:12","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24289:6:12","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24297:6:12","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24308:4:12","type":""}],"src":"23986:827:12"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        mstore(ret, \"/\")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(ret, _1), length_1)\n        let _3 := add(ret, length_1)\n        mstore(add(_3, _1), \".json\")\n        end := add(_3, 6)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds tot\")\n        mstore(add(headStart, 96), \"alSupply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b8578063c87b56dd1161007c578063c87b56dd1461029a578063d4822fbf146102ad578063e985e9c5146102c0578063f242432a146102fc578063f2fde38b1461030f578063f5298aca1461032257600080fd5b80638da5cb5b1461023c578063a22cb46514610257578063a3cd71f61461026a578063bd85b03914610272578063c7eaef1e1461029257600080fd5b80634e1273f4116100ff5780634e1273f4146101cc5780634f558e79146101ec57806355f804b31461020e5780636b20c45414610221578063715018a61461023457600080fd5b8062fdd58e1461013b57806301ffc9a7146101615780630e89341c146101845780632baf2acb146101a45780632eb2c2d6146101b9575b600080fd5b61014e6101493660046115a3565b610335565b6040519081526020015b60405180910390f35b61017461016f3660046115e3565b6103ce565b6040519015158152602001610158565b610197610192366004611607565b61041e565b6040516101589190611670565b6101b76101b2366004611683565b6104b2565b005b6101b76101c736600461180c565b6104d2565b6101df6101da3660046118b6565b61051e565b60405161015891906119bc565b6101746101fa366004611607565b600090815260046020526040902054151590565b6101b761021c3660046119cf565b610648565b6101b761022f366004611a20565b61065c565b6101b761069f565b6003546040516001600160a01b039091168152602001610158565b6101b7610265366004611a94565b6106b3565b61014e600081565b61014e610280366004611607565b60009081526004602052604090205490565b61014e600181565b6101976102a8366004611607565b6106c2565b6101b76102bb366004611ad0565b6106f6565b6101746102ce366004611afc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101b761030a366004611b26565b61071b565b6101b761031d366004611b8b565b610760565b6101b7610330366004611683565b6107d6565b60006001600160a01b0383166103a55760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806103ff57506001600160e01b031982166303a24d0760e21b145b806103c857506301ffc9a760e01b6001600160e01b03198316146103c8565b60606002805461042d90611ba6565b80601f016020809104026020016040519081016040528092919081815260200182805461045990611ba6565b80156104a65780601f1061047b576101008083540402835291602001916104a6565b820191906000526020600020905b81548152906001019060200180831161048957829003601f168201915b50505050509050919050565b6104cd838383604051806020016040528060008152506109ab565b505050565b6001600160a01b0385163314806104ee57506104ee85336102ce565b61050a5760405162461bcd60e51b815260040161039c90611be0565b6105178585858585610ac5565b5050505050565b606081518351146105835760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161039c565b6000835167ffffffffffffffff81111561059f5761059f6116b6565b6040519080825280602002602001820160405280156105c8578160200160208202803683370190505b50905060005b8451811015610640576106138582815181106105ec576105ec611c2e565b602002602001015185838151811061060657610606611c2e565b6020026020010151610335565b82828151811061062557610625611c2e565b602090810291909101015261063981611c5a565b90506105ce565b509392505050565b610650610c67565b61065981610cc1565b50565b6001600160a01b038316331480610678575061067883336102ce565b6106945760405162461bcd60e51b815260040161039c90611be0565b6104cd838383610ccd565b6106a7610c67565b6106b16000610e6a565b565b6106be338383610ebc565b5050565b606060056106cf83610f9c565b6040516020016106e0929190611c73565b6040516020818303038152906040529050919050565b6106fe610c67565b6106be3382846001604051806020016040528060008152506110c8565b6001600160a01b038516331480610737575061073785336102ce565b6107535760405162461bcd60e51b815260040161039c90611be0565b61051785858585856110c8565b610768610c67565b6001600160a01b0381166107cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161039c565b61065981610e6a565b6001600160a01b0383163314806107f257506107f283336102ce565b61080e5760405162461bcd60e51b815260040161039c90611be0565b6104cd838383611200565b6001600160a01b0385166108a05760005b835181101561089e5782818151811061084557610845611c2e565b60200260200101516004600086848151811061086357610863611c2e565b6020026020010151815260200190815260200160002060008282546108889190611d19565b90915550610897905081611c5a565b905061082a565b505b6001600160a01b0384166109945760005b83518110156109925760008482815181106108ce576108ce611c2e565b6020026020010151905060008483815181106108ec576108ec611c2e565b602002602001015190506000600460008481526020019081526020016000205490508181101561096f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b606482015260840161039c565b6000928352600460205260409092209103905561098b81611c5a565b90506108b1565b505b505050505050565b6001600160a01b03163b151590565b6001600160a01b038416610a0b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161039c565b336000610a1785611318565b90506000610a2485611318565b9050610a3583600089858589611363565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290610a65908490611d19565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461099283600089898989611371565b8151835114610ae65760405162461bcd60e51b815260040161039c90611d2c565b6001600160a01b038416610b0c5760405162461bcd60e51b815260040161039c90611d74565b33610b1b818787878787611363565b60005b8451811015610c01576000858281518110610b3b57610b3b611c2e565b602002602001015190506000858381518110610b5957610b59611c2e565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610ba95760405162461bcd60e51b815260040161039c90611db9565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610be6908490611d19565b9250508190555050505080610bfa90611c5a565b9050610b1e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c51929190611e03565b60405180910390a46109948187878787876114cc565b6003546001600160a01b031633146106b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039c565b60026106be8282611e77565b6001600160a01b038316610cf35760405162461bcd60e51b815260040161039c90611f37565b8051825114610d145760405162461bcd60e51b815260040161039c90611d2c565b6000339050610d3781856000868660405180602001604052806000815250611363565b60005b8351811015610dfc576000848281518110610d5757610d57611c2e565b602002602001015190506000848381518110610d7557610d75611c2e565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610dc55760405162461bcd60e51b815260040161039c90611f7a565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610df481611c5a565b915050610d3a565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610e4d929190611e03565b60405180910390a460408051602081019091526000905250505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610f2f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161039c565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b606081600003610fc35750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610fed5780610fd781611c5a565b9150610fe69050600a83611fbe565b9150610fc7565b60008167ffffffffffffffff811115611008576110086116b6565b6040519080825280601f01601f191660200182016040528015611032576020820181803683370190505b509050815b85156110bf57611048600182611fe0565b90506000611057600a88611fbe565b61106290600a611ff3565b61106c9088611fe0565b61107790603061200a565b905060008160f81b90508084848151811061109457611094611c2e565b60200101906001600160f81b031916908160001a9053506110b6600a89611fbe565b97505050611037565b50949350505050565b6001600160a01b0384166110ee5760405162461bcd60e51b815260040161039c90611d74565b3360006110fa85611318565b9050600061110785611318565b9050611117838989858589611363565b6000868152602081815260408083206001600160a01b038c168452909152902054858110156111585760405162461bcd60e51b815260040161039c90611db9565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611195908490611d19565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111f5848a8a8a8a8a611371565b505050505050505050565b6001600160a01b0383166112265760405162461bcd60e51b815260040161039c90611f37565b33600061123284611318565b9050600061123f84611318565b905061125f83876000858560405180602001604052806000815250611363565b6000858152602081815260408083206001600160a01b038a168452909152902054848110156112a05760405162461bcd60e51b815260040161039c90611f7a565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610992565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061135257611352611c2e565b602090810291909101015292915050565b610994868686868686610819565b6001600160a01b0384163b156109945760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113b59089908990889088908890600401612023565b6020604051808303816000875af19250505080156113f0575060408051601f3d908101601f191682019092526113ed91810190612068565b60015b61149c576113fc612085565b806308c379a00361143557506114106120a1565b8061141b5750611437565b8060405162461bcd60e51b815260040161039c9190611670565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161039c565b6001600160e01b0319811663f23a6e6160e01b146109925760405162461bcd60e51b815260040161039c9061212b565b6001600160a01b0384163b156109945760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906115109089908990889088908890600401612173565b6020604051808303816000875af192505050801561154b575060408051601f3d908101601f1916820190925261154891810190612068565b60015b611557576113fc612085565b6001600160e01b0319811663bc197c8160e01b146109925760405162461bcd60e51b815260040161039c9061212b565b80356001600160a01b038116811461159e57600080fd5b919050565b600080604083850312156115b657600080fd5b6115bf83611587565b946020939093013593505050565b6001600160e01b03198116811461065957600080fd5b6000602082840312156115f557600080fd5b8135611600816115cd565b9392505050565b60006020828403121561161957600080fd5b5035919050565b60005b8381101561163b578181015183820152602001611623565b50506000910152565b6000815180845261165c816020860160208601611620565b601f01601f19169290920160200192915050565b6020815260006116006020830184611644565b60008060006060848603121561169857600080fd5b6116a184611587565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156116f2576116f26116b6565b6040525050565b600067ffffffffffffffff821115611713576117136116b6565b5060051b60200190565b600082601f83011261172e57600080fd5b8135602061173b826116f9565b60405161174882826116cc565b83815260059390931b850182019282810191508684111561176857600080fd5b8286015b84811015611783578035835291830191830161176c565b509695505050505050565b600067ffffffffffffffff8311156117a8576117a86116b6565b6040516117bf601f8501601f1916602001826116cc565b8091508381528484840111156117d457600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126117fd57600080fd5b6116008383356020850161178e565b600080600080600060a0868803121561182457600080fd5b61182d86611587565b945061183b60208701611587565b9350604086013567ffffffffffffffff8082111561185857600080fd5b61186489838a0161171d565b9450606088013591508082111561187a57600080fd5b61188689838a0161171d565b9350608088013591508082111561189c57600080fd5b506118a9888289016117ec565b9150509295509295909350565b600080604083850312156118c957600080fd5b823567ffffffffffffffff808211156118e157600080fd5b818501915085601f8301126118f557600080fd5b81356020611902826116f9565b60405161190f82826116cc565b83815260059390931b850182019282810191508984111561192f57600080fd5b948201945b838610156119545761194586611587565b82529482019490820190611934565b9650508601359250508082111561196a57600080fd5b506119778582860161171d565b9150509250929050565b600081518084526020808501945080840160005b838110156119b157815187529582019590820190600101611995565b509495945050505050565b6020815260006116006020830184611981565b6000602082840312156119e157600080fd5b813567ffffffffffffffff8111156119f857600080fd5b8201601f81018413611a0957600080fd5b611a188482356020840161178e565b949350505050565b600080600060608486031215611a3557600080fd5b611a3e84611587565b9250602084013567ffffffffffffffff80821115611a5b57600080fd5b611a678783880161171d565b93506040860135915080821115611a7d57600080fd5b50611a8a8682870161171d565b9150509250925092565b60008060408385031215611aa757600080fd5b611ab083611587565b915060208301358015158114611ac557600080fd5b809150509250929050565b60008060408385031215611ae357600080fd5b82359150611af360208401611587565b90509250929050565b60008060408385031215611b0f57600080fd5b611b1883611587565b9150611af360208401611587565b600080600080600060a08688031215611b3e57600080fd5b611b4786611587565b9450611b5560208701611587565b93506040860135925060608601359150608086013567ffffffffffffffff811115611b7f57600080fd5b6118a9888289016117ec565b600060208284031215611b9d57600080fd5b61160082611587565b600181811c90821680611bba57607f821691505b602082108103611bda57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611c6c57611c6c611c44565b5060010190565b6000808454611c8181611ba6565b60018281168015611c995760018114611cae57611cdd565b60ff1984168752821515830287019450611cdd565b8860005260208060002060005b85811015611cd45781548a820152908401908201611cbb565b50505082870194505b50602f60f81b845286519250611cf98382860160208a01611620565b64173539b7b760d91b939092019182019290925260060195945050505050565b808201808211156103c8576103c8611c44565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000611e166040830185611981565b8281036020840152611e288185611981565b95945050505050565b601f8211156104cd57600081815260208120601f850160051c81016020861015611e585750805b601f850160051c820191505b8181101561099457828155600101611e64565b815167ffffffffffffffff811115611e9157611e916116b6565b611ea581611e9f8454611ba6565b84611e31565b602080601f831160018114611eda5760008415611ec25750858301515b600019600386901b1c1916600185901b178555610994565b600085815260208120601f198616915b82811015611f0957888601518255948401946001909101908401611eea565b5085821015611f275787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b600082611fdb57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156103c8576103c8611c44565b80820281158282048414176103c8576103c8611c44565b60ff81811683821601908111156103c8576103c8611c44565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061205d90830184611644565b979650505050505050565b60006020828403121561207a57600080fd5b8151611600816115cd565b600060033d111561209e5760046000803e5060005160e01c5b90565b600060443d10156120af5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156120df57505050505090565b82850191508151818111156120f75750505050505090565b843d87010160208285010111156121115750505050505090565b612120602082860101876116cc565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061219f90830186611981565b82810360608401526121b18186611981565b905082810360808401526121c58185611644565b9897505050505050505056fea2646970667358221220c900510f0821a538ea24d9fad9ebd08d8f728cd301fcab1b532b389c56fafb0964736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xD4822FBF EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xA3CD71F6 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xC7EAEF1E EQ PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x2BAF2ACB EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x180C JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x19CF JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A94 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x14E PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14E PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1607 JUMP JUMPDEST PUSH2 0x6C2 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3FF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3C8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x459 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4EE JUMPI POP PUSH2 0x4EE DUP6 CALLER PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x517 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xAC5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x59F JUMPI PUSH2 0x59F PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x640 JUMPI PUSH2 0x613 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5EC JUMPI PUSH2 0x5EC PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x606 JUMPI PUSH2 0x606 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x335 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x625 JUMPI PUSH2 0x625 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x639 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP PUSH2 0x5CE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x650 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x659 DUP2 PUSH2 0xCC1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x678 JUMPI POP PUSH2 0x678 DUP4 CALLER PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 DUP4 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x6B1 PUSH1 0x0 PUSH2 0xE6A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6BE CALLER DUP4 DUP4 PUSH2 0xEBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH2 0x6CF DUP4 PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E0 SWAP3 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FE PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x6BE CALLER DUP3 DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x737 JUMPI POP PUSH2 0x737 DUP6 CALLER PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x517 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10C8 JUMP JUMPDEST PUSH2 0x768 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST PUSH2 0x659 DUP2 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x7F2 JUMPI POP PUSH2 0x7F2 DUP4 CALLER PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x4CD DUP4 DUP4 DUP4 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x8A0 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x89E JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x845 JUMPI PUSH2 0x845 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x863 JUMPI PUSH2 0x863 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x888 SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x897 SWAP1 POP DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP PUSH2 0x82A JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x994 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8CE JUMPI PUSH2 0x8CE PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x8EC JUMPI PUSH2 0x8EC PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E74206578636565647320746F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x616C537570706C79 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0x98B DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP PUSH2 0x8B1 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xA17 DUP6 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA24 DUP6 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH2 0xA35 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xA65 SWAP1 DUP5 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x992 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1371 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1D74 JUMP JUMPDEST CALLER PUSH2 0xB1B DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xC01 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB3B JUMPI PUSH2 0xB3B PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB59 JUMPI PUSH2 0xB59 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xBE6 SWAP1 DUP5 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xBFA SWAP1 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP PUSH2 0xB1E JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xC51 SWAP3 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x994 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x2 PUSH2 0x6BE DUP3 DUP3 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1F37 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0xD37 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD57 JUMPI PUSH2 0xD57 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD75 JUMPI PUSH2 0xD75 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1F7A JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0xDF4 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD3A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xE4D SWAP3 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xF2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xFC3 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xFED JUMPI DUP1 PUSH2 0xFD7 DUP2 PUSH2 0x1C5A JUMP JUMPDEST SWAP2 POP PUSH2 0xFE6 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1FBE JUMP JUMPDEST SWAP2 POP PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1008 JUMPI PUSH2 0x1008 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1032 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x10BF JUMPI PUSH2 0x1048 PUSH1 0x1 DUP3 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1057 PUSH1 0xA DUP9 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x1062 SWAP1 PUSH1 0xA PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0x106C SWAP1 DUP9 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x1077 SWAP1 PUSH1 0x30 PUSH2 0x200A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1094 JUMPI PUSH2 0x1094 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x10B6 PUSH1 0xA DUP10 PUSH2 0x1FBE JUMP JUMPDEST SWAP8 POP POP POP PUSH2 0x1037 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1D74 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x10FA DUP6 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1107 DUP6 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH2 0x1117 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1195 SWAP1 DUP5 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11F5 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1371 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1226 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1F37 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1232 DUP5 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x123F DUP5 PUSH2 0x1318 JUMP JUMPDEST SWAP1 POP PUSH2 0x125F DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x1F7A JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1352 JUMPI PUSH2 0x1352 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x994 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x13B5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13F0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13ED SWAP2 DUP2 ADD SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x149C JUMPI PUSH2 0x13FC PUSH2 0x2085 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1435 JUMPI POP PUSH2 0x1410 PUSH2 0x20A1 JUMP JUMPDEST DUP1 PUSH2 0x141B JUMPI POP PUSH2 0x1437 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1510 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x154B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1548 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1557 JUMPI PUSH2 0x13FC PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP1 PUSH2 0x212B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15BF DUP4 PUSH2 0x1587 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1600 DUP2 PUSH2 0x15CD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x163B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1623 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x165C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1600 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A1 DUP5 PUSH2 0x1587 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x16F2 JUMPI PUSH2 0x16F2 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1713 JUMPI PUSH2 0x1713 PUSH2 0x16B6 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x173B DUP3 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1748 DUP3 DUP3 PUSH2 0x16CC JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1783 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x176C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x17A8 JUMPI PUSH2 0x17A8 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17BF PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x16CC JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1600 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x182D DUP7 PUSH2 0x1587 JUMP JUMPDEST SWAP5 POP PUSH2 0x183B PUSH1 0x20 DUP8 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1864 DUP10 DUP4 DUP11 ADD PUSH2 0x171D JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x187A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1886 DUP10 DUP4 DUP11 ADD PUSH2 0x171D JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x189C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A9 DUP9 DUP3 DUP10 ADD PUSH2 0x17EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1902 DUP3 PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190F DUP3 DUP3 PUSH2 0x16CC JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x192F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1954 JUMPI PUSH2 0x1945 DUP7 PUSH2 0x1587 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1934 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x196A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1977 DUP6 DUP3 DUP7 ADD PUSH2 0x171D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19B1 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1995 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1600 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1A09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A18 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x178E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3E DUP5 PUSH2 0x1587 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A67 DUP8 DUP4 DUP9 ADD PUSH2 0x171D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8A DUP7 DUP3 DUP8 ADD PUSH2 0x171D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AB0 DUP4 PUSH2 0x1587 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1AC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1AF3 PUSH1 0x20 DUP5 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B18 DUP4 PUSH2 0x1587 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF3 PUSH1 0x20 DUP5 ADD PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B47 DUP7 PUSH2 0x1587 JUMP JUMPDEST SWAP5 POP PUSH2 0x1B55 PUSH1 0x20 DUP8 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18A9 DUP9 DUP3 DUP10 ADD PUSH2 0x17EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1600 DUP3 PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1BBA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BDA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C6C JUMPI PUSH2 0x1C6C PUSH2 0x1C44 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x1C81 DUP2 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1C99 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1CAE JUMPI PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1CDD JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1CD4 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1CBB JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP PUSH1 0x2F PUSH1 0xF8 SHL DUP5 MSTORE DUP7 MLOAD SWAP3 POP PUSH2 0x1CF9 DUP4 DUP3 DUP7 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x1620 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x6 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C8 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E16 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1981 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1E28 DUP2 DUP6 PUSH2 0x1981 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1E58 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x994 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E64 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E91 JUMPI PUSH2 0x1E91 PUSH2 0x16B6 JUMP JUMPDEST PUSH2 0x1EA5 DUP2 PUSH2 0x1E9F DUP5 SLOAD PUSH2 0x1BA6 JUMP JUMPDEST DUP5 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1EDA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EC2 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x994 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F09 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1EEA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1F27 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FDB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C8 PUSH2 0x1C44 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3C8 JUMPI PUSH2 0x3C8 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C8 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x205D SWAP1 DUP4 ADD DUP5 PUSH2 0x1644 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x207A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1600 DUP2 PUSH2 0x15CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x209E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x20AF JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x20DF JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x20F7 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2111 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2120 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x16CC JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x219F SWAP1 DUP4 ADD DUP7 PUSH2 0x1981 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x21B1 DUP2 DUP7 PUSH2 0x1981 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x21C5 DUP2 DUP6 PUSH2 0x1644 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 STOP MLOAD 0xF ADDMOD 0x21 0xA5 CODESIZE 0xEA 0x24 0xD9 STATICCALL 0xD9 0xEB 0xD0 DUP14 DUP16 PUSH19 0x8CD301FCAB1B532B389C56FAFB0964736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ","sourceMap":"329:1950:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:1;;;;;;:::i;:::-;;:::i;:::-;;;597:25:12;;;585:2;570:18;2185:227:1;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:12;;1177:22;1159:41;;1147:2;1132:18;1236:305:1;1019:187:12;1940:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1077:134:11:-;;;;;;:::i;:::-;;:::i;:::-;;4042:426:1;;;;;;:::i;:::-;;:::i;2569:486::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;901:120:5:-;;;;;;:::i;:::-;958:4;785:16;;;:12;:16;;;;;;-1:-1:-1;;;901:120:5;503:91:11;;;;;;:::i;:::-;;:::i;699:317:4:-;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;1201:85::-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:0;;;8622:51:12;;8610:2;8595:18;1201:85:0;8476:203:12;3123:153:1;;;;;;:::i;:::-;;:::i;403:33:11:-;;435:1;403:33;;697:111:5;;;;;;:::i;:::-;759:7;785:16;;;:12;:16;;;;;;;697:111;442:32:11;;473:1;442:32;;1761:156;;;;;;:::i;:::-;;:::i;897:174::-;;;;;;:::i;:::-;;:::i;3343:166:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3465:27:1;;;3442:4;3465:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3343:166;3576:394;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;408:285:4:-;;;;;;:::i;:::-;;:::i;2185:227:1:-;2271:7;-1:-1:-1;;;;;2298:21:1;;2290:76;;;;-1:-1:-1;;;2290:76:1;;10564:2:12;2290:76:1;;;10546:21:12;10603:2;10583:18;;;10576:30;10642:34;10622:18;;;10615:62;-1:-1:-1;;;10693:18:12;;;10686:40;10743:19;;2290:76:1;;;;;;;;;-1:-1:-1;2383:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:1;;;;;;;;;;2185:227;;;;;:::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:1;;-1:-1:-1;;;1373:41:1;;:109;;-1:-1:-1;;;;;;;1430:52:1;;-1:-1:-1;;;1430:52:1;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1498:36:1;829:155:9;1940:103:1;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;1077:134:11:-;1171:33;1177:3;1183:6;1191:8;1171:33;;;;;;;;;;;;:5;:33::i;:::-;1077:134;;;:::o;4042:426:1:-;-1:-1:-1;;;;;4267:20:1;;719:10:8;4267:20:1;;:60;;-1:-1:-1;4291:36:1;4308:4;719:10:8;3343:166:1;:::i;4291:36::-;4246:153;;;;-1:-1:-1;;;4246:153:1;;;;;;;:::i;:::-;4409:52;4432:4;4438:2;4442:3;4447:7;4456:4;4409:22;:52::i;:::-;4042:426;;;;;:::o;2569:486::-;2702:16;2757:3;:10;2738:8;:15;:29;2730:83;;;;-1:-1:-1;;;2730:83:1;;11775:2:12;2730:83:1;;;11757:21:12;11814:2;11794:18;;;11787:30;11853:34;11833:18;;;11826:62;-1:-1:-1;;;11904:18:12;;;11897:39;11953:19;;2730:83:1;11573:405:12;2730:83:1;2824:30;2871:8;:15;2857:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:30:1;;2824:63;;2903:9;2898:120;2922:8;:15;2918:1;:19;2898:120;;;2977:30;2987:8;2996:1;2987:11;;;;;;;;:::i;:::-;;;;;;;3000:3;3004:1;3000:6;;;;;;;;:::i;:::-;;;;;;;2977:9;:30::i;:::-;2958:13;2972:1;2958:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2939:3;;;:::i;:::-;;;2898:120;;;-1:-1:-1;3035:13:1;2569:486;-1:-1:-1;;;2569:486:1:o;503:91:11:-;1094:13:0;:11;:13::i;:::-;572:15:11::1;580:6;572:7;:15::i;:::-;503:91:::0;:::o;699:317:4:-;-1:-1:-1;;;;;828:23:4;;719:10:8;828:23:4;;:66;;-1:-1:-1;855:39:4;872:7;719:10:8;3343:166:1;:::i;855:39:4:-;807:159;;;;-1:-1:-1;;;807:159:4;;;;;;;:::i;:::-;977:32;988:7;997:3;1002:6;977:10;:32::i;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;3123:153:1:-;3217:52;719:10:8;3250:8:1;3260;3217:18;:52::i;:::-;3123:153;;:::o;1761:156:11:-;1817:13;1869:7;1883:18;1893:7;1883:9;:18::i;:::-;1852:59;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1838:74;;1761:156;;;:::o;897:174::-;1094:13:0;:11;:13::i;:::-;1008:56:11::1;1026:10;1038:9;1049:7;1058:1;1008:56;;;;;;;;;;;::::0;:17:::1;:56::i;3576:394:1:-:0;-1:-1:-1;;;;;3776:20:1;;719:10:8;3776:20:1;;:60;;-1:-1:-1;3800:36:1;3817:4;719:10:8;3343:166:1;:::i;3800:36::-;3755:153;;;;-1:-1:-1;;;3755:153:1;;;;;;;:::i;:::-;3918:45;3936:4;3942:2;3946;3950:6;3958:4;3918:17;:45::i;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;14042:2:12;2154:73:0::1;::::0;::::1;14024:21:12::0;14081:2;14061:18;;;14054:30;14120:34;14100:18;;;14093:62;-1:-1:-1;;;14171:18:12;;;14164:36;14217:19;;2154:73:0::1;13840:402:12::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;408:285:4:-:0;-1:-1:-1;;;;;512:23:4;;719:10:8;512:23:4;;:66;;-1:-1:-1;539:39:4;556:7;719:10:8;3343:166:1;:::i;539:39:4:-;491:159;;;;-1:-1:-1;;;491:159:4;;;;;;;:::i;:::-;661:25;667:7;676:2;680:5;661;:25::i;1091:904:5:-;-1:-1:-1;;;;;1403:18:5;;1399:156;;1442:9;1437:108;1461:3;:10;1457:1;:14;1437:108;;;1520:7;1528:1;1520:10;;;;;;;;:::i;:::-;;;;;;;1496:12;:20;1509:3;1513:1;1509:6;;;;;;;;:::i;:::-;;;;;;;1496:20;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;1473:3:5;;-1:-1:-1;1473:3:5;;:::i;:::-;;;1437:108;;;;1399:156;-1:-1:-1;;;;;1569:16:5;;1565:424;;1606:9;1601:378;1625:3;:10;1621:1;:14;1601:378;;;1660:10;1673:3;1677:1;1673:6;;;;;;;;:::i;:::-;;;;;;;1660:19;;1697:14;1714:7;1722:1;1714:10;;;;;;;;:::i;:::-;;;;;;;1697:27;;1742:14;1759:12;:16;1772:2;1759:16;;;;;;;;;;;;1742:33;;1811:6;1801;:16;;1793:69;;;;-1:-1:-1;;;1793:69:5;;14579:2:12;1793:69:5;;;14561:21:12;14618:2;14598:18;;;14591:30;14657:34;14637:18;;;14630:62;-1:-1:-1;;;14708:18:12;;;14701:38;14756:19;;1793:69:5;14377:404:12;1793:69:5;1912:16;;;;:12;:16;;;;;;1931:15;;1912:34;;1637:3;;;:::i;:::-;;;1601:378;;;;1565:424;1091:904;;;;;;:::o;1412:320:7:-;-1:-1:-1;;;;;1702:19:7;;:23;;;1412:320::o;8608:671:1:-;-1:-1:-1;;;;;8717:16:1;;8709:62;;;;-1:-1:-1;;;8709:62:1;;14988:2:12;8709:62:1;;;14970:21:12;15027:2;15007:18;;;15000:30;15066:34;15046:18;;;15039:62;-1:-1:-1;;;15117:18:12;;;15110:31;15158:19;;8709:62:1;14786:397:12;8709:62:1;719:10:8;8782:16:1;8846:21;8864:2;8846:17;:21::i;:::-;8823:44;;8877:24;8904:25;8922:6;8904:17;:25::i;:::-;8877:52;;8940:66;8961:8;8979:1;8983:2;8987:3;8992:7;9001:4;8940:20;:66::i;:::-;9017:9;:13;;;;;;;;;;;-1:-1:-1;;;;;9017:17:1;;;;;;;;;:27;;9038:6;;9017:9;:27;;9038:6;;9017:27;:::i;:::-;;;;-1:-1:-1;;9059:52:1;;;15362:25:12;;;15418:2;15403:18;;15396:34;;;-1:-1:-1;;;;;9059:52:1;;;;9092:1;;9059:52;;;;;;15335:18:12;9059:52:1;;;;;;;9198:74;9229:8;9247:1;9251:2;9255;9259:6;9267:4;9198:30;:74::i;6211:1115::-;6431:7;:14;6417:3;:10;:28;6409:81;;;;-1:-1:-1;;;6409:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;6508:16:1;;6500:66;;;;-1:-1:-1;;;6500:66:1;;;;;;;:::i;:::-;719:10:8;6619:60:1;719:10:8;6650:4:1;6656:2;6660:3;6665:7;6674:4;6619:20;:60::i;:::-;6695:9;6690:411;6714:3;:10;6710:1;:14;6690:411;;;6745:10;6758:3;6762:1;6758:6;;;;;;;;:::i;:::-;;;;;;;6745:19;;6778:14;6795:7;6803:1;6795:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6820:19;6842:13;;;;;;;;;;-1:-1:-1;;;;;6842:19:1;;;;;;;;;;;;6795:10;;-1:-1:-1;6883:21:1;;;;6875:76;;;;-1:-1:-1;;;6875:76:1;;;;;;;:::i;:::-;6993:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6993:19:1;;;;;;;;;;7015:20;;;6993:42;;7063:17;;;;;;;:27;;7015:20;;6993:9;7063:27;;7015:20;;7063:27;:::i;:::-;;;;;;;;6731:370;;;6726:3;;;;:::i;:::-;;;6690:411;;;;7146:2;-1:-1:-1;;;;;7116:47:1;7140:4;-1:-1:-1;;;;;7116:47:1;7130:8;-1:-1:-1;;;;;7116:47:1;;7150:3;7155:7;7116:47;;;;;;;:::i;:::-;;;;;;;;7244:75;7280:8;7290:4;7296:2;7300:3;7305:7;7314:4;7244:35;:75::i;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:8;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;17339:2:12;1414:68:0;;;17321:21:12;;;17358:18;;;17351:30;17417:34;17397:18;;;17390:62;17469:18;;1414:68:0;17137:356:12;8149:86:1;8215:4;:13;8222:6;8215:4;:13;:::i;11741:913::-;-1:-1:-1;;;;;11858:18:1;;11850:66;;;;-1:-1:-1;;;11850:66:1;;;;;;;:::i;:::-;11948:7;:14;11934:3;:10;:28;11926:81;;;;-1:-1:-1;;;11926:81:1;;;;;;;:::i;:::-;12018:16;719:10:8;12018:31:1;;12060:66;12081:8;12091:4;12105:1;12109:3;12114:7;12060:66;;;;;;;;;;;;:20;:66::i;:::-;12142:9;12137:364;12161:3;:10;12157:1;:14;12137:364;;;12192:10;12205:3;12209:1;12205:6;;;;;;;;:::i;:::-;;;;;;;12192:19;;12225:14;12242:7;12250:1;12242:10;;;;;;;;:::i;:::-;;;;;;;;;;;;12267:19;12289:13;;;;;;;;;;-1:-1:-1;;;;;12289:19:1;;;;;;;;;;;;12242:10;;-1:-1:-1;12330:21:1;;;;12322:70;;;;-1:-1:-1;;;12322:70:1;;;;;;;:::i;:::-;12434:9;:13;;;;;;;;;;;-1:-1:-1;;;;;12434:19:1;;;;;;;;;;12456:20;;12434:42;;12173:3;;;;:::i;:::-;;;;12137:364;;;;12554:1;-1:-1:-1;;;;;12516:55:1;12540:4;-1:-1:-1;;;;;12516:55:1;12530:8;-1:-1:-1;;;;;12516:55:1;;12558:3;12563:7;12516:55;;;;;;;:::i;:::-;;;;;;;;12582:65;;;;;;;;;12626:1;12582:65;;11840:814;11741:913;;;:::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;12790:293:1:-;12910:8;-1:-1:-1;;;;;12901:17:1;:5;-1:-1:-1;;;;;12901:17:1;;12893:71;;;;-1:-1:-1;;;12893:71:1;;20587:2:12;12893:71:1;;;20569:21:12;20626:2;20606:18;;;20599:30;20665:34;20645:18;;;20638:62;-1:-1:-1;;;20716:18:12;;;20709:39;20765:19;;12893:71:1;20385:405:12;12893:71:1;-1:-1:-1;;;;;12974:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12974:46:1;;;;;;;;;;13035:41;;1159::12;;;13035::1;;1132:18:12;13035:41:1;;;;;;;12790:293;;;:::o;1250:476:11:-;1304:27;1343:2;1349:1;1343:7;1339:38;;-1:-1:-1;;1360:10:11;;;;;;;;;;;;-1:-1:-1;;;1360:10:11;;;;;1250:476::o;1339:38::-;1394:2;1382:9;1419:50;1426:6;;1419:50;;1442:5;;;;:::i;:::-;;-1:-1:-1;1455:7:11;;-1:-1:-1;1460:2:11;1455:7;;:::i;:::-;;;1419:50;;;1474:17;1504:3;1494:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1494:14:11;-1:-1:-1;1474:34:11;-1:-1:-1;1526:3:11;1535:162;1542:7;;1535:162;;1563:5;1567:1;1563;:5;:::i;:::-;1559:9;-1:-1:-1;1576:10:11;1607:7;1612:2;1607;:7;:::i;:::-;1606:14;;1618:2;1606:14;:::i;:::-;1601:19;;:2;:19;:::i;:::-;1590:31;;:2;:31;:::i;:::-;1576:46;;1630:9;1649:4;1642:12;;1630:24;;1672:2;1662:4;1667:1;1662:7;;;;;;;;:::i;:::-;;;;:12;-1:-1:-1;;;;;1662:12:11;;;;;;;;-1:-1:-1;1682:8:11;1688:2;1682:8;;:::i;:::-;;;1551:146;;1535:162;;;-1:-1:-1;1716:4:11;1250:476;-1:-1:-1;;;;1250:476:11:o;4918:947:1:-;-1:-1:-1;;;;;5099:16:1;;5091:66;;;;-1:-1:-1;;;5091:66:1;;;;;;;:::i;:::-;719:10:8;5168:16:1;5232:21;5250:2;5232:17;:21::i;:::-;5209:44;;5263:24;5290:25;5308:6;5290:17;:25::i;:::-;5263:52;;5326:60;5347:8;5357:4;5363:2;5367:3;5372:7;5381:4;5326:20;:60::i;:::-;5397:19;5419:13;;;;;;;;;;;-1:-1:-1;;;;;5419:19:1;;;;;;;;;;5456:21;;;;5448:76;;;;-1:-1:-1;;;5448:76:1;;;;;;;:::i;:::-;5558:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5558:19:1;;;;;;;;;;5580:20;;;5558:42;;5620:17;;;;;;;:27;;5580:20;;5558:9;5620:27;;5580:20;;5620:27;:::i;:::-;;;;-1:-1:-1;;5663:46:1;;;15362:25:12;;;15418:2;15403:18;;15396:34;;;-1:-1:-1;;;;;5663:46:1;;;;;;;;;;;;;;15335:18:12;5663:46:1;;;;;;;5790:68;5821:8;5831:4;5837:2;5841;5845:6;5853:4;5790:30;:68::i;:::-;5081:784;;;;4918:947;;;;;:::o;10746:756::-;-1:-1:-1;;;;;10838:18:1;;10830:66;;;;-1:-1:-1;;;10830:66:1;;;;;;;:::i;:::-;719:10:8;10907:16:1;10971:21;10989:2;10971:17;:21::i;:::-;10948:44;;11002:24;11029:25;11047:6;11029:17;:25::i;:::-;11002:52;;11065:66;11086:8;11096:4;11110:1;11114:3;11119:7;11065:66;;;;;;;;;;;;:20;:66::i;:::-;11142:19;11164:13;;;;;;;;;;;-1:-1:-1;;;;;11164:19:1;;;;;;;;;;11201:21;;;;11193:70;;;;-1:-1:-1;;;11193:70:1;;;;;;;:::i;:::-;11297:9;:13;;;;;;;;;;;-1:-1:-1;;;;;11297:19:1;;;;;;;;;;;;11319:20;;;11297:42;;11365:54;;15362:25:12;;;15403:18;;;15396:34;;;11297:19:1;;11365:54;;;;;;15335:18:12;11365:54:1;;;;;;;11430:65;;;;;;;;;11474:1;11430:65;;;1091:904:5;16914:193:1;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:1;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:1:o;1989:288:11:-;2206:66;2233:8;2243:4;2249:2;2253:3;2258:7;2267:4;2206:26;:66::i;15385:725:1:-;-1:-1:-1;;;;;15592:13:1;;1702:19:7;:23;15588:516:1;;15627:72;;-1:-1:-1;;;15627:72:1;;-1:-1:-1;;;;;15627:38:1;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:1;;;;;;;;-1:-1:-1;;15627:72:1;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;15970:6;15963:14;;-1:-1:-1;;;15963:14:1;;;;;;;;:::i;15623:471::-;;;16017:62;;-1:-1:-1;;;16017:62:1;;23358:2:12;16017:62:1;;;23340:21:12;23397:2;23377:18;;;23370:30;23436:34;23416:18;;;23409:62;-1:-1:-1;;;23487:18:12;;;23480:50;23547:19;;16017:62:1;23156:416:12;15623:471:1;-1:-1:-1;;;;;;15748:55:1;;-1:-1:-1;;;15748:55:1;15744:152;;15827:50;;-1:-1:-1;;;15827:50:1;;;;;;;:::i;16116:792::-;-1:-1:-1;;;;;16348:13:1;;1702:19:7;:23;16344:558:1;;16383:79;;-1:-1:-1;;;16383:79:1;;-1:-1:-1;;;;;16383:43:1;;;;;:79;;16427:8;;16437:4;;16443:3;;16448:7;;16457:4;;16383:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16383:79:1;;;;;;;;-1:-1:-1;;16383:79:1;;;;;;;;;;;;:::i;:::-;;;16379:513;;;;:::i;:::-;-1:-1:-1;;;;;;16541:60:1;;-1:-1:-1;;;16541:60:1;16537:157;;16625:50;;-1:-1:-1;;;16625:50:1;;;;;;;:::i;14:173:12:-;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:12:o;633:131::-;-1:-1:-1;;;;;;707:32:12;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:12:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:12;;1211:180;-1:-1:-1;1211:180:12:o;1396:250::-;1481:1;1491:113;1505:6;1502:1;1499:13;1491:113;;;1581:11;;;1575:18;1562:11;;;1555:39;1527:2;1520:10;1491:113;;;-1:-1:-1;;1638:1:12;1620:16;;1613:27;1396:250::o;1651:271::-;1693:3;1731:5;1725:12;1758:6;1753:3;1746:19;1774:76;1843:6;1836:4;1831:3;1827:14;1820:4;1813:5;1809:16;1774:76;:::i;:::-;1904:2;1883:15;-1:-1:-1;;1879:29:12;1870:39;;;;1911:4;1866:50;;1651:271;-1:-1:-1;;1651:271:12:o;1927:220::-;2076:2;2065:9;2058:21;2039:4;2096:45;2137:2;2126:9;2122:18;2114:6;2096:45;:::i;2152:322::-;2229:6;2237;2245;2298:2;2286:9;2277:7;2273:23;2269:32;2266:52;;;2314:1;2311;2304:12;2266:52;2337:29;2356:9;2337:29;:::i;:::-;2327:39;2413:2;2398:18;;2385:32;;-1:-1:-1;2464:2:12;2449:18;;;2436:32;;2152:322;-1:-1:-1;;;2152:322:12:o;2479:127::-;2540:10;2535:3;2531:20;2528:1;2521:31;2571:4;2568:1;2561:15;2595:4;2592:1;2585:15;2611:249;2721:2;2702:13;;-1:-1:-1;;2698:27:12;2686:40;;2756:18;2741:34;;2777:22;;;2738:62;2735:88;;;2803:18;;:::i;:::-;2839:2;2832:22;-1:-1:-1;;2611:249:12:o;2865:183::-;2925:4;2958:18;2950:6;2947:30;2944:56;;;2980:18;;:::i;:::-;-1:-1:-1;3025:1:12;3021:14;3037:4;3017:25;;2865:183::o;3053:724::-;3107:5;3160:3;3153:4;3145:6;3141:17;3137:27;3127:55;;3178:1;3175;3168:12;3127:55;3214:6;3201:20;3240:4;3263:43;3303:2;3263:43;:::i;:::-;3335:2;3329:9;3347:31;3375:2;3367:6;3347:31;:::i;:::-;3413:18;;;3505:1;3501:10;;;;3489:23;;3485:32;;;3447:15;;;;-1:-1:-1;3529:15:12;;;3526:35;;;3557:1;3554;3547:12;3526:35;3593:2;3585:6;3581:15;3605:142;3621:6;3616:3;3613:15;3605:142;;;3687:17;;3675:30;;3725:12;;;;3638;;3605:142;;;-1:-1:-1;3765:6:12;3053:724;-1:-1:-1;;;;;;3053:724:12:o;3782:468::-;3846:5;3880:18;3872:6;3869:30;3866:56;;;3902:18;;:::i;:::-;3951:2;3945:9;3963:69;4020:2;3999:15;;-1:-1:-1;;3995:29:12;4026:4;3991:40;3945:9;3963:69;:::i;:::-;4050:6;4041:15;;4080:6;4072;4065:22;4120:3;4111:6;4106:3;4102:16;4099:25;4096:45;;;4137:1;4134;4127:12;4096:45;4187:6;4182:3;4175:4;4167:6;4163:17;4150:44;4242:1;4235:4;4226:6;4218;4214:19;4210:30;4203:41;;3782:468;;;;;:::o;4255:220::-;4297:5;4350:3;4343:4;4335:6;4331:17;4327:27;4317:55;;4368:1;4365;4358:12;4317:55;4390:79;4465:3;4456:6;4443:20;4436:4;4428:6;4424:17;4390:79;:::i;4480:943::-;4634:6;4642;4650;4658;4666;4719:3;4707:9;4698:7;4694:23;4690:33;4687:53;;;4736:1;4733;4726:12;4687:53;4759:29;4778:9;4759:29;:::i;:::-;4749:39;;4807:38;4841:2;4830:9;4826:18;4807:38;:::i;:::-;4797:48;;4896:2;4885:9;4881:18;4868:32;4919:18;4960:2;4952:6;4949:14;4946:34;;;4976:1;4973;4966:12;4946:34;4999:61;5052:7;5043:6;5032:9;5028:22;4999:61;:::i;:::-;4989:71;;5113:2;5102:9;5098:18;5085:32;5069:48;;5142:2;5132:8;5129:16;5126:36;;;5158:1;5155;5148:12;5126:36;5181:63;5236:7;5225:8;5214:9;5210:24;5181:63;:::i;:::-;5171:73;;5297:3;5286:9;5282:19;5269:33;5253:49;;5327:2;5317:8;5314:16;5311:36;;;5343:1;5340;5333:12;5311:36;;5366:51;5409:7;5398:8;5387:9;5383:24;5366:51;:::i;:::-;5356:61;;;4480:943;;;;;;;;:::o;5428:1208::-;5546:6;5554;5607:2;5595:9;5586:7;5582:23;5578:32;5575:52;;;5623:1;5620;5613:12;5575:52;5663:9;5650:23;5692:18;5733:2;5725:6;5722:14;5719:34;;;5749:1;5746;5739:12;5719:34;5787:6;5776:9;5772:22;5762:32;;5832:7;5825:4;5821:2;5817:13;5813:27;5803:55;;5854:1;5851;5844:12;5803:55;5890:2;5877:16;5912:4;5935:43;5975:2;5935:43;:::i;:::-;6007:2;6001:9;6019:31;6047:2;6039:6;6019:31;:::i;:::-;6085:18;;;6173:1;6169:10;;;;6161:19;;6157:28;;;6119:15;;;;-1:-1:-1;6197:19:12;;;6194:39;;;6229:1;6226;6219:12;6194:39;6253:11;;;;6273:148;6289:6;6284:3;6281:15;6273:148;;;6355:23;6374:3;6355:23;:::i;:::-;6343:36;;6306:12;;;;6399;;;;6273:148;;;6440:6;-1:-1:-1;;6484:18:12;;6471:32;;-1:-1:-1;;6515:16:12;;;6512:36;;;6544:1;6541;6534:12;6512:36;;6567:63;6622:7;6611:8;6600:9;6596:24;6567:63;:::i;:::-;6557:73;;;5428:1208;;;;;:::o;6641:435::-;6694:3;6732:5;6726:12;6759:6;6754:3;6747:19;6785:4;6814:2;6809:3;6805:12;6798:19;;6851:2;6844:5;6840:14;6872:1;6882:169;6896:6;6893:1;6890:13;6882:169;;;6957:13;;6945:26;;6991:12;;;;7026:15;;;;6918:1;6911:9;6882:169;;;-1:-1:-1;7067:3:12;;6641:435;-1:-1:-1;;;;;6641:435:12:o;7081:261::-;7260:2;7249:9;7242:21;7223:4;7280:56;7332:2;7321:9;7317:18;7309:6;7280:56;:::i;7347:450::-;7416:6;7469:2;7457:9;7448:7;7444:23;7440:32;7437:52;;;7485:1;7482;7475:12;7437:52;7525:9;7512:23;7558:18;7550:6;7547:30;7544:50;;;7590:1;7587;7580:12;7544:50;7613:22;;7666:4;7658:13;;7654:27;-1:-1:-1;7644:55:12;;7695:1;7692;7685:12;7644:55;7718:73;7783:7;7778:2;7765:16;7760:2;7756;7752:11;7718:73;:::i;:::-;7708:83;7347:450;-1:-1:-1;;;;7347:450:12:o;7802:669::-;7929:6;7937;7945;7998:2;7986:9;7977:7;7973:23;7969:32;7966:52;;;8014:1;8011;8004:12;7966:52;8037:29;8056:9;8037:29;:::i;:::-;8027:39;;8117:2;8106:9;8102:18;8089:32;8140:18;8181:2;8173:6;8170:14;8167:34;;;8197:1;8194;8187:12;8167:34;8220:61;8273:7;8264:6;8253:9;8249:22;8220:61;:::i;:::-;8210:71;;8334:2;8323:9;8319:18;8306:32;8290:48;;8363:2;8353:8;8350:16;8347:36;;;8379:1;8376;8369:12;8347:36;;8402:63;8457:7;8446:8;8435:9;8431:24;8402:63;:::i;:::-;8392:73;;;7802:669;;;;;:::o;8684:347::-;8749:6;8757;8810:2;8798:9;8789:7;8785:23;8781:32;8778:52;;;8826:1;8823;8816:12;8778:52;8849:29;8868:9;8849:29;:::i;:::-;8839:39;;8928:2;8917:9;8913:18;8900:32;8975:5;8968:13;8961:21;8954:5;8951:32;8941:60;;8997:1;8994;8987:12;8941:60;9020:5;9010:15;;;8684:347;;;;;:::o;9036:254::-;9104:6;9112;9165:2;9153:9;9144:7;9140:23;9136:32;9133:52;;;9181:1;9178;9171:12;9133:52;9217:9;9204:23;9194:33;;9246:38;9280:2;9269:9;9265:18;9246:38;:::i;:::-;9236:48;;9036:254;;;;;:::o;9295:260::-;9363:6;9371;9424:2;9412:9;9403:7;9399:23;9395:32;9392:52;;;9440:1;9437;9430:12;9392:52;9463:29;9482:9;9463:29;:::i;:::-;9453:39;;9511:38;9545:2;9534:9;9530:18;9511:38;:::i;9560:606::-;9664:6;9672;9680;9688;9696;9749:3;9737:9;9728:7;9724:23;9720:33;9717:53;;;9766:1;9763;9756:12;9717:53;9789:29;9808:9;9789:29;:::i;:::-;9779:39;;9837:38;9871:2;9860:9;9856:18;9837:38;:::i;:::-;9827:48;;9922:2;9911:9;9907:18;9894:32;9884:42;;9973:2;9962:9;9958:18;9945:32;9935:42;;10028:3;10017:9;10013:19;10000:33;10056:18;10048:6;10045:30;10042:50;;;10088:1;10085;10078:12;10042:50;10111:49;10152:7;10143:6;10132:9;10128:22;10111:49;:::i;10171:186::-;10230:6;10283:2;10271:9;10262:7;10258:23;10254:32;10251:52;;;10299:1;10296;10289:12;10251:52;10322:29;10341:9;10322:29;:::i;10773:380::-;10852:1;10848:12;;;;10895;;;10916:61;;10970:4;10962:6;10958:17;10948:27;;10916:61;11023:2;11015:6;11012:14;10992:18;10989:38;10986:161;;11069:10;11064:3;11060:20;11057:1;11050:31;11104:4;11101:1;11094:15;11132:4;11129:1;11122:15;10986:161;;10773:380;;;:::o;11158:410::-;11360:2;11342:21;;;11399:2;11379:18;;;11372:30;11438:34;11433:2;11418:18;;11411:62;-1:-1:-1;;;11504:2:12;11489:18;;11482:44;11558:3;11543:19;;11158:410::o;11983:127::-;12044:10;12039:3;12035:20;12032:1;12025:31;12075:4;12072:1;12065:15;12099:4;12096:1;12089:15;12115:127;12176:10;12171:3;12167:20;12164:1;12157:31;12207:4;12204:1;12197:15;12231:4;12228:1;12221:15;12247:135;12286:3;12307:17;;;12304:43;;12327:18;;:::i;:::-;-1:-1:-1;12374:1:12;12363:13;;12247:135::o;12513:1322::-;12891:3;12920:1;12953:6;12947:13;12983:36;13009:9;12983:36;:::i;:::-;13038:1;13055:18;;;13082:133;;;;13229:1;13224:356;;;;13048:532;;13082:133;-1:-1:-1;;13115:24:12;;13103:37;;13188:14;;13181:22;13169:35;;13160:45;;;-1:-1:-1;13082:133:12;;13224:356;13255:6;13252:1;13245:17;13285:4;13330:2;13327:1;13317:16;13355:1;13369:165;13383:6;13380:1;13377:13;13369:165;;;13461:14;;13448:11;;;13441:35;13504:16;;;;13398:10;;13369:165;;;13373:3;;;13563:6;13558:3;13554:16;13547:23;;13048:532;;-1:-1:-1;;;13596:3:12;13589:16;13636:6;13630:13;13614:29;;13652:77;13720:8;13715:2;13710:3;13706:12;13699:4;13691:6;13687:17;13652:77;:::i;:::-;-1:-1:-1;;;13748:18:12;;;;13782:11;;;13775:28;;;;13827:1;13819:10;;12513:1322;-1:-1:-1;;;;;12513:1322:12:o;14247:125::-;14312:9;;;14333:10;;;14330:36;;;14346:18;;:::i;15441:404::-;15643:2;15625:21;;;15682:2;15662:18;;;15655:30;15721:34;15716:2;15701:18;;15694:62;-1:-1:-1;;;15787:2:12;15772:18;;15765:38;15835:3;15820:19;;15441:404::o;15850:401::-;16052:2;16034:21;;;16091:2;16071:18;;;16064:30;16130:34;16125:2;16110:18;;16103:62;-1:-1:-1;;;16196:2:12;16181:18;;16174:35;16241:3;16226:19;;15850:401::o;16256:406::-;16458:2;16440:21;;;16497:2;16477:18;;;16470:30;16536:34;16531:2;16516:18;;16509:62;-1:-1:-1;;;16602:2:12;16587:18;;16580:40;16652:3;16637:19;;16256:406::o;16667:465::-;16924:2;16913:9;16906:21;16887:4;16950:56;17002:2;16991:9;16987:18;16979:6;16950:56;:::i;:::-;17054:9;17046:6;17042:22;17037:2;17026:9;17022:18;17015:50;17082:44;17119:6;17111;17082:44;:::i;:::-;17074:52;16667:465;-1:-1:-1;;;;;16667:465:12:o;17498:545::-;17600:2;17595:3;17592:11;17589:448;;;17636:1;17661:5;17657:2;17650:17;17706:4;17702:2;17692:19;17776:2;17764:10;17760:19;17757:1;17753:27;17747:4;17743:38;17812:4;17800:10;17797:20;17794:47;;;-1:-1:-1;17835:4:12;17794:47;17890:2;17885:3;17881:12;17878:1;17874:20;17868:4;17864:31;17854:41;;17945:82;17963:2;17956:5;17953:13;17945:82;;;18008:17;;;17989:1;17978:13;17945:82;;18219:1352;18345:3;18339:10;18372:18;18364:6;18361:30;18358:56;;;18394:18;;:::i;:::-;18423:97;18513:6;18473:38;18505:4;18499:11;18473:38;:::i;:::-;18467:4;18423:97;:::i;:::-;18575:4;;18639:2;18628:14;;18656:1;18651:663;;;;19358:1;19375:6;19372:89;;;-1:-1:-1;19427:19:12;;;19421:26;19372:89;-1:-1:-1;;18176:1:12;18172:11;;;18168:24;18164:29;18154:40;18200:1;18196:11;;;18151:57;19474:81;;18621:944;;18651:663;12460:1;12453:14;;;12497:4;12484:18;;-1:-1:-1;;18687:20:12;;;18805:236;18819:7;18816:1;18813:14;18805:236;;;18908:19;;;18902:26;18887:42;;19000:27;;;;18968:1;18956:14;;;;18835:19;;18805:236;;;18809:3;19069:6;19060:7;19057:19;19054:201;;;19130:19;;;19124:26;-1:-1:-1;;19213:1:12;19209:14;;;19225:3;19205:24;19201:37;19197:42;19182:58;19167:74;;19054:201;-1:-1:-1;;;;;19301:1:12;19285:14;;;19281:22;19268:36;;-1:-1:-1;18219:1352:12:o;19576:399::-;19778:2;19760:21;;;19817:2;19797:18;;;19790:30;19856:34;19851:2;19836:18;;19829:62;-1:-1:-1;;;19922:2:12;19907:18;;19900:33;19965:3;19950:19;;19576:399::o;19980:400::-;20182:2;20164:21;;;20221:2;20201:18;;;20194:30;20260:34;20255:2;20240:18;;20233:62;-1:-1:-1;;;20326:2:12;20311:18;;20304:34;20370:3;20355:19;;19980:400::o;20795:217::-;20835:1;20861;20851:132;;20905:10;20900:3;20896:20;20893:1;20886:31;20940:4;20937:1;20930:15;20968:4;20965:1;20958:15;20851:132;-1:-1:-1;20997:9:12;;20795:217::o;21017:128::-;21084:9;;;21105:11;;;21102:37;;;21119:18;;:::i;21150:168::-;21223:9;;;21254;;21271:15;;;21265:22;;21251:37;21241:71;;21292:18;;:::i;21323:148::-;21411:4;21390:12;;;21404;;;21386:31;;21429:13;;21426:39;;;21445:18;;:::i;21476:561::-;-1:-1:-1;;;;;21773:15:12;;;21755:34;;21825:15;;21820:2;21805:18;;21798:43;21872:2;21857:18;;21850:34;;;21915:2;21900:18;;21893:34;;;21735:3;21958;21943:19;;21936:32;;;21698:4;;21985:46;;22011:19;;22003:6;21985:46;:::i;:::-;21977:54;21476:561;-1:-1:-1;;;;;;;21476:561:12:o;22042:249::-;22111:6;22164:2;22152:9;22143:7;22139:23;22135:32;22132:52;;;22180:1;22177;22170:12;22132:52;22212:9;22206:16;22231:30;22255:5;22231:30;:::i;22296:179::-;22331:3;22373:1;22355:16;22352:23;22349:120;;;22419:1;22416;22413;22398:23;-1:-1:-1;22456:1:12;22450:8;22445:3;22441:18;22349:120;22296:179;:::o;22480:671::-;22519:3;22561:4;22543:16;22540:26;22537:39;;;22480:671;:::o;22537:39::-;22603:2;22597:9;-1:-1:-1;;22668:16:12;22664:25;;22661:1;22597:9;22640:50;22719:4;22713:11;22743:16;22778:18;22849:2;22842:4;22834:6;22830:17;22827:25;22822:2;22814:6;22811:14;22808:45;22805:58;;;22856:5;;;;;22480:671;:::o;22805:58::-;22893:6;22887:4;22883:17;22872:28;;22929:3;22923:10;22956:2;22948:6;22945:14;22942:27;;;22962:5;;;;;;22480:671;:::o;22942:27::-;23046:2;23027:16;23021:4;23017:27;23013:36;23006:4;22997:6;22992:3;22988:16;22984:27;22981:69;22978:82;;;23053:5;;;;;;22480:671;:::o;22978:82::-;23069:57;23120:4;23111:6;23103;23099:19;23095:30;23089:4;23069:57;:::i;:::-;-1:-1:-1;23142:3:12;;22480:671;-1:-1:-1;;;;;22480:671:12:o;23577:404::-;23779:2;23761:21;;;23818:2;23798:18;;;23791:30;23857:34;23852:2;23837:18;;23830:62;-1:-1:-1;;;23923:2:12;23908:18;;23901:38;23971:3;23956:19;;23577:404::o;23986:827::-;-1:-1:-1;;;;;24383:15:12;;;24365:34;;24435:15;;24430:2;24415:18;;24408:43;24345:3;24482:2;24467:18;;24460:31;;;24308:4;;24514:57;;24551:19;;24543:6;24514:57;:::i;:::-;24619:9;24611:6;24607:22;24602:2;24591:9;24587:18;24580:50;24653:44;24690:6;24682;24653:44;:::i;:::-;24639:58;;24746:9;24738:6;24734:22;24728:3;24717:9;24713:19;24706:51;24774:33;24800:6;24792;24774:33;:::i;:::-;24766:41;23986:827;-1:-1:-1;;;;;;;;23986:827:12:o"},"gasEstimates":{"creation":{"codeDepositCost":"1742200","executionCost":"infinite","totalCost":"infinite"},"external":{"EMAIL()":"251","MEMO()":"295","balanceOf(address,uint256)":"2700","balanceOfBatch(address[],uint256[])":"infinite","burn(address,uint256,uint256)":"infinite","burnBatch(address,uint256[],uint256[])":"infinite","exists(uint256)":"2495","isApprovedForAll(address,address)":"infinite","mintTo(address,uint256,uint256)":"infinite","owner()":"2324","renounceOwnership()":"infinite","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26728","setBaseURI(string)":"infinite","supportsInterface(bytes4)":"578","tokenURI(uint256)":"infinite","totalSupply(uint256)":"2516","transferOwnership(address)":"28446","transferTo(uint256,address)":"infinite","uri(uint256)":"infinite"},"internal":{"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","uintToStr(uint256)":"infinite"}},"methodIdentifiers":{"EMAIL()":"a3cd71f6","MEMO()":"c7eaef1e","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","exists(uint256)":"4f558e79","isApprovedForAll(address,address)":"e985e9c5","mintTo(address,uint256,uint256)":"2baf2acb","owner()":"8da5cb5b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","tokenURI(uint256)":"c87b56dd","totalSupply(uint256)":"bd85b039","transferOwnership(address)":"f2fde38b","transferTo(uint256,address)":"d4822fbf","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EMAIL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MEMO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Items.sol\":\"Items\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping(uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor(string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC1155).interfaceId ||\\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: address zero is not a valid owner\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    ) public view virtual override returns (uint256[] memory) {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeTransferFrom(from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) public virtual override {\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _balances[id][to] += amount;\\n        emit TransferSingle(operator, address(0), to, id, amount);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `from`\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `from` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n        uint256[] memory ids = _asSingletonArray(id);\\n        uint256[] memory amounts = _asSingletonArray(amount);\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[id][from] = fromBalance - amount;\\n        }\\n\\n        emit TransferSingle(operator, from, address(0), id, amount);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(from != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            unchecked {\\n                _balances[id][from] = fromBalance - amount;\\n            }\\n        }\\n\\n        emit TransferBatch(operator, from, address(0), ids, amounts);\\n\\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC1155: setting approval status for self\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual {}\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) private {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\\n                bytes4 response\\n            ) {\\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non-ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\\n * own tokens and those that they have been approved to use.\\n *\\n * _Available since v3.1._\\n */\\nabstract contract ERC1155Burnable is ERC1155 {\\n    function burn(address account, uint256 id, uint256 value) public virtual {\\n        require(\\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n\\n        _burn(account, id, value);\\n    }\\n\\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\\n        require(\\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\\n            \\\"ERC1155: caller is not token owner or approved\\\"\\n        );\\n\\n        _burnBatch(account, ids, values);\\n    }\\n}\\n\",\"keccak256\":\"0x45381337dbccfb58e9443257ba1850070be892ecacd4b0da7db4c4cfa7df0b09\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155.sol\\\";\\n\\n/**\\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\\n *\\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\\n * clearly identified. Note: While a totalSupply of 1 might mean the\\n * corresponding is an NFT, there is no guarantees that no other token with the\\n * same id are not going to be minted.\\n */\\nabstract contract ERC1155Supply is ERC1155 {\\n    mapping(uint256 => uint256) private _totalSupply;\\n\\n    /**\\n     * @dev Total amount of tokens in with a given id.\\n     */\\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\\n        return _totalSupply[id];\\n    }\\n\\n    /**\\n     * @dev Indicates whether any token exist with a given id, or not.\\n     */\\n    function exists(uint256 id) public view virtual returns (bool) {\\n        return ERC1155Supply.totalSupply(id) > 0;\\n    }\\n\\n    /**\\n     * @dev See {ERC1155-_beforeTokenTransfer}.\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        if (from == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                _totalSupply[ids[i]] += amounts[i];\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            for (uint256 i = 0; i < ids.length; ++i) {\\n                uint256 id = ids[i];\\n                uint256 amount = amounts[i];\\n                uint256 supply = _totalSupply[id];\\n                require(supply >= amount, \\\"ERC1155: burn amount exceeds totalSupply\\\");\\n                unchecked {\\n                    _totalSupply[id] = supply - amount;\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Items.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\\\";\\n\\n\\n\\ncontract Items is ERC1155, Ownable, ERC1155Burnable, ERC1155Supply {\\n\\n    uint256 public constant EMAIL = 0;\\n    uint256 public constant MEMO = 1;\\n    string baseURI;\\n\\n\\n\\n    function setBaseURI(string memory newuri) public onlyOwner {\\n        _setURI(newuri);\\n    }\\n\\n    constructor() ERC1155(\\\"https://ipfs.io/ipfs/QmUhWYBz7ifYXdKMwfd7Fzr5bUeLrjGjMEKinzVbSfm1hG/{id}.json\\\"\\n    ) {\\n        _mint(msg.sender, EMAIL, 100, \\\"\\\");\\n        _mint(msg.sender, MEMO, 100, \\\"\\\");\\n        baseURI = \\\"https://ipfs.io/ipfs/QmUhWYBz7ifYXdKMwfd7Fzr5bUeLrjGjMEKinzVbSfm1hG\\\";\\n\\n    }\\n\\n\\n    function transferTo(\\n        uint256 tokenId,\\n        address recipient\\n    ) external onlyOwner {\\n            _safeTransferFrom(msg.sender, recipient, tokenId, 1, \\\"\\\");\\n    }\\n\\n    function mintTo(address _to, uint256 _count, uint256 _tokenId) \\n        public \\n    {\\n        _mint(_to,  _count, _tokenId, \\\"\\\");\\n    }\\n\\n      // Turns uint256 into string\\n  function uintToStr(uint256 _i) internal pure returns (string memory _uintAsString) {\\n    if (_i == 0) {\\n      return '0';\\n    }\\n    uint256 j = _i;\\n    uint256 len;\\n    while (j != 0) {\\n      len++;\\n      j /= 10;\\n    }\\n    bytes memory bstr = new bytes(len);\\n    uint256 k = len;\\n    while (_i != 0) {\\n      k = k - 1;\\n      uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\\n      bytes1 b1 = bytes1(temp);\\n      bstr[k] = b1;\\n      _i /= 10;\\n    }\\n    return string(bstr);\\n  }\\n\\n  // Token URI getter function\\n  function tokenURI(uint256 tokenId) public view returns (string memory) {\\n    return string(abi.encodePacked(baseURI, '/', uintToStr(tokenId), '.json'));\\n  }\\n\\n    \\n// The following functions are overrides required by Solidity.\\n  function _beforeTokenTransfer(\\n    address operator,\\n    address from,\\n    address to,\\n    uint256[] memory ids,\\n    uint256[] memory amounts,\\n    bytes memory data\\n  ) internal override(ERC1155, ERC1155Supply) {\\n    super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n  }\\n}\",\"keccak256\":\"0xd27a3e7d0347744b59b144aaf85af8a400ab4b2728c1edd31da03e15ca27c20a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":138,"contract":"contracts/Items.sol:Items","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":144,"contract":"contracts/Items.sol:Items","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":146,"contract":"contracts/Items.sol:Items","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"},{"astId":7,"contract":"contracts/Items.sol:Items","label":"_owner","offset":0,"slot":"3","type":"t_address"},{"astId":1577,"contract":"contracts/Items.sol:Items","label":"_totalSupply","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2149,"contract":"contracts/Items.sol:Items","label":"baseURI","offset":0,"slot":"5","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}